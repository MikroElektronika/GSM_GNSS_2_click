;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 25.1.2019. 11:20:08
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x20A90000  	8361
0x0008	0x20C90000  	8393
0x000C	0x20C90000  	8393
0x0010	0x20C90000  	8393
0x0014	0x20C90000  	8393
0x0018	0x20C90000  	8393
0x001C	0x20C90000  	8393
0x0020	0x20C90000  	8393
0x0024	0x20C90000  	8393
0x0028	0x20C90000  	8393
0x002C	0x20C90000  	8393
0x0030	0x20C90000  	8393
0x0034	0x20C90000  	8393
0x0038	0x20C90000  	8393
0x003C	0x20C90000  	8393
0x0040	0x20C90000  	8393
0x0044	0x20C90000  	8393
0x0048	0x20C90000  	8393
0x004C	0x20C90000  	8393
0x0050	0x20C90000  	8393
0x0054	0x20C90000  	8393
0x0058	0x20C90000  	8393
0x005C	0x20C90000  	8393
0x0060	0x20C90000  	8393
0x0064	0x20C90000  	8393
0x0068	0x20C90000  	8393
0x006C	0x20C90000  	8393
0x0070	0x20C90000  	8393
0x0074	0x20C90000  	8393
0x0078	0x20C90000  	8393
0x007C	0x20C90000  	8393
0x0080	0x20C90000  	8393
0x0084	0x20C90000  	8393
0x0088	0x20C90000  	8393
0x008C	0x20C90000  	8393
0x0090	0x20C90000  	8393
0x0094	0x20C90000  	8393
0x0098	0x20C90000  	8393
0x009C	0x20C90000  	8393
0x00A0	0x20C90000  	8393
0x00A4	0x20C90000  	8393
0x00A8	0x20C90000  	8393
0x00AC	0x20C90000  	8393
0x00B0	0x207D0000  	8317
0x00B4	0x20C90000  	8393
0x00B8	0x20C90000  	8393
0x00BC	0x20C90000  	8393
0x00C0	0x20C90000  	8393
0x00C4	0x20C90000  	8393
0x00C8	0x20C90000  	8393
0x00CC	0x20C90000  	8393
0x00D0	0x20C90000  	8393
0x00D4	0x20C90000  	8393
0x00D8	0x20C90000  	8393
0x00DC	0x20C90000  	8393
0x00E0	0x20C90000  	8393
0x00E4	0x20C90000  	8393
0x00E8	0x20C90000  	8393
0x00EC	0x20C90000  	8393
0x00F0	0x20C90000  	8393
0x00F4	0x20C90000  	8393
0x00F8	0x20C90000  	8393
0x00FC	0x20C90000  	8393
0x0100	0x20C90000  	8393
0x0104	0x20C90000  	8393
0x0108	0x20C90000  	8393
0x010C	0x20C90000  	8393
0x0110	0x20C90000  	8393
0x0114	0x20C90000  	8393
0x0118	0x20C90000  	8393
0x011C	0x20C90000  	8393
0x0120	0x20C90000  	8393
0x0124	0x20C90000  	8393
0x0128	0x20C90000  	8393
0x012C	0x20C90000  	8393
0x0130	0x20C90000  	8393
0x0134	0x20C90000  	8393
0x0138	0x20C90000  	8393
0x013C	0x20C90000  	8393
0x0140	0x20C90000  	8393
0x0144	0x20C90000  	8393
0x0148	0x20C90000  	8393
0x014C	0x20C90000  	8393
; end of ____SysVT
_main:
;Click_GSM_GNSS_2_STM.c, 128 :: 		void main()
0x20A8	0xF000F812  BL	8400
0x20AC	0xF000FA78  BL	9632
0x20B0	0xF000F8B0  BL	8724
0x20B4	0xF000FA26  BL	9476
;Click_GSM_GNSS_2_STM.c, 130 :: 		systemInit();
0x20B8	0xF7FFFF2A  BL	_systemInit+0
;Click_GSM_GNSS_2_STM.c, 131 :: 		applicationInit();
0x20BC	0xF7FFFF5C  BL	_applicationInit+0
;Click_GSM_GNSS_2_STM.c, 133 :: 		while (1)
L_main6:
;Click_GSM_GNSS_2_STM.c, 135 :: 		applicationTask();
0x20C0	0xF7FFFE66  BL	_applicationTask+0
;Click_GSM_GNSS_2_STM.c, 136 :: 		}
0x20C4	0xE7FC    B	L_main6
;Click_GSM_GNSS_2_STM.c, 137 :: 		}
L_end_main:
L__main_end_loop:
0x20C6	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x2068	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x206A	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x206E	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x2072	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x2076	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x2078	0xB001    ADD	SP, SP, #4
0x207A	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x202C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x202E	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x2032	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x2036	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x203A	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x203C	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x2040	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x2042	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x2044	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x2046	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x204A	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x204E	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x2050	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x2054	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x2056	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x2058	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x205C	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x2060	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x2062	0xB001    ADD	SP, SP, #4
0x2064	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_GSM_GNSS_2_STM.c, 66 :: 		void systemInit()
0x1F10	0xB081    SUB	SP, SP, #4
0x1F12	0xF8CDE000  STR	LR, [SP, #0]
;Click_GSM_GNSS_2_STM.c, 68 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_AN_PIN, _GPIO_INPUT );
0x1F16	0x2201    MOVS	R2, #1
0x1F18	0x2100    MOVS	R1, #0
0x1F1A	0x2000    MOVS	R0, #0
0x1F1C	0xF7FFFD96  BL	_mikrobus_gpioInit+0
;Click_GSM_GNSS_2_STM.c, 69 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_PWM_PIN, _GPIO_INPUT );
0x1F20	0x2201    MOVS	R2, #1
0x1F22	0x2106    MOVS	R1, #6
0x1F24	0x2000    MOVS	R0, #0
0x1F26	0xF7FFFD91  BL	_mikrobus_gpioInit+0
;Click_GSM_GNSS_2_STM.c, 70 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT );
0x1F2A	0x2201    MOVS	R2, #1
0x1F2C	0x2107    MOVS	R1, #7
0x1F2E	0x2000    MOVS	R0, #0
0x1F30	0xF7FFFD8C  BL	_mikrobus_gpioInit+0
;Click_GSM_GNSS_2_STM.c, 71 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_RST_PIN, _GPIO_OUTPUT );
0x1F34	0x2200    MOVS	R2, #0
0x1F36	0x2101    MOVS	R1, #1
0x1F38	0x2000    MOVS	R0, #0
0x1F3A	0xF7FFFD87  BL	_mikrobus_gpioInit+0
;Click_GSM_GNSS_2_STM.c, 72 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_CS_PIN, _GPIO_OUTPUT );
0x1F3E	0x2200    MOVS	R2, #0
0x1F40	0x2102    MOVS	R1, #2
0x1F42	0x2000    MOVS	R0, #0
0x1F44	0xF7FFFD82  BL	_mikrobus_gpioInit+0
;Click_GSM_GNSS_2_STM.c, 74 :: 		mikrobus_uartInit( _MIKROBUS1, &_GSMGNSS2_UART_CFG[0] );
0x1F48	0x4808    LDR	R0, [PC, #32]
0x1F4A	0x4601    MOV	R1, R0
0x1F4C	0x2000    MOVS	R0, #0
0x1F4E	0xF7FFFDFB  BL	_mikrobus_uartInit+0
;Click_GSM_GNSS_2_STM.c, 75 :: 		mikrobus_logInit( _LOG_USBUART_A, 9600 );
0x1F52	0xF2425180  MOVW	R1, #9600
0x1F56	0x2020    MOVS	R0, #32
0x1F58	0xF7FFFEF6  BL	_mikrobus_logInit+0
;Click_GSM_GNSS_2_STM.c, 76 :: 		mikrobus_logWrite("---- Start Init ----", _LOG_LINE);
0x1F5C	0x4804    LDR	R0, [PC, #16]
0x1F5E	0x2102    MOVS	R1, #2
0x1F60	0xF7FFFE0A  BL	_mikrobus_logWrite+0
;Click_GSM_GNSS_2_STM.c, 77 :: 		}
L_end_systemInit:
0x1F64	0xF8DDE000  LDR	LR, [SP, #0]
0x1F68	0xB001    ADD	SP, SP, #4
0x1F6A	0x4770    BX	LR
0x1F6C	0x24D80000  	__GSMGNSS2_UART_CFG+0
0x1F70	0x00002000  	?lstr1_Click_GSM_GNSS_2_STM+0
; end of _systemInit
_mikrobus_gpioInit:
;easymx_v7_STM32F107VC.c, 162 :: 		T_mikrobus_ret mikrobus_gpioInit(T_mikrobus_soc bus, T_mikrobus_pin pin, T_gpio_dir direction)
; direction start address is: 8 (R2)
; pin start address is: 4 (R1)
; bus start address is: 0 (R0)
0x1A4C	0xB081    SUB	SP, SP, #4
0x1A4E	0xF8CDE000  STR	LR, [SP, #0]
0x1A52	0xFA5FF981  UXTB	R9, R1
0x1A56	0xFA5FFA82  UXTB	R10, R2
; direction end address is: 8 (R2)
; pin end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; pin start address is: 36 (R9)
; direction start address is: 40 (R10)
;easymx_v7_STM32F107VC.c, 164 :: 		switch( bus )
0x1A5A	0xE00F    B	L_mikrobus_gpioInit78
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 167 :: 		case _MIKROBUS1 : return _gpioInit_1(pin, direction);
L_mikrobus_gpioInit80:
0x1A5C	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x1A60	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x1A64	0xF7FFFB62  BL	easymx_v7_STM32F107VC__gpioInit_1+0
0x1A68	0xE00D    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 170 :: 		case _MIKROBUS2 : return _gpioInit_2(pin, direction);
L_mikrobus_gpioInit81:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
0x1A6A	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x1A6E	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x1A72	0xF7FFFC37  BL	easymx_v7_STM32F107VC__gpioInit_2+0
0x1A76	0xE006    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 184 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_gpioInit82:
0x1A78	0x2001    MOVS	R0, #1
0x1A7A	0xE004    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 185 :: 		}
L_mikrobus_gpioInit78:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
; bus start address is: 0 (R0)
0x1A7C	0x2800    CMP	R0, #0
0x1A7E	0xD0ED    BEQ	L_mikrobus_gpioInit80
0x1A80	0x2801    CMP	R0, #1
0x1A82	0xD0F2    BEQ	L_mikrobus_gpioInit81
; bus end address is: 0 (R0)
; pin end address is: 36 (R9)
; direction end address is: 40 (R10)
0x1A84	0xE7F8    B	L_mikrobus_gpioInit82
;easymx_v7_STM32F107VC.c, 187 :: 		}
L_end_mikrobus_gpioInit:
0x1A86	0xF8DDE000  LDR	LR, [SP, #0]
0x1A8A	0xB001    ADD	SP, SP, #4
0x1A8C	0x4770    BX	LR
; end of _mikrobus_gpioInit
easymx_v7_STM32F107VC__gpioInit_1:
;__em_f107vc_gpio.c, 81 :: 		static T_mikrobus_ret _gpioInit_1(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x112C	0xB081    SUB	SP, SP, #4
0x112E	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 83 :: 		switch( pin )
0x1132	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_10
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 85 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_4 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_4 ); break;
L_easymx_v7_STM32F107VC__gpioInit_12:
0x1134	0x2901    CMP	R1, #1
0x1136	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_13
; dir end address is: 4 (R1)
0x1138	0xF2400110  MOVW	R1, #16
0x113C	0x4865    LDR	R0, [PC, #404]
0x113E	0xF7FFFF8B  BL	_GPIO_Digital_Input+0
0x1142	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_14
L_easymx_v7_STM32F107VC__gpioInit_13:
0x1144	0xF2400110  MOVW	R1, #16
0x1148	0x4862    LDR	R0, [PC, #392]
0x114A	0xF7FFFF91  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_14:
0x114E	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 86 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_2 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_2 ); break;
L_easymx_v7_STM32F107VC__gpioInit_15:
; dir start address is: 4 (R1)
0x1150	0x2901    CMP	R1, #1
0x1152	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_16
; dir end address is: 4 (R1)
0x1154	0xF2400104  MOVW	R1, #4
0x1158	0x485F    LDR	R0, [PC, #380]
0x115A	0xF7FFFF7D  BL	_GPIO_Digital_Input+0
0x115E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_17
L_easymx_v7_STM32F107VC__gpioInit_16:
0x1160	0xF2400104  MOVW	R1, #4
0x1164	0x485C    LDR	R0, [PC, #368]
0x1166	0xF7FFFF83  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_17:
0x116A	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 87 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_13); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_13); break;
L_easymx_v7_STM32F107VC__gpioInit_18:
; dir start address is: 4 (R1)
0x116C	0x2901    CMP	R1, #1
0x116E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_19
; dir end address is: 4 (R1)
0x1170	0xF2420100  MOVW	R1, #8192
0x1174	0x4859    LDR	R0, [PC, #356]
0x1176	0xF7FFFF6F  BL	_GPIO_Digital_Input+0
0x117A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_110
L_easymx_v7_STM32F107VC__gpioInit_19:
0x117C	0xF2420100  MOVW	R1, #8192
0x1180	0x4856    LDR	R0, [PC, #344]
0x1182	0xF7FFFF75  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_110:
0x1186	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 88 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_111:
; dir start address is: 4 (R1)
0x1188	0x2901    CMP	R1, #1
0x118A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_112
; dir end address is: 4 (R1)
0x118C	0xF2404100  MOVW	R1, #1024
0x1190	0x4851    LDR	R0, [PC, #324]
0x1192	0xF7FFFF61  BL	_GPIO_Digital_Input+0
0x1196	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_113
L_easymx_v7_STM32F107VC__gpioInit_112:
0x1198	0xF2404100  MOVW	R1, #1024
0x119C	0x484E    LDR	R0, [PC, #312]
0x119E	0xF7FFFF67  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_113:
0x11A2	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 89 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_114:
; dir start address is: 4 (R1)
0x11A4	0x2901    CMP	R1, #1
0x11A6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_115
; dir end address is: 4 (R1)
0x11A8	0xF6400100  MOVW	R1, #2048
0x11AC	0x484A    LDR	R0, [PC, #296]
0x11AE	0xF7FFFF53  BL	_GPIO_Digital_Input+0
0x11B2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_116
L_easymx_v7_STM32F107VC__gpioInit_115:
0x11B4	0xF6400100  MOVW	R1, #2048
0x11B8	0x4847    LDR	R0, [PC, #284]
0x11BA	0xF7FFFF59  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_116:
0x11BE	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 90 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_117:
; dir start address is: 4 (R1)
0x11C0	0x2901    CMP	R1, #1
0x11C2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_118
; dir end address is: 4 (R1)
0x11C4	0xF2410100  MOVW	R1, #4096
0x11C8	0x4843    LDR	R0, [PC, #268]
0x11CA	0xF7FFFF45  BL	_GPIO_Digital_Input+0
0x11CE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_119
L_easymx_v7_STM32F107VC__gpioInit_118:
0x11D0	0xF2410100  MOVW	R1, #4096
0x11D4	0x4840    LDR	R0, [PC, #256]
0x11D6	0xF7FFFF4B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_119:
0x11DA	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 91 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_0 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_0 ); break;
L_easymx_v7_STM32F107VC__gpioInit_120:
; dir start address is: 4 (R1)
0x11DC	0x2901    CMP	R1, #1
0x11DE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_121
; dir end address is: 4 (R1)
0x11E0	0xF2400101  MOVW	R1, #1
0x11E4	0x483B    LDR	R0, [PC, #236]
0x11E6	0xF7FFFF37  BL	_GPIO_Digital_Input+0
0x11EA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_122
L_easymx_v7_STM32F107VC__gpioInit_121:
0x11EC	0xF2400101  MOVW	R1, #1
0x11F0	0x4838    LDR	R0, [PC, #224]
0x11F2	0xF7FFFF3D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_122:
0x11F6	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 92 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_123:
; dir start address is: 4 (R1)
0x11F8	0x2901    CMP	R1, #1
0x11FA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_124
; dir end address is: 4 (R1)
0x11FC	0xF2404100  MOVW	R1, #1024
0x1200	0x4836    LDR	R0, [PC, #216]
0x1202	0xF7FFFF29  BL	_GPIO_Digital_Input+0
0x1206	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_125
L_easymx_v7_STM32F107VC__gpioInit_124:
0x1208	0xF2404100  MOVW	R1, #1024
0x120C	0x4833    LDR	R0, [PC, #204]
0x120E	0xF7FFFF2F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_125:
0x1212	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 93 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_9 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_9 ); break;
L_easymx_v7_STM32F107VC__gpioInit_126:
; dir start address is: 4 (R1)
0x1214	0x2901    CMP	R1, #1
0x1216	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_127
; dir end address is: 4 (R1)
0x1218	0xF2402100  MOVW	R1, #512
0x121C	0x482F    LDR	R0, [PC, #188]
0x121E	0xF7FFFF1B  BL	_GPIO_Digital_Input+0
0x1222	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_128
L_easymx_v7_STM32F107VC__gpioInit_127:
0x1224	0xF2402100  MOVW	R1, #512
0x1228	0x482C    LDR	R0, [PC, #176]
0x122A	0xF7FFFF21  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_128:
0x122E	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 94 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_8 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_8 ); break;
L_easymx_v7_STM32F107VC__gpioInit_129:
; dir start address is: 4 (R1)
0x1230	0x2901    CMP	R1, #1
0x1232	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_130
; dir end address is: 4 (R1)
0x1234	0xF2401100  MOVW	R1, #256
0x1238	0x4828    LDR	R0, [PC, #160]
0x123A	0xF7FFFF0D  BL	_GPIO_Digital_Input+0
0x123E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_131
L_easymx_v7_STM32F107VC__gpioInit_130:
0x1240	0xF2401100  MOVW	R1, #256
0x1244	0x4825    LDR	R0, [PC, #148]
0x1246	0xF7FFFF13  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_131:
0x124A	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 95 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_132:
; dir start address is: 4 (R1)
0x124C	0x2901    CMP	R1, #1
0x124E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_133
; dir end address is: 4 (R1)
0x1250	0xF2400140  MOVW	R1, #64
0x1254	0x4822    LDR	R0, [PC, #136]
0x1256	0xF7FFFEFF  BL	_GPIO_Digital_Input+0
0x125A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_134
L_easymx_v7_STM32F107VC__gpioInit_133:
0x125C	0xF2400140  MOVW	R1, #64
0x1260	0x481F    LDR	R0, [PC, #124]
0x1262	0xF7FFFF05  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_134:
0x1266	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 96 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_135:
; dir start address is: 4 (R1)
0x1268	0x2901    CMP	R1, #1
0x126A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_136
; dir end address is: 4 (R1)
0x126C	0xF2400180  MOVW	R1, #128
0x1270	0x481B    LDR	R0, [PC, #108]
0x1272	0xF7FFFEF1  BL	_GPIO_Digital_Input+0
0x1276	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_137
L_easymx_v7_STM32F107VC__gpioInit_136:
0x1278	0xF2400180  MOVW	R1, #128
0x127C	0x4818    LDR	R0, [PC, #96]
0x127E	0xF7FFFEF7  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_137:
0x1282	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 97 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_138:
0x1284	0x2001    MOVS	R0, #1
0x1286	0xE020    B	L_end__gpioInit_1
;__em_f107vc_gpio.c, 98 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_10:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1288	0x2800    CMP	R0, #0
0x128A	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_12
0x128E	0x2801    CMP	R0, #1
0x1290	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_15
0x1294	0x2802    CMP	R0, #2
0x1296	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_18
0x129A	0x2803    CMP	R0, #3
0x129C	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_111
0x12A0	0x2804    CMP	R0, #4
0x12A2	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_114
0x12A6	0x2805    CMP	R0, #5
0x12A8	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_117
0x12AC	0x2806    CMP	R0, #6
0x12AE	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_120
0x12B2	0x2807    CMP	R0, #7
0x12B4	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_123
0x12B6	0x2808    CMP	R0, #8
0x12B8	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_126
0x12BA	0x2809    CMP	R0, #9
0x12BC	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_129
0x12BE	0x280A    CMP	R0, #10
0x12C0	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_132
0x12C2	0x280B    CMP	R0, #11
0x12C4	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_135
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x12C6	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_138
L_easymx_v7_STM32F107VC__gpioInit_11:
;__em_f107vc_gpio.c, 99 :: 		return _MIKROBUS_OK;
0x12C8	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 100 :: 		}
L_end__gpioInit_1:
0x12CA	0xF8DDE000  LDR	LR, [SP, #0]
0x12CE	0xB001    ADD	SP, SP, #4
0x12D0	0x4770    BX	LR
0x12D2	0xBF00    NOP
0x12D4	0x08004001  	GPIOA_BASE+0
0x12D8	0x10004001  	GPIOC_BASE+0
0x12DC	0x14004001  	GPIOD_BASE+0
0x12E0	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_1
_GPIO_Digital_Input:
;__Lib_GPIO_32F10x.c, 369 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1058	0xB081    SUB	SP, SP, #4
0x105A	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 370 :: 		
0x105E	0xF04F0242  MOV	R2, #66
0x1062	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x1064	0xF7FFFD14  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 371 :: 		
L_end_GPIO_Digital_Input:
0x1068	0xF8DDE000  LDR	LR, [SP, #0]
0x106C	0xB001    ADD	SP, SP, #4
0x106E	0x4770    BX	LR
; end of _GPIO_Digital_Input
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0A90	0xB081    SUB	SP, SP, #4
0x0A92	0xF8CDE000  STR	LR, [SP, #0]
0x0A96	0xB28C    UXTH	R4, R1
0x0A98	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x0A9A	0x4B77    LDR	R3, [PC, #476]
0x0A9C	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x0AA0	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x0AA2	0x4618    MOV	R0, R3
0x0AA4	0xF7FFFBA6  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x0AA8	0xF1B40FFF  CMP	R4, #255
0x0AAC	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x0AAE	0x4B73    LDR	R3, [PC, #460]
0x0AB0	0x429D    CMP	R5, R3
0x0AB2	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x0AB4	0xF04F3333  MOV	R3, #858993459
0x0AB8	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x0ABA	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0ABC	0x2D42    CMP	R5, #66
0x0ABE	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x0AC0	0xF04F3344  MOV	R3, #1145324612
0x0AC4	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x0AC6	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x0AC8	0xF64F73FF  MOVW	R3, #65535
0x0ACC	0x429C    CMP	R4, R3
0x0ACE	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x0AD0	0x4B6A    LDR	R3, [PC, #424]
0x0AD2	0x429D    CMP	R5, R3
0x0AD4	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x0AD6	0xF04F3333  MOV	R3, #858993459
0x0ADA	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x0ADC	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0ADE	0xF04F3333  MOV	R3, #858993459
0x0AE2	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x0AE4	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0AE6	0x2D42    CMP	R5, #66
0x0AE8	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x0AEA	0xF04F3344  MOV	R3, #1145324612
0x0AEE	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x0AF0	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0AF2	0xF04F3344  MOV	R3, #1145324612
0x0AF6	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x0AF8	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x0AFA	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x0AFC	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x0AFE	0xF0050301  AND	R3, R5, #1
0x0B02	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x0B04	0x2100    MOVS	R1, #0
0x0B06	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x0B08	0xF0050302  AND	R3, R5, #2
0x0B0C	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x0B0E	0xF40573C0  AND	R3, R5, #384
0x0B12	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x0B14	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x0B16	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x0B18	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x0B1A	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x0B1C	0xF0050304  AND	R3, R5, #4
0x0B20	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x0B22	0xF0050320  AND	R3, R5, #32
0x0B26	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x0B28	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x0B2A	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x0B2C	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x0B2E	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x0B30	0xF0050308  AND	R3, R5, #8
0x0B34	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x0B36	0xF0050320  AND	R3, R5, #32
0x0B3A	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x0B3C	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x0B3E	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x0B40	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x0B42	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x0B44	0x4B4E    LDR	R3, [PC, #312]
0x0B46	0xEA050303  AND	R3, R5, R3, LSL #0
0x0B4A	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x0B4C	0x2003    MOVS	R0, #3
0x0B4E	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x0B50	0xF4057300  AND	R3, R5, #512
0x0B54	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x0B56	0x2002    MOVS	R0, #2
0x0B58	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x0B5A	0xF4056380  AND	R3, R5, #1024
0x0B5E	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x0B60	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x0B62	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x0B64	0xF005030C  AND	R3, R5, #12
0x0B68	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x0B6A	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x0B6C	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x0B6E	0xF00403FF  AND	R3, R4, #255
0x0B72	0xB29B    UXTH	R3, R3
0x0B74	0x2B00    CMP	R3, #0
0x0B76	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x0B78	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x0B7A	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x0B7C	0xFA1FF884  UXTH	R8, R4
0x0B80	0x4632    MOV	R2, R6
0x0B82	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x0B84	0x2808    CMP	R0, #8
0x0B86	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x0B88	0xF04F0301  MOV	R3, #1
0x0B8C	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x0B90	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x0B94	0x42A3    CMP	R3, R4
0x0B96	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x0B98	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x0B9A	0xF04F030F  MOV	R3, #15
0x0B9E	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x0BA0	0x43DB    MVN	R3, R3
0x0BA2	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x0BA6	0xFA01F305  LSL	R3, R1, R5
0x0BAA	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x0BAE	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x0BB0	0xF4067381  AND	R3, R6, #258
0x0BB4	0xF5B37F81  CMP	R3, #258
0x0BB8	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x0BBA	0xF2020414  ADDW	R4, R2, #20
0x0BBE	0xF04F0301  MOV	R3, #1
0x0BC2	0x4083    LSLS	R3, R0
0x0BC4	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x0BC6	0xF0060382  AND	R3, R6, #130
0x0BCA	0x2B82    CMP	R3, #130
0x0BCC	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x0BCE	0xF2020410  ADDW	R4, R2, #16
0x0BD2	0xF04F0301  MOV	R3, #1
0x0BD6	0x4083    LSLS	R3, R0
0x0BD8	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x0BDA	0x462F    MOV	R7, R5
0x0BDC	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x0BDE	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x0BE0	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x0BE2	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x0BE4	0xFA1FF088  UXTH	R0, R8
0x0BE8	0x460F    MOV	R7, R1
0x0BEA	0x4631    MOV	R1, R6
0x0BEC	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x0BEE	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x0BF0	0x460F    MOV	R7, R1
0x0BF2	0x4629    MOV	R1, R5
0x0BF4	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0BF6	0xF1B00FFF  CMP	R0, #255
0x0BFA	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x0BFC	0x1D33    ADDS	R3, R6, #4
0x0BFE	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x0C02	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x0C04	0x2A08    CMP	R2, #8
0x0C06	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0C08	0xF2020408  ADDW	R4, R2, #8
0x0C0C	0xF04F0301  MOV	R3, #1
0x0C10	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x0C14	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x0C18	0x42A3    CMP	R3, R4
0x0C1A	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x0C1C	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x0C1E	0xF04F030F  MOV	R3, #15
0x0C22	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x0C24	0x43DB    MVN	R3, R3
0x0C26	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x0C2A	0xFA07F305  LSL	R3, R7, R5
0x0C2E	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x0C32	0xF4017381  AND	R3, R1, #258
0x0C36	0xF5B37F81  CMP	R3, #258
0x0C3A	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x0C3C	0xF2060514  ADDW	R5, R6, #20
0x0C40	0xF2020408  ADDW	R4, R2, #8
0x0C44	0xF04F0301  MOV	R3, #1
0x0C48	0x40A3    LSLS	R3, R4
0x0C4A	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x0C4C	0xF0010382  AND	R3, R1, #130
0x0C50	0x2B82    CMP	R3, #130
0x0C52	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x0C54	0xF2060510  ADDW	R5, R6, #16
0x0C58	0xF2020408  ADDW	R4, R2, #8
0x0C5C	0xF04F0301  MOV	R3, #1
0x0C60	0x40A3    LSLS	R3, R4
0x0C62	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x0C64	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x0C66	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x0C68	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x0C6A	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x0C6C	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x0C70	0xF8DDE000  LDR	LR, [SP, #0]
0x0C74	0xB001    ADD	SP, SP, #4
0x0C76	0x4770    BX	LR
0x0C78	0xFC00FFFF  	#-1024
0x0C7C	0x00140008  	#524308
0x0C80	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x01F4	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x01F6	0x4919    LDR	R1, [PC, #100]
0x01F8	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x01FC	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x01FE	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x0200	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0202	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0204	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0206	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0208	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x020A	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x020C	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x020E	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x0210	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x0212	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0214	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0216	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0218	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x021A	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x021E	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x0220	0x490F    LDR	R1, [PC, #60]
0x0222	0x4288    CMP	R0, R1
0x0224	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0226	0x490F    LDR	R1, [PC, #60]
0x0228	0x4288    CMP	R0, R1
0x022A	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x022C	0x490E    LDR	R1, [PC, #56]
0x022E	0x4288    CMP	R0, R1
0x0230	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x0232	0x490E    LDR	R1, [PC, #56]
0x0234	0x4288    CMP	R0, R1
0x0236	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0238	0x490D    LDR	R1, [PC, #52]
0x023A	0x4288    CMP	R0, R1
0x023C	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x023E	0x490D    LDR	R1, [PC, #52]
0x0240	0x4288    CMP	R0, R1
0x0242	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x0244	0x490C    LDR	R1, [PC, #48]
0x0246	0x4288    CMP	R0, R1
0x0248	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x024A	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x024C	0x490B    LDR	R1, [PC, #44]
0x024E	0x6809    LDR	R1, [R1, #0]
0x0250	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0254	0x4909    LDR	R1, [PC, #36]
0x0256	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x0258	0xB001    ADD	SP, SP, #4
0x025A	0x4770    BX	LR
0x025C	0xFC00FFFF  	#-1024
0x0260	0x08004001  	#1073809408
0x0264	0x0C004001  	#1073810432
0x0268	0x10004001  	#1073811456
0x026C	0x14004001  	#1073812480
0x0270	0x18004001  	#1073813504
0x0274	0x1C004001  	#1073814528
0x0278	0x20004001  	#1073815552
0x027C	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1070	0xB081    SUB	SP, SP, #4
0x1072	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x1076	0x4A04    LDR	R2, [PC, #16]
0x1078	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x107A	0xF7FFFD09  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x107E	0xF8DDE000  LDR	LR, [SP, #0]
0x1082	0xB001    ADD	SP, SP, #4
0x1084	0x4770    BX	LR
0x1086	0xBF00    NOP
0x1088	0x00140008  	#524308
; end of _GPIO_Digital_Output
easymx_v7_STM32F107VC__gpioInit_2:
;__em_f107vc_gpio.c, 102 :: 		static T_mikrobus_ret _gpioInit_2(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x12E4	0xB081    SUB	SP, SP, #4
0x12E6	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 104 :: 		switch( pin )
0x12EA	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_239
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 106 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_241:
0x12EC	0x2901    CMP	R1, #1
0x12EE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_242
; dir end address is: 4 (R1)
0x12F0	0xF2400120  MOVW	R1, #32
0x12F4	0x4865    LDR	R0, [PC, #404]
0x12F6	0xF7FFFEAF  BL	_GPIO_Digital_Input+0
0x12FA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_243
L_easymx_v7_STM32F107VC__gpioInit_242:
0x12FC	0xF2400120  MOVW	R1, #32
0x1300	0x4862    LDR	R0, [PC, #392]
0x1302	0xF7FFFEB5  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_243:
0x1306	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 107 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_3 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_3 ); break;
L_easymx_v7_STM32F107VC__gpioInit_244:
; dir start address is: 4 (R1)
0x1308	0x2901    CMP	R1, #1
0x130A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_245
; dir end address is: 4 (R1)
0x130C	0xF2400108  MOVW	R1, #8
0x1310	0x485F    LDR	R0, [PC, #380]
0x1312	0xF7FFFEA1  BL	_GPIO_Digital_Input+0
0x1316	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_246
L_easymx_v7_STM32F107VC__gpioInit_245:
0x1318	0xF2400108  MOVW	R1, #8
0x131C	0x485C    LDR	R0, [PC, #368]
0x131E	0xF7FFFEA7  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_246:
0x1322	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 108 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_14); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_14); break;
L_easymx_v7_STM32F107VC__gpioInit_247:
; dir start address is: 4 (R1)
0x1324	0x2901    CMP	R1, #1
0x1326	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_248
; dir end address is: 4 (R1)
0x1328	0xF2440100  MOVW	R1, #16384
0x132C	0x4859    LDR	R0, [PC, #356]
0x132E	0xF7FFFE93  BL	_GPIO_Digital_Input+0
0x1332	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_249
L_easymx_v7_STM32F107VC__gpioInit_248:
0x1334	0xF2440100  MOVW	R1, #16384
0x1338	0x4856    LDR	R0, [PC, #344]
0x133A	0xF7FFFE99  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_249:
0x133E	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 109 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_250:
; dir start address is: 4 (R1)
0x1340	0x2901    CMP	R1, #1
0x1342	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_251
; dir end address is: 4 (R1)
0x1344	0xF2404100  MOVW	R1, #1024
0x1348	0x4851    LDR	R0, [PC, #324]
0x134A	0xF7FFFE85  BL	_GPIO_Digital_Input+0
0x134E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_252
L_easymx_v7_STM32F107VC__gpioInit_251:
0x1350	0xF2404100  MOVW	R1, #1024
0x1354	0x484E    LDR	R0, [PC, #312]
0x1356	0xF7FFFE8B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_252:
0x135A	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 110 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_253:
; dir start address is: 4 (R1)
0x135C	0x2901    CMP	R1, #1
0x135E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_254
; dir end address is: 4 (R1)
0x1360	0xF6400100  MOVW	R1, #2048
0x1364	0x484A    LDR	R0, [PC, #296]
0x1366	0xF7FFFE77  BL	_GPIO_Digital_Input+0
0x136A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_255
L_easymx_v7_STM32F107VC__gpioInit_254:
0x136C	0xF6400100  MOVW	R1, #2048
0x1370	0x4847    LDR	R0, [PC, #284]
0x1372	0xF7FFFE7D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_255:
0x1376	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 111 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_256:
; dir start address is: 4 (R1)
0x1378	0x2901    CMP	R1, #1
0x137A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_257
; dir end address is: 4 (R1)
0x137C	0xF2410100  MOVW	R1, #4096
0x1380	0x4843    LDR	R0, [PC, #268]
0x1382	0xF7FFFE69  BL	_GPIO_Digital_Input+0
0x1386	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_258
L_easymx_v7_STM32F107VC__gpioInit_257:
0x1388	0xF2410100  MOVW	R1, #4096
0x138C	0x4840    LDR	R0, [PC, #256]
0x138E	0xF7FFFE6F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_258:
0x1392	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 112 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_259:
; dir start address is: 4 (R1)
0x1394	0x2901    CMP	R1, #1
0x1396	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_260
; dir end address is: 4 (R1)
0x1398	0xF2410100  MOVW	R1, #4096
0x139C	0x483D    LDR	R0, [PC, #244]
0x139E	0xF7FFFE5B  BL	_GPIO_Digital_Input+0
0x13A2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_261
L_easymx_v7_STM32F107VC__gpioInit_260:
0x13A4	0xF2410100  MOVW	R1, #4096
0x13A8	0x483A    LDR	R0, [PC, #232]
0x13AA	0xF7FFFE61  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_261:
0x13AE	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 113 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_262:
; dir start address is: 4 (R1)
0x13B0	0x2901    CMP	R1, #1
0x13B2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_263
; dir end address is: 4 (R1)
0x13B4	0xF6400100  MOVW	R1, #2048
0x13B8	0x4836    LDR	R0, [PC, #216]
0x13BA	0xF7FFFE4D  BL	_GPIO_Digital_Input+0
0x13BE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_264
L_easymx_v7_STM32F107VC__gpioInit_263:
0x13C0	0xF6400100  MOVW	R1, #2048
0x13C4	0x4833    LDR	R0, [PC, #204]
0x13C6	0xF7FFFE53  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_264:
0x13CA	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 114 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_265:
; dir start address is: 4 (R1)
0x13CC	0x2901    CMP	R1, #1
0x13CE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_266
; dir end address is: 4 (R1)
0x13D0	0xF2400140  MOVW	R1, #64
0x13D4	0x482F    LDR	R0, [PC, #188]
0x13D6	0xF7FFFE3F  BL	_GPIO_Digital_Input+0
0x13DA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_267
L_easymx_v7_STM32F107VC__gpioInit_266:
0x13DC	0xF2400140  MOVW	R1, #64
0x13E0	0x482C    LDR	R0, [PC, #176]
0x13E2	0xF7FFFE45  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_267:
0x13E6	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 115 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_268:
; dir start address is: 4 (R1)
0x13E8	0x2901    CMP	R1, #1
0x13EA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_269
; dir end address is: 4 (R1)
0x13EC	0xF2400120  MOVW	R1, #32
0x13F0	0x4828    LDR	R0, [PC, #160]
0x13F2	0xF7FFFE31  BL	_GPIO_Digital_Input+0
0x13F6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_270
L_easymx_v7_STM32F107VC__gpioInit_269:
0x13F8	0xF2400120  MOVW	R1, #32
0x13FC	0x4825    LDR	R0, [PC, #148]
0x13FE	0xF7FFFE37  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_270:
0x1402	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 116 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_271:
; dir start address is: 4 (R1)
0x1404	0x2901    CMP	R1, #1
0x1406	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_272
; dir end address is: 4 (R1)
0x1408	0xF2400140  MOVW	R1, #64
0x140C	0x4822    LDR	R0, [PC, #136]
0x140E	0xF7FFFE23  BL	_GPIO_Digital_Input+0
0x1412	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_273
L_easymx_v7_STM32F107VC__gpioInit_272:
0x1414	0xF2400140  MOVW	R1, #64
0x1418	0x481F    LDR	R0, [PC, #124]
0x141A	0xF7FFFE29  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_273:
0x141E	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 117 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_274:
; dir start address is: 4 (R1)
0x1420	0x2901    CMP	R1, #1
0x1422	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_275
; dir end address is: 4 (R1)
0x1424	0xF2400180  MOVW	R1, #128
0x1428	0x481B    LDR	R0, [PC, #108]
0x142A	0xF7FFFE15  BL	_GPIO_Digital_Input+0
0x142E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_276
L_easymx_v7_STM32F107VC__gpioInit_275:
0x1430	0xF2400180  MOVW	R1, #128
0x1434	0x4818    LDR	R0, [PC, #96]
0x1436	0xF7FFFE1B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_276:
0x143A	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 118 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_277:
0x143C	0x2001    MOVS	R0, #1
0x143E	0xE020    B	L_end__gpioInit_2
;__em_f107vc_gpio.c, 119 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_239:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1440	0x2800    CMP	R0, #0
0x1442	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_241
0x1446	0x2801    CMP	R0, #1
0x1448	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_244
0x144C	0x2802    CMP	R0, #2
0x144E	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_247
0x1452	0x2803    CMP	R0, #3
0x1454	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_250
0x1458	0x2804    CMP	R0, #4
0x145A	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_253
0x145E	0x2805    CMP	R0, #5
0x1460	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_256
0x1464	0x2806    CMP	R0, #6
0x1466	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_259
0x146A	0x2807    CMP	R0, #7
0x146C	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_262
0x146E	0x2808    CMP	R0, #8
0x1470	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_265
0x1472	0x2809    CMP	R0, #9
0x1474	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_268
0x1476	0x280A    CMP	R0, #10
0x1478	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_271
0x147A	0x280B    CMP	R0, #11
0x147C	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_274
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x147E	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_277
L_easymx_v7_STM32F107VC__gpioInit_240:
;__em_f107vc_gpio.c, 120 :: 		return _MIKROBUS_OK;
0x1480	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 121 :: 		}
L_end__gpioInit_2:
0x1482	0xF8DDE000  LDR	LR, [SP, #0]
0x1486	0xB001    ADD	SP, SP, #4
0x1488	0x4770    BX	LR
0x148A	0xBF00    NOP
0x148C	0x08004001  	GPIOA_BASE+0
0x1490	0x10004001  	GPIOC_BASE+0
0x1494	0x14004001  	GPIOD_BASE+0
0x1498	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_2
_mikrobus_uartInit:
;easymx_v7_STM32F107VC.c, 253 :: 		T_mikrobus_ret mikrobus_uartInit(T_mikrobus_soc bus, const uint32_t *cfg)
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x1B48	0xB081    SUB	SP, SP, #4
0x1B4A	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; cfg start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 255 :: 		switch( bus )
0x1B4E	0xE009    B	L_mikrobus_uartInit83
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 258 :: 		case _MIKROBUS1 : return _uartInit_1( cfg );
L_mikrobus_uartInit85:
0x1B50	0x4608    MOV	R0, R1
; cfg end address is: 4 (R1)
0x1B52	0xF7FFFCBF  BL	easymx_v7_STM32F107VC__uartInit_1+0
0x1B56	0xE00A    B	L_end_mikrobus_uartInit
;easymx_v7_STM32F107VC.c, 261 :: 		case _MIKROBUS2 : return _uartInit_2( cfg );
L_mikrobus_uartInit86:
; cfg start address is: 4 (R1)
0x1B58	0x4608    MOV	R0, R1
; cfg end address is: 4 (R1)
0x1B5A	0xF7FFFC9F  BL	easymx_v7_STM32F107VC__uartInit_2+0
0x1B5E	0xE006    B	L_end_mikrobus_uartInit
;easymx_v7_STM32F107VC.c, 275 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_uartInit87:
0x1B60	0x2001    MOVS	R0, #1
0x1B62	0xE004    B	L_end_mikrobus_uartInit
;easymx_v7_STM32F107VC.c, 276 :: 		}
L_mikrobus_uartInit83:
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x1B64	0x2800    CMP	R0, #0
0x1B66	0xD0F3    BEQ	L_mikrobus_uartInit85
0x1B68	0x2801    CMP	R0, #1
0x1B6A	0xD0F5    BEQ	L_mikrobus_uartInit86
; bus end address is: 0 (R0)
; cfg end address is: 4 (R1)
0x1B6C	0xE7F8    B	L_mikrobus_uartInit87
;easymx_v7_STM32F107VC.c, 278 :: 		}
L_end_mikrobus_uartInit:
0x1B6E	0xF8DDE000  LDR	LR, [SP, #0]
0x1B72	0xB001    ADD	SP, SP, #4
0x1B74	0x4770    BX	LR
; end of _mikrobus_uartInit
easymx_v7_STM32F107VC__uartInit_1:
;__em_f107vc_uart.c, 29 :: 		static T_mikrobus_ret _uartInit_1(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x14D4	0xB081    SUB	SP, SP, #4
0x14D6	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_uart.c, 31 :: 		UART3_Init_Advanced( (unsigned long) cfg[0], (unsigned int) cfg[1], (unsigned int) cfg[2], (unsigned int)cfg[3], &_GPIO_MODULE_USART3_PD89);
0x14DA	0x4D0B    LDR	R5, [PC, #44]
0x14DC	0xF200010C  ADDW	R1, R0, #12
0x14E0	0x680C    LDR	R4, [R1, #0]
0x14E2	0xF2000108  ADDW	R1, R0, #8
0x14E6	0x680B    LDR	R3, [R1, #0]
0x14E8	0x1D01    ADDS	R1, R0, #4
0x14EA	0x680A    LDR	R2, [R1, #0]
0x14EC	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x14EE	0x4608    MOV	R0, R1
0x14F0	0xB291    UXTH	R1, R2
0x14F2	0xB29A    UXTH	R2, R3
0x14F4	0xB2A3    UXTH	R3, R4
0x14F6	0xB420    PUSH	(R5)
0x14F8	0xF7FFFDC8  BL	_UART3_Init_Advanced+0
0x14FC	0xB001    ADD	SP, SP, #4
;__em_f107vc_uart.c, 32 :: 		return _MIKROBUS_OK;
0x14FE	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_uart.c, 33 :: 		}
L_end__uartInit_1:
0x1500	0xF8DDE000  LDR	LR, [SP, #0]
0x1504	0xB001    ADD	SP, SP, #4
0x1506	0x4770    BX	LR
0x1508	0x23B40000  	__GPIO_MODULE_USART3_PD89+0
; end of easymx_v7_STM32F107VC__uartInit_1
_UART3_Init_Advanced:
;__Lib_UART_123_45.c, 384 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x108C	0xB081    SUB	SP, SP, #4
0x108E	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x1092	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 386 :: 		
0x1094	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x1096	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x1098	0xB408    PUSH	(R3)
0x109A	0xB293    UXTH	R3, R2
0x109C	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x109E	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x10A0	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x10A2	0xF7FFFBB5  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x10A6	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 387 :: 		
L_end_UART3_Init_Advanced:
0x10A8	0xF8DDE000  LDR	LR, [SP, #0]
0x10AC	0xB001    ADD	SP, SP, #4
0x10AE	0x4770    BX	LR
0x10B0	0x48004000  	USART3_SR+0
; end of _UART3_Init_Advanced
__Lib_UART_123_45_UARTx_Init_Advanced:
;__Lib_UART_123_45.c, 294 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0810	0xB089    SUB	SP, SP, #36
0x0812	0xF8CDE000  STR	LR, [SP, #0]
0x0816	0x4683    MOV	R11, R0
0x0818	0xB298    UXTH	R0, R3
0x081A	0x468C    MOV	R12, R1
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 44 (R11)
; baud_rate start address is: 48 (R12)
; parity start address is: 0 (R0)
; stop_bits start address is: 4 (R1)
0x081C	0xF8BD1024  LDRH	R1, [SP, #36]
; module start address is: 24 (R6)
0x0820	0x9E0A    LDR	R6, [SP, #40]
;__Lib_UART_123_45.c, 298 :: 		
0x0822	0xAC04    ADD	R4, SP, #16
0x0824	0xF8AD1004  STRH	R1, [SP, #4]
0x0828	0xF8AD0008  STRH	R0, [SP, #8]
0x082C	0x4620    MOV	R0, R4
0x082E	0xF7FFFDEF  BL	_RCC_GetClocksFrequency+0
0x0832	0xF8BD0008  LDRH	R0, [SP, #8]
0x0836	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 301 :: 		
0x083A	0x4C64    LDR	R4, [PC, #400]
0x083C	0x45A3    CMP	R11, R4
0x083E	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced15
;__Lib_UART_123_45.c, 302 :: 		
0x0840	0x2501    MOVS	R5, #1
0x0842	0xB26D    SXTB	R5, R5
0x0844	0x4C62    LDR	R4, [PC, #392]
0x0846	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 303 :: 		
0x0848	0x4D62    LDR	R5, [PC, #392]
0x084A	0x4C63    LDR	R4, [PC, #396]
0x084C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 304 :: 		
0x084E	0x4D63    LDR	R5, [PC, #396]
0x0850	0x4C63    LDR	R4, [PC, #396]
0x0852	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 305 :: 		
0x0854	0x4D63    LDR	R5, [PC, #396]
0x0856	0x4C64    LDR	R4, [PC, #400]
0x0858	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 306 :: 		
0x085A	0x4D64    LDR	R5, [PC, #400]
0x085C	0x4C64    LDR	R4, [PC, #400]
0x085E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 307 :: 		
0x0860	0x9C07    LDR	R4, [SP, #28]
0x0862	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 308 :: 		
0x0864	0xE056    B	L___Lib_UART_123_45_UARTx_Init_Advanced16
L___Lib_UART_123_45_UARTx_Init_Advanced15:
;__Lib_UART_123_45.c, 309 :: 		
0x0866	0x4C63    LDR	R4, [PC, #396]
0x0868	0x45A3    CMP	R11, R4
0x086A	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced17
;__Lib_UART_123_45.c, 310 :: 		
0x086C	0x2501    MOVS	R5, #1
0x086E	0xB26D    SXTB	R5, R5
0x0870	0x4C61    LDR	R4, [PC, #388]
0x0872	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 311 :: 		
0x0874	0x4D61    LDR	R5, [PC, #388]
0x0876	0x4C58    LDR	R4, [PC, #352]
0x0878	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 312 :: 		
0x087A	0x4D61    LDR	R5, [PC, #388]
0x087C	0x4C58    LDR	R4, [PC, #352]
0x087E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 313 :: 		
0x0880	0x4D60    LDR	R5, [PC, #384]
0x0882	0x4C59    LDR	R4, [PC, #356]
0x0884	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 314 :: 		
0x0886	0x4D60    LDR	R5, [PC, #384]
0x0888	0x4C59    LDR	R4, [PC, #356]
0x088A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 315 :: 		
0x088C	0x9C06    LDR	R4, [SP, #24]
0x088E	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 316 :: 		
0x0890	0xE040    B	L___Lib_UART_123_45_UARTx_Init_Advanced18
L___Lib_UART_123_45_UARTx_Init_Advanced17:
;__Lib_UART_123_45.c, 317 :: 		
0x0892	0x4C5E    LDR	R4, [PC, #376]
0x0894	0x45A3    CMP	R11, R4
0x0896	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced19
;__Lib_UART_123_45.c, 318 :: 		
0x0898	0x2501    MOVS	R5, #1
0x089A	0xB26D    SXTB	R5, R5
0x089C	0x4C5C    LDR	R4, [PC, #368]
0x089E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 319 :: 		
0x08A0	0x4D5C    LDR	R5, [PC, #368]
0x08A2	0x4C4D    LDR	R4, [PC, #308]
0x08A4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 320 :: 		
0x08A6	0x4D5C    LDR	R5, [PC, #368]
0x08A8	0x4C4D    LDR	R4, [PC, #308]
0x08AA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 321 :: 		
0x08AC	0x4D5B    LDR	R5, [PC, #364]
0x08AE	0x4C4E    LDR	R4, [PC, #312]
0x08B0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 322 :: 		
0x08B2	0x4D5B    LDR	R5, [PC, #364]
0x08B4	0x4C4E    LDR	R4, [PC, #312]
0x08B6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 323 :: 		
0x08B8	0x9C06    LDR	R4, [SP, #24]
0x08BA	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 324 :: 		
0x08BC	0xE02A    B	L___Lib_UART_123_45_UARTx_Init_Advanced20
L___Lib_UART_123_45_UARTx_Init_Advanced19:
;__Lib_UART_123_45.c, 325 :: 		
0x08BE	0x4C59    LDR	R4, [PC, #356]
0x08C0	0x45A3    CMP	R11, R4
0x08C2	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced21
;__Lib_UART_123_45.c, 326 :: 		
0x08C4	0x2501    MOVS	R5, #1
0x08C6	0xB26D    SXTB	R5, R5
0x08C8	0x4C57    LDR	R4, [PC, #348]
0x08CA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 327 :: 		
0x08CC	0x4D57    LDR	R5, [PC, #348]
0x08CE	0x4C42    LDR	R4, [PC, #264]
0x08D0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 328 :: 		
0x08D2	0x4D57    LDR	R5, [PC, #348]
0x08D4	0x4C42    LDR	R4, [PC, #264]
0x08D6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 329 :: 		
0x08D8	0x4D56    LDR	R5, [PC, #344]
0x08DA	0x4C43    LDR	R4, [PC, #268]
0x08DC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 330 :: 		
0x08DE	0x4D56    LDR	R5, [PC, #344]
0x08E0	0x4C43    LDR	R4, [PC, #268]
0x08E2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 331 :: 		
0x08E4	0x9C06    LDR	R4, [SP, #24]
0x08E6	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 332 :: 		
0x08E8	0xE014    B	L___Lib_UART_123_45_UARTx_Init_Advanced22
L___Lib_UART_123_45_UARTx_Init_Advanced21:
;__Lib_UART_123_45.c, 333 :: 		
0x08EA	0x4C54    LDR	R4, [PC, #336]
0x08EC	0x45A3    CMP	R11, R4
0x08EE	0xD111    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced23
;__Lib_UART_123_45.c, 334 :: 		
0x08F0	0x2501    MOVS	R5, #1
0x08F2	0xB26D    SXTB	R5, R5
0x08F4	0x4C52    LDR	R4, [PC, #328]
0x08F6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 335 :: 		
0x08F8	0x4D52    LDR	R5, [PC, #328]
0x08FA	0x4C37    LDR	R4, [PC, #220]
0x08FC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 336 :: 		
0x08FE	0x4D52    LDR	R5, [PC, #328]
0x0900	0x4C37    LDR	R4, [PC, #220]
0x0902	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 337 :: 		
0x0904	0x4D51    LDR	R5, [PC, #324]
0x0906	0x4C38    LDR	R4, [PC, #224]
0x0908	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 338 :: 		
0x090A	0x4D51    LDR	R5, [PC, #324]
0x090C	0x4C38    LDR	R4, [PC, #224]
0x090E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 339 :: 		
0x0910	0x9C06    LDR	R4, [SP, #24]
0x0912	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 340 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced23:
L___Lib_UART_123_45_UARTx_Init_Advanced22:
L___Lib_UART_123_45_UARTx_Init_Advanced20:
L___Lib_UART_123_45_UARTx_Init_Advanced18:
L___Lib_UART_123_45_UARTx_Init_Advanced16:
;__Lib_UART_123_45.c, 342 :: 		
0x0914	0xF8AD1004  STRH	R1, [SP, #4]
; module end address is: 24 (R6)
0x0918	0xF8AD0008  STRH	R0, [SP, #8]
0x091C	0x4630    MOV	R0, R6
0x091E	0xF7FFFCEF  BL	_GPIO_Alternate_Function_Enable+0
0x0922	0xF8BD0008  LDRH	R0, [SP, #8]
0x0926	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 344 :: 		
0x092A	0xF10B0510  ADD	R5, R11, #16
0x092E	0x2400    MOVS	R4, #0
0x0930	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 345 :: 		
0x0932	0xF10B0510  ADD	R5, R11, #16
0x0936	0x682C    LDR	R4, [R5, #0]
0x0938	0x430C    ORRS	R4, R1
; stop_bits end address is: 4 (R1)
0x093A	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 346 :: 		
0x093C	0xF10B050C  ADD	R5, R11, #12
0x0940	0x2400    MOVS	R4, #0
0x0942	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 348 :: 		
0x0944	0xB118    CBZ	R0, L___Lib_UART_123_45_UARTx_Init_Advanced38
;__Lib_UART_123_45.c, 349 :: 		
0x0946	0xF4406080  ORR	R0, R0, #1024
0x094A	0xB280    UXTH	R0, R0
; parity end address is: 0 (R0)
;__Lib_UART_123_45.c, 350 :: 		
0x094C	0xE7FF    B	L___Lib_UART_123_45_UARTx_Init_Advanced24
L___Lib_UART_123_45_UARTx_Init_Advanced38:
;__Lib_UART_123_45.c, 348 :: 		
;__Lib_UART_123_45.c, 350 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced24:
;__Lib_UART_123_45.c, 352 :: 		
; parity start address is: 0 (R0)
0x094E	0xF10B050C  ADD	R5, R11, #12
0x0952	0x682C    LDR	R4, [R5, #0]
0x0954	0x4304    ORRS	R4, R0
; parity end address is: 0 (R0)
0x0956	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 354 :: 		
0x0958	0xF10B060C  ADD	R6, R11, #12
0x095C	0x2501    MOVS	R5, #1
0x095E	0x6834    LDR	R4, [R6, #0]
0x0960	0xF365344D  BFI	R4, R5, #13, #1
0x0964	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 355 :: 		
0x0966	0xF10B060C  ADD	R6, R11, #12
0x096A	0x2501    MOVS	R5, #1
0x096C	0x6834    LDR	R4, [R6, #0]
0x096E	0xF36504C3  BFI	R4, R5, #3, #1
0x0972	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 356 :: 		
0x0974	0xF10B060C  ADD	R6, R11, #12
0x0978	0x2501    MOVS	R5, #1
0x097A	0x6834    LDR	R4, [R6, #0]
0x097C	0xF3650482  BFI	R4, R5, #2, #1
0x0980	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 357 :: 		
0x0982	0xF10B0514  ADD	R5, R11, #20
0x0986	0x2400    MOVS	R4, #0
0x0988	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 362 :: 		
0x098A	0x9D03    LDR	R5, [SP, #12]
0x098C	0x2419    MOVS	R4, #25
0x098E	0x4365    MULS	R5, R4, R5
0x0990	0xEA4F048C  LSL	R4, R12, #2
; baud_rate end address is: 48 (R12)
0x0994	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45.c, 363 :: 		
0x0998	0x2464    MOVS	R4, #100
0x099A	0xFBB7F4F4  UDIV	R4, R7, R4
0x099E	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45.c, 365 :: 		
0x09A0	0x0935    LSRS	R5, R6, #4
0x09A2	0x2464    MOVS	R4, #100
0x09A4	0x436C    MULS	R4, R5, R4
0x09A6	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45.c, 366 :: 		
0x09A8	0x0124    LSLS	R4, R4, #4
0x09AA	0xF2040532  ADDW	R5, R4, #50
0x09AE	0x2464    MOVS	R4, #100
0x09B0	0xFBB5F4F4  UDIV	R4, R5, R4
0x09B4	0xF004040F  AND	R4, R4, #15
0x09B8	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45.c, 368 :: 		
0x09BC	0xF10B0508  ADD	R5, R11, #8
; UART_Base end address is: 44 (R11)
0x09C0	0xB2A4    UXTH	R4, R4
0x09C2	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 369 :: 		
L_end_UARTx_Init_Advanced:
0x09C4	0xF8DDE000  LDR	LR, [SP, #0]
0x09C8	0xB009    ADD	SP, SP, #36
0x09CA	0x4770    BX	LR
0x09CC	0x38004001  	USART1_SR+0
0x09D0	0x03384242  	RCC_APB2ENR+0
0x09D4	0x10150000  	_UART1_Write+0
0x09D8	0x05442000  	_UART_Wr_Ptr+0
0x09DC	0x06F50000  	_UART1_Read+0
0x09E0	0x05482000  	_UART_Rd_Ptr+0
0x09E4	0x070D0000  	_UART1_Data_Ready+0
0x09E8	0x054C2000  	_UART_Rdy_Ptr+0
0x09EC	0x06DD0000  	_UART1_Tx_Idle+0
0x09F0	0x05502000  	_UART_Tx_Idle_Ptr+0
0x09F4	0x44004000  	USART2_SR+0
0x09F8	0x03C44242  	RCC_APB1ENR+0
0x09FC	0x0F8D0000  	_UART2_Write+0
0x0A00	0x06AD0000  	_UART2_Read+0
0x0A04	0x06C50000  	_UART2_Data_Ready+0
0x0A08	0x07250000  	_UART2_Tx_Idle+0
0x0A0C	0x48004000  	USART3_SR+0
0x0A10	0x03C84242  	RCC_APB1ENR+0
0x0A14	0x0F710000  	_UART3_Write+0
0x0A18	0x07850000  	_UART3_Read+0
0x0A1C	0x079D0000  	_UART3_Data_Ready+0
0x0A20	0x076D0000  	_UART3_Tx_Idle+0
0x0A24	0x4C004000  	UART4_SR+0
0x0A28	0x03CC4242  	RCC_APB1ENR+0
0x0A2C	0x0FA90000  	_UART4_Write+0
0x0A30	0x073D0000  	_UART4_Read+0
0x0A34	0x07550000  	_UART4_Data_Ready+0
0x0A38	0x04E90000  	_UART4_Tx_Idle+0
0x0A3C	0x50004000  	UART5_SR+0
0x0A40	0x03D04242  	RCC_APB1ENR+0
0x0A44	0x0FC50000  	_UART5_Write+0
0x0A48	0x05190000  	_UART5_Read+0
0x0A4C	0x067D0000  	_UART5_Data_Ready+0
0x0A50	0x06950000  	_UART5_Tx_Idle+0
; end of __Lib_UART_123_45_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_105_107.c, 456 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0410	0xB082    SUB	SP, SP, #8
0x0412	0xF8CDE000  STR	LR, [SP, #0]
0x0416	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_105_107.c, 459 :: 		
0x0418	0x4619    MOV	R1, R3
0x041A	0x9101    STR	R1, [SP, #4]
0x041C	0xF7FFFE98  BL	_Get_Fosc_kHz+0
0x0420	0xF24031E8  MOVW	R1, #1000
0x0424	0xFB00F201  MUL	R2, R0, R1
0x0428	0x9901    LDR	R1, [SP, #4]
0x042A	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 462 :: 		
0x042C	0x491F    LDR	R1, [PC, #124]
0x042E	0x7809    LDRB	R1, [R1, #0]
0x0430	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x0434	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 463 :: 		
0x0436	0x491E    LDR	R1, [PC, #120]
0x0438	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x043A	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x043C	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 465 :: 		
0x043E	0x1D1A    ADDS	R2, R3, #4
0x0440	0x6819    LDR	R1, [R3, #0]
0x0442	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0444	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 467 :: 		
0x0446	0x4919    LDR	R1, [PC, #100]
0x0448	0x8809    LDRH	R1, [R1, #0]
0x044A	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x044E	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 468 :: 		
0x0450	0x4917    LDR	R1, [PC, #92]
0x0452	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0454	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0456	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 470 :: 		
0x0458	0xF2030208  ADDW	R2, R3, #8
0x045C	0x1D19    ADDS	R1, R3, #4
0x045E	0x6809    LDR	R1, [R1, #0]
0x0460	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0462	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 472 :: 		
0x0464	0x4911    LDR	R1, [PC, #68]
0x0466	0x8809    LDRH	R1, [R1, #0]
0x0468	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x046C	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 473 :: 		
0x046E	0x4910    LDR	R1, [PC, #64]
0x0470	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0472	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0474	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 475 :: 		
0x0476	0xF203020C  ADDW	R2, R3, #12
0x047A	0x1D19    ADDS	R1, R3, #4
0x047C	0x6809    LDR	R1, [R1, #0]
0x047E	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0480	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 477 :: 		
0x0482	0x490A    LDR	R1, [PC, #40]
0x0484	0x8809    LDRH	R1, [R1, #0]
0x0486	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x048A	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 478 :: 		
0x048C	0x4909    LDR	R1, [PC, #36]
0x048E	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0490	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x0492	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 480 :: 		
0x0494	0xF2030210  ADDW	R2, R3, #16
0x0498	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x049C	0x6809    LDR	R1, [R1, #0]
0x049E	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x04A2	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 481 :: 		
L_end_RCC_GetClocksFrequency:
0x04A4	0xF8DDE000  LDR	LR, [SP, #0]
0x04A8	0xB002    ADD	SP, SP, #8
0x04AA	0x4770    BX	LR
0x04AC	0x10044002  	RCC_CFGRbits+0
0x04B0	0x24E80000  	__Lib_System_105_107_APBAHBPrescTable+0
0x04B4	0x1F740000  	__Lib_System_105_107_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0150	0x4801    LDR	R0, [PC, #4]
0x0152	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0154	0x4770    BX	LR
0x0156	0xBF00    NOP
0x0158	0x05402000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x0300	0xB081    SUB	SP, SP, #4
0x0302	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x0306	0x2201    MOVS	R2, #1
0x0308	0xB252    SXTB	R2, R2
0x030A	0x493E    LDR	R1, [PC, #248]
0x030C	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x030E	0xF2000168  ADDW	R1, R0, #104
0x0312	0x680B    LDR	R3, [R1, #0]
0x0314	0xF06F6100  MVN	R1, #134217728
0x0318	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x031C	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x031E	0xF0036100  AND	R1, R3, #134217728
0x0322	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x0324	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x0326	0xF0024100  AND	R1, R2, #-2147483648
0x032A	0xF1B14F00  CMP	R1, #-2147483648
0x032E	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x0330	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0332	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x0334	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x0336	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0338	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x033A	0xF4042170  AND	R1, R4, #983040
0x033E	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x0340	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x0342	0xF64F71FF  MOVW	R1, #65535
0x0346	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x034A	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x034C	0xF4041140  AND	R1, R4, #3145728
0x0350	0xF5B11F40  CMP	R1, #3145728
0x0354	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x0356	0xF06F6170  MVN	R1, #251658240
0x035A	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x035E	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x0360	0x492A    LDR	R1, [PC, #168]
0x0362	0x680A    LDR	R2, [R1, #0]
0x0364	0xF06F6170  MVN	R1, #251658240
0x0368	0x400A    ANDS	R2, R1
0x036A	0x4928    LDR	R1, [PC, #160]
0x036C	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x036E	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x0370	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x0372	0xF4041180  AND	R1, R4, #1048576
0x0376	0xF5B11F80  CMP	R1, #1048576
0x037A	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x037C	0xF04F0103  MOV	R1, #3
0x0380	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x0382	0x43C9    MVN	R1, R1
0x0384	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x0388	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x038C	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x038E	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x0390	0x0D61    LSRS	R1, R4, #21
0x0392	0x0109    LSLS	R1, R1, #4
0x0394	0xFA05F101  LSL	R1, R5, R1
0x0398	0x43C9    MVN	R1, R1
0x039A	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x039C	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x03A0	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x03A2	0x0D61    LSRS	R1, R4, #21
0x03A4	0x0109    LSLS	R1, R1, #4
0x03A6	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x03AA	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x03AC	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x03AE	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x03B2	0xF1B14F00  CMP	R1, #-2147483648
0x03B6	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x03B8	0x4913    LDR	R1, [PC, #76]
0x03BA	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x03BC	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x03BE	0x4913    LDR	R1, [PC, #76]
0x03C0	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x03C2	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x03C6	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x03C8	0xEA4F018A  LSL	R1, R10, #2
0x03CC	0xEB090101  ADD	R1, R9, R1, LSL #0
0x03D0	0x6809    LDR	R1, [R1, #0]
0x03D2	0xF1B13FFF  CMP	R1, #-1
0x03D6	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x03D8	0xF1090134  ADD	R1, R9, #52
0x03DC	0xEA4F038A  LSL	R3, R10, #2
0x03E0	0x18C9    ADDS	R1, R1, R3
0x03E2	0x6809    LDR	R1, [R1, #0]
0x03E4	0x460A    MOV	R2, R1
0x03E6	0xEB090103  ADD	R1, R9, R3, LSL #0
0x03EA	0x6809    LDR	R1, [R1, #0]
0x03EC	0x4608    MOV	R0, R1
0x03EE	0x4611    MOV	R1, R2
0x03F0	0xF7FFFEB4  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x03F4	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x03F8	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x03FA	0xF8DDE000  LDR	LR, [SP, #0]
0x03FE	0xB001    ADD	SP, SP, #4
0x0400	0x4770    BX	LR
0x0402	0xBF00    NOP
0x0404	0x03004242  	RCC_APB2ENRbits+0
0x0408	0x001C4001  	AFIO_MAPR2+0
0x040C	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x015C	0xB083    SUB	SP, SP, #12
0x015E	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x0162	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x0166	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0168	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x016A	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x016E	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x0170	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x0172	0x4A19    LDR	R2, [PC, #100]
0x0174	0x9202    STR	R2, [SP, #8]
0x0176	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x0178	0x4A18    LDR	R2, [PC, #96]
0x017A	0x9202    STR	R2, [SP, #8]
0x017C	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x017E	0x4A18    LDR	R2, [PC, #96]
0x0180	0x9202    STR	R2, [SP, #8]
0x0182	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x0184	0x4A17    LDR	R2, [PC, #92]
0x0186	0x9202    STR	R2, [SP, #8]
0x0188	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x018A	0x4A17    LDR	R2, [PC, #92]
0x018C	0x9202    STR	R2, [SP, #8]
0x018E	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x0190	0x4A16    LDR	R2, [PC, #88]
0x0192	0x9202    STR	R2, [SP, #8]
0x0194	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x0196	0x4A16    LDR	R2, [PC, #88]
0x0198	0x9202    STR	R2, [SP, #8]
0x019A	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x019C	0x2800    CMP	R0, #0
0x019E	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x01A0	0x2801    CMP	R0, #1
0x01A2	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x01A4	0x2802    CMP	R0, #2
0x01A6	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x01A8	0x2803    CMP	R0, #3
0x01AA	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x01AC	0x2804    CMP	R0, #4
0x01AE	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x01B0	0x2805    CMP	R0, #5
0x01B2	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x01B4	0x2806    CMP	R0, #6
0x01B6	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x01B8	0x2201    MOVS	R2, #1
0x01BA	0xB212    SXTH	R2, R2
0x01BC	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x01BE	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x01C2	0x9802    LDR	R0, [SP, #8]
0x01C4	0x460A    MOV	R2, R1
0x01C6	0xF8BD1004  LDRH	R1, [SP, #4]
0x01CA	0xF000FC61  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x01CE	0xF8DDE000  LDR	LR, [SP, #0]
0x01D2	0xB003    ADD	SP, SP, #12
0x01D4	0x4770    BX	LR
0x01D6	0xBF00    NOP
0x01D8	0x08004001  	#1073809408
0x01DC	0x0C004001  	#1073810432
0x01E0	0x10004001  	#1073811456
0x01E4	0x14004001  	#1073812480
0x01E8	0x18004001  	#1073813504
0x01EC	0x1C004001  	#1073814528
0x01F0	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
easymx_v7_STM32F107VC__uartInit_2:
;__em_f107vc_uart.c, 35 :: 		static T_mikrobus_ret _uartInit_2(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x149C	0xB081    SUB	SP, SP, #4
0x149E	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_uart.c, 37 :: 		UART2_Init_Advanced( (unsigned long) cfg[0], (unsigned int) cfg[1], (unsigned int) cfg[2], (unsigned int)cfg[3], &_GPIO_MODULE_USART2_PD56);
0x14A2	0x4D0B    LDR	R5, [PC, #44]
0x14A4	0xF200010C  ADDW	R1, R0, #12
0x14A8	0x680C    LDR	R4, [R1, #0]
0x14AA	0xF2000108  ADDW	R1, R0, #8
0x14AE	0x680B    LDR	R3, [R1, #0]
0x14B0	0x1D01    ADDS	R1, R0, #4
0x14B2	0x680A    LDR	R2, [R1, #0]
0x14B4	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x14B6	0x4608    MOV	R0, R1
0x14B8	0xB291    UXTH	R1, R2
0x14BA	0xB29A    UXTH	R2, R3
0x14BC	0xB2A3    UXTH	R3, R4
0x14BE	0xB420    PUSH	(R5)
0x14C0	0xF7FFFD8E  BL	_UART2_Init_Advanced+0
0x14C4	0xB001    ADD	SP, SP, #4
;__em_f107vc_uart.c, 38 :: 		return _MIKROBUS_OK;
0x14C6	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_uart.c, 39 :: 		}
L_end__uartInit_2:
0x14C8	0xF8DDE000  LDR	LR, [SP, #0]
0x14CC	0xB001    ADD	SP, SP, #4
0x14CE	0x4770    BX	LR
0x14D0	0x22DC0000  	__GPIO_MODULE_USART2_PD56+0
; end of easymx_v7_STM32F107VC__uartInit_2
_UART2_Init_Advanced:
;__Lib_UART_123_45.c, 378 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x0FE0	0xB081    SUB	SP, SP, #4
0x0FE2	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x0FE6	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 380 :: 		
0x0FE8	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0FEA	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0FEC	0xB408    PUSH	(R3)
0x0FEE	0xB293    UXTH	R3, R2
0x0FF0	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x0FF2	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0FF4	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x0FF6	0xF7FFFC0B  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x0FFA	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 381 :: 		
L_end_UART2_Init_Advanced:
0x0FFC	0xF8DDE000  LDR	LR, [SP, #0]
0x1000	0xB001    ADD	SP, SP, #4
0x1002	0x4770    BX	LR
0x1004	0x44004000  	USART2_SR+0
; end of _UART2_Init_Advanced
_mikrobus_logInit:
;easymx_v7_STM32F107VC.c, 283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x1D48	0xB081    SUB	SP, SP, #4
0x1D4A	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; baud start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 285 :: 		switch( port )
0x1D4E	0xE011    B	L_mikrobus_logInit88
; port end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit90:
0x1D50	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x1D52	0xF7FFFC13  BL	easymx_v7_STM32F107VC__log_init1+0
0x1D56	0xE016    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit91:
; baud start address is: 4 (R1)
0x1D58	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x1D5A	0xF7FFFBF3  BL	easymx_v7_STM32F107VC__log_init2+0
0x1D5E	0xE012    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 309 :: 		case _LOG_USBUART_A : return _log_initUartA( baud );
L_mikrobus_logInit92:
; baud start address is: 4 (R1)
0x1D60	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x1D62	0xF7FFFBD3  BL	easymx_v7_STM32F107VC__log_initUartA+0
0x1D66	0xE00E    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 312 :: 		case _LOG_USBUART_B : return _log_initUartB( baud );
L_mikrobus_logInit93:
; baud start address is: 4 (R1)
0x1D68	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x1D6A	0xF7FFFC33  BL	easymx_v7_STM32F107VC__log_initUartB+0
0x1D6E	0xE00A    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit94:
0x1D70	0x2001    MOVS	R0, #1
0x1D72	0xE008    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 315 :: 		}
L_mikrobus_logInit88:
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x1D74	0x2800    CMP	R0, #0
0x1D76	0xD0EB    BEQ	L_mikrobus_logInit90
0x1D78	0x2801    CMP	R0, #1
0x1D7A	0xD0ED    BEQ	L_mikrobus_logInit91
0x1D7C	0x2820    CMP	R0, #32
0x1D7E	0xD0EF    BEQ	L_mikrobus_logInit92
0x1D80	0x2830    CMP	R0, #48
0x1D82	0xD0F1    BEQ	L_mikrobus_logInit93
; port end address is: 0 (R0)
; baud end address is: 4 (R1)
0x1D84	0xE7F4    B	L_mikrobus_logInit94
;easymx_v7_STM32F107VC.c, 317 :: 		}
L_end_mikrobus_logInit:
0x1D86	0xF8DDE000  LDR	LR, [SP, #0]
0x1D8A	0xB001    ADD	SP, SP, #4
0x1D8C	0x4770    BX	LR
; end of _mikrobus_logInit
easymx_v7_STM32F107VC__log_init1:
;__em_f107vc_log.c, 23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
; baud start address is: 0 (R0)
0x157C	0xB081    SUB	SP, SP, #4
0x157E	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 25 :: 		UART3_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART3_PD89);
0x1582	0x4909    LDR	R1, [PC, #36]
0x1584	0xB402    PUSH	(R1)
0x1586	0xF2400300  MOVW	R3, #0
0x158A	0xF2400200  MOVW	R2, #0
0x158E	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x1592	0xF7FFFD7B  BL	_UART3_Init_Advanced+0
0x1596	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 26 :: 		logger = UART3_Write;
0x1598	0x4A04    LDR	R2, [PC, #16]
0x159A	0x4905    LDR	R1, [PC, #20]
0x159C	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 27 :: 		return 0;
0x159E	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 28 :: 		}
L_end__log_init1:
0x15A0	0xF8DDE000  LDR	LR, [SP, #0]
0x15A4	0xB001    ADD	SP, SP, #4
0x15A6	0x4770    BX	LR
0x15A8	0x23B40000  	__GPIO_MODULE_USART3_PD89+0
0x15AC	0x0F710000  	_UART3_Write+0
0x15B0	0x00FC2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init1
easymx_v7_STM32F107VC__log_init2:
;__em_f107vc_log.c, 30 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
; baud start address is: 0 (R0)
0x1544	0xB081    SUB	SP, SP, #4
0x1546	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 32 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x154A	0x4909    LDR	R1, [PC, #36]
0x154C	0xB402    PUSH	(R1)
0x154E	0xF2400300  MOVW	R3, #0
0x1552	0xF2400200  MOVW	R2, #0
0x1556	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x155A	0xF7FFFD41  BL	_UART2_Init_Advanced+0
0x155E	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 33 :: 		logger = UART2_Write;
0x1560	0x4A04    LDR	R2, [PC, #16]
0x1562	0x4905    LDR	R1, [PC, #20]
0x1564	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 34 :: 		return 0;
0x1566	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 35 :: 		}
L_end__log_init2:
0x1568	0xF8DDE000  LDR	LR, [SP, #0]
0x156C	0xB001    ADD	SP, SP, #4
0x156E	0x4770    BX	LR
0x1570	0x22DC0000  	__GPIO_MODULE_USART2_PD56+0
0x1574	0x0F8D0000  	_UART2_Write+0
0x1578	0x00FC2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init2
easymx_v7_STM32F107VC__log_initUartA:
;__em_f107vc_log.c, 37 :: 		static T_mikrobus_ret _log_initUartA(uint32_t baud)
; baud start address is: 0 (R0)
0x150C	0xB081    SUB	SP, SP, #4
0x150E	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 39 :: 		UART1_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10);
0x1512	0x4909    LDR	R1, [PC, #36]
0x1514	0xB402    PUSH	(R1)
0x1516	0xF2400300  MOVW	R3, #0
0x151A	0xF2400200  MOVW	R2, #0
0x151E	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x1522	0xF7FFFD85  BL	_UART1_Init_Advanced+0
0x1526	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 40 :: 		logger = UART1_Write;
0x1528	0x4A04    LDR	R2, [PC, #16]
0x152A	0x4905    LDR	R1, [PC, #20]
0x152C	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 41 :: 		return 0;
0x152E	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 42 :: 		}
L_end__log_initUartA:
0x1530	0xF8DDE000  LDR	LR, [SP, #0]
0x1534	0xB001    ADD	SP, SP, #4
0x1536	0x4770    BX	LR
0x1538	0x23480000  	__GPIO_MODULE_USART1_PA9_10+0
0x153C	0x10150000  	_UART1_Write+0
0x1540	0x00FC2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartA
_UART1_Init_Advanced:
;__Lib_UART_123_45.c, 372 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x1030	0xB081    SUB	SP, SP, #4
0x1032	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x1036	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 374 :: 		
0x1038	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x103A	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x103C	0xB408    PUSH	(R3)
0x103E	0xB293    UXTH	R3, R2
0x1040	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x1042	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1044	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x1046	0xF7FFFBE3  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x104A	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 375 :: 		
L_end_UART1_Init_Advanced:
0x104C	0xF8DDE000  LDR	LR, [SP, #0]
0x1050	0xB001    ADD	SP, SP, #4
0x1052	0x4770    BX	LR
0x1054	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
easymx_v7_STM32F107VC__log_initUartB:
;__em_f107vc_log.c, 44 :: 		static T_mikrobus_ret _log_initUartB(uint32_t baud)
; baud start address is: 0 (R0)
0x15D4	0xB081    SUB	SP, SP, #4
0x15D6	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 46 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x15DA	0x4909    LDR	R1, [PC, #36]
0x15DC	0xB402    PUSH	(R1)
0x15DE	0xF2400300  MOVW	R3, #0
0x15E2	0xF2400200  MOVW	R2, #0
0x15E6	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x15EA	0xF7FFFCF9  BL	_UART2_Init_Advanced+0
0x15EE	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 47 :: 		logger = UART2_Write;
0x15F0	0x4A04    LDR	R2, [PC, #16]
0x15F2	0x4905    LDR	R1, [PC, #20]
0x15F4	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 48 :: 		return 0;
0x15F6	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 49 :: 		}
L_end__log_initUartB:
0x15F8	0xF8DDE000  LDR	LR, [SP, #0]
0x15FC	0xB001    ADD	SP, SP, #4
0x15FE	0x4770    BX	LR
0x1600	0x22DC0000  	__GPIO_MODULE_USART2_PD56+0
0x1604	0x0F8D0000  	_UART2_Write+0
0x1608	0x00FC2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartB
_mikrobus_logWrite:
;easymx_v7_STM32F107VC.c, 319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
; format start address is: 4 (R1)
; data_ start address is: 0 (R0)
0x1B78	0xB083    SUB	SP, SP, #12
0x1B7A	0xF8CDE000  STR	LR, [SP, #0]
0x1B7E	0x4602    MOV	R2, R0
; format end address is: 4 (R1)
; data_ end address is: 0 (R0)
; data_ start address is: 8 (R2)
; format start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 321 :: 		uint8_t *ptr = data_;
; ptr start address is: 0 (R0)
0x1B80	0x4610    MOV	R0, R2
; data_ end address is: 8 (R2)
;easymx_v7_STM32F107VC.c, 322 :: 		uint8_t row = 13;
0x1B82	0x220D    MOVS	R2, #13
0x1B84	0xF88D2008  STRB	R2, [SP, #8]
0x1B88	0x220A    MOVS	R2, #10
0x1B8A	0xF88D2009  STRB	R2, [SP, #9]
;easymx_v7_STM32F107VC.c, 323 :: 		uint8_t line = 10;
;easymx_v7_STM32F107VC.c, 324 :: 		switch( format )
0x1B8E	0xE01F    B	L_mikrobus_logWrite95
; format end address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite97:
;easymx_v7_STM32F107VC.c, 327 :: 		_log_write( ptr );
; ptr end address is: 0 (R0)
0x1B90	0xF7FFFD10  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 328 :: 		break;
0x1B94	0xE023    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite98:
;easymx_v7_STM32F107VC.c, 330 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite99:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x1B96	0x7802    LDRB	R2, [R0, #0]
0x1B98	0xB12A    CBZ	R2, L_mikrobus_logWrite100
;easymx_v7_STM32F107VC.c, 332 :: 		_log_write( ptr );
0x1B9A	0x9001    STR	R0, [SP, #4]
0x1B9C	0xF7FFFD0A  BL	easymx_v7_STM32F107VC__log_write+0
0x1BA0	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 333 :: 		ptr++;
0x1BA2	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 334 :: 		}
; ptr end address is: 0 (R0)
0x1BA4	0xE7F7    B	L_mikrobus_logWrite99
L_mikrobus_logWrite100:
;easymx_v7_STM32F107VC.c, 335 :: 		break;
0x1BA6	0xE01A    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 336 :: 		case _LOG_LINE :
L_mikrobus_logWrite101:
;easymx_v7_STM32F107VC.c, 337 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite102:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x1BA8	0x7802    LDRB	R2, [R0, #0]
0x1BAA	0xB12A    CBZ	R2, L_mikrobus_logWrite103
;easymx_v7_STM32F107VC.c, 339 :: 		_log_write( ptr );
0x1BAC	0x9001    STR	R0, [SP, #4]
0x1BAE	0xF7FFFD01  BL	easymx_v7_STM32F107VC__log_write+0
0x1BB2	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 340 :: 		ptr++;
0x1BB4	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 341 :: 		}
; ptr end address is: 0 (R0)
0x1BB6	0xE7F7    B	L_mikrobus_logWrite102
L_mikrobus_logWrite103:
;easymx_v7_STM32F107VC.c, 342 :: 		_log_write( &row );
0x1BB8	0xAA02    ADD	R2, SP, #8
0x1BBA	0x4610    MOV	R0, R2
0x1BBC	0xF7FFFCFA  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 343 :: 		_log_write( &line );
0x1BC0	0xF10D0209  ADD	R2, SP, #9
0x1BC4	0x4610    MOV	R0, R2
0x1BC6	0xF7FFFCF5  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 344 :: 		break;
0x1BCA	0xE008    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 345 :: 		default :
L_mikrobus_logWrite104:
;easymx_v7_STM32F107VC.c, 346 :: 		return _MIKROBUS_ERR_LOG;
0x1BCC	0x2006    MOVS	R0, #6
0x1BCE	0xE007    B	L_end_mikrobus_logWrite
;easymx_v7_STM32F107VC.c, 347 :: 		}
L_mikrobus_logWrite95:
; ptr start address is: 0 (R0)
; format start address is: 4 (R1)
0x1BD0	0x2900    CMP	R1, #0
0x1BD2	0xD0DD    BEQ	L_mikrobus_logWrite97
0x1BD4	0x2901    CMP	R1, #1
0x1BD6	0xD0DE    BEQ	L_mikrobus_logWrite98
0x1BD8	0x2902    CMP	R1, #2
0x1BDA	0xD0E5    BEQ	L_mikrobus_logWrite101
; format end address is: 4 (R1)
; ptr end address is: 0 (R0)
0x1BDC	0xE7F6    B	L_mikrobus_logWrite104
L_mikrobus_logWrite96:
;easymx_v7_STM32F107VC.c, 348 :: 		return 0;
0x1BDE	0x2000    MOVS	R0, #0
;easymx_v7_STM32F107VC.c, 349 :: 		}
L_end_mikrobus_logWrite:
0x1BE0	0xF8DDE000  LDR	LR, [SP, #0]
0x1BE4	0xB003    ADD	SP, SP, #12
0x1BE6	0x4770    BX	LR
; end of _mikrobus_logWrite
easymx_v7_STM32F107VC__log_write:
;__em_f107vc_log.c, 17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
; data_ start address is: 0 (R0)
0x15B4	0xB081    SUB	SP, SP, #4
0x15B6	0xF8CDE000  STR	LR, [SP, #0]
; data_ end address is: 0 (R0)
; data_ start address is: 0 (R0)
;__em_f107vc_log.c, 19 :: 		logger( *data_ );
0x15BA	0x7801    LDRB	R1, [R0, #0]
; data_ end address is: 0 (R0)
0x15BC	0xB2CC    UXTB	R4, R1
0x15BE	0xB2A0    UXTH	R0, R4
0x15C0	0x4C03    LDR	R4, [PC, #12]
0x15C2	0x6824    LDR	R4, [R4, #0]
0x15C4	0x47A0    BLX	R4
;__em_f107vc_log.c, 20 :: 		return 0;
0x15C6	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 21 :: 		}
L_end__log_write:
0x15C8	0xF8DDE000  LDR	LR, [SP, #0]
0x15CC	0xB001    ADD	SP, SP, #4
0x15CE	0x4770    BX	LR
0x15D0	0x00FC2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_write
_UART1_Write:
;__Lib_UART_123_45.c, 41 :: 		
; _data start address is: 0 (R0)
0x1014	0xB081    SUB	SP, SP, #4
0x1016	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 42 :: 		
0x101A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x101C	0x4803    LDR	R0, [PC, #12]
0x101E	0xF7FFFBC9  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 43 :: 		
L_end_UART1_Write:
0x1022	0xF8DDE000  LDR	LR, [SP, #0]
0x1026	0xB001    ADD	SP, SP, #4
0x1028	0x4770    BX	LR
0x102A	0xBF00    NOP
0x102C	0x38004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_UARTx_Write:
;__Lib_UART_123_45.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x07B4	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x07B6	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x07BA	0x4601    MOV	R1, R0
0x07BC	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45.c, 36 :: 		
L___Lib_UART_123_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x07C0	0x680B    LDR	R3, [R1, #0]
0x07C2	0xF3C312C0  UBFX	R2, R3, #7, #1
0x07C6	0xB902    CBNZ	R2, L___Lib_UART_123_45_UARTx_Write1
;__Lib_UART_123_45.c, 37 :: 		
0x07C8	0xE7FA    B	L___Lib_UART_123_45_UARTx_Write0
L___Lib_UART_123_45_UARTx_Write1:
;__Lib_UART_123_45.c, 38 :: 		
0x07CA	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x07CC	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45.c, 39 :: 		
L_end_UARTx_Write:
0x07CE	0xB001    ADD	SP, SP, #4
0x07D0	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45.c, 45 :: 		
; _data start address is: 0 (R0)
0x0F8C	0xB081    SUB	SP, SP, #4
0x0F8E	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 46 :: 		
0x0F92	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0F94	0x4803    LDR	R0, [PC, #12]
0x0F96	0xF7FFFC0D  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 47 :: 		
L_end_UART2_Write:
0x0F9A	0xF8DDE000  LDR	LR, [SP, #0]
0x0F9E	0xB001    ADD	SP, SP, #4
0x0FA0	0x4770    BX	LR
0x0FA2	0xBF00    NOP
0x0FA4	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45.c, 49 :: 		
; _data start address is: 0 (R0)
0x0F70	0xB081    SUB	SP, SP, #4
0x0F72	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 50 :: 		
0x0F76	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0F78	0x4803    LDR	R0, [PC, #12]
0x0F7A	0xF7FFFC1B  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 51 :: 		
L_end_UART3_Write:
0x0F7E	0xF8DDE000  LDR	LR, [SP, #0]
0x0F82	0xB001    ADD	SP, SP, #4
0x0F84	0x4770    BX	LR
0x0F86	0xBF00    NOP
0x0F88	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45.c, 53 :: 		
; _data start address is: 0 (R0)
0x0FA8	0xB081    SUB	SP, SP, #4
0x0FAA	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 54 :: 		
0x0FAE	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0FB0	0x4803    LDR	R0, [PC, #12]
0x0FB2	0xF7FFFBFF  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 55 :: 		
L_end_UART4_Write:
0x0FB6	0xF8DDE000  LDR	LR, [SP, #0]
0x0FBA	0xB001    ADD	SP, SP, #4
0x0FBC	0x4770    BX	LR
0x0FBE	0xBF00    NOP
0x0FC0	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45.c, 57 :: 		
; _data start address is: 0 (R0)
0x0FC4	0xB081    SUB	SP, SP, #4
0x0FC6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 58 :: 		
0x0FCA	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0FCC	0x4803    LDR	R0, [PC, #12]
0x0FCE	0xF7FFFBF1  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 59 :: 		
L_end_UART5_Write:
0x0FD2	0xF8DDE000  LDR	LR, [SP, #0]
0x0FD6	0xB001    ADD	SP, SP, #4
0x0FD8	0x4770    BX	LR
0x0FDA	0xBF00    NOP
0x0FDC	0x50004000  	UART5_SR+0
; end of _UART5_Write
_applicationInit:
;Click_GSM_GNSS_2_STM.c, 79 :: 		void applicationInit()
0x1F78	0xB081    SUB	SP, SP, #4
0x1F7A	0xF8CDE000  STR	LR, [SP, #0]
;Click_GSM_GNSS_2_STM.c, 82 :: 		gsmgnss2_configTimer();
0x1F7E	0xF7FFFEB7  BL	Click_GSM_GNSS_2_STM_gsmgnss2_configTimer+0
;Click_GSM_GNSS_2_STM.c, 85 :: 		gsmgnss2_uartDriverInit((T_GSMGNSS2_P)&_MIKROBUS1_GPIO, (T_GSMGNSS2_P)&_MIKROBUS1_UART);
0x1F82	0x491E    LDR	R1, [PC, #120]
0x1F84	0x481E    LDR	R0, [PC, #120]
0x1F86	0xF7FFFEA5  BL	_gsmgnss2_uartDriverInit+0
;Click_GSM_GNSS_2_STM.c, 86 :: 		gsmgnss2_coreInit( gsmgnss_default_handler, 1500 );
0x1F8A	0x481E    LDR	R0, [PC, #120]
0x1F8C	0xF24051DC  MOVW	R1, #1500
0x1F90	0xF7FFFE2A  BL	_gsmgnss2_coreInit+0
;Click_GSM_GNSS_2_STM.c, 89 :: 		gsmgnss2_hfcEnable( 1 );
0x1F94	0x2001    MOVS	R0, #1
0x1F96	0xF7FFFDD1  BL	_gsmgnss2_hfcEnable+0
;Click_GSM_GNSS_2_STM.c, 90 :: 		gsmgnss2_modulePower( 1 );
0x1F9A	0x2001    MOVS	R0, #1
0x1F9C	0xF7FFFD84  BL	_gsmgnss2_modulePower+0
;Click_GSM_GNSS_2_STM.c, 93 :: 		gsmgnss2_cmdSingle( &GSM_CMD_AT[0] );
0x1FA0	0x4819    LDR	R0, [PC, #100]
0x1FA2	0xF7FFFD07  BL	_gsmgnss2_cmdSingle+0
;Click_GSM_GNSS_2_STM.c, 94 :: 		gsmgnss2_cmdSingle( &GSM_CMD_ATI[0] );
0x1FA6	0x4819    LDR	R0, [PC, #100]
0x1FA8	0xF7FFFD04  BL	_gsmgnss2_cmdSingle+0
;Click_GSM_GNSS_2_STM.c, 95 :: 		gsmgnss2_cmdSingle( &GSM_CMD_ATE[0] );
0x1FAC	0x4818    LDR	R0, [PC, #96]
0x1FAE	0xF7FFFD01  BL	_gsmgnss2_cmdSingle+0
;Click_GSM_GNSS_2_STM.c, 96 :: 		gsmgnss2_cmdSingle( &GSM_CMD_IFC[0] );
0x1FB2	0x4818    LDR	R0, [PC, #96]
0x1FB4	0xF7FFFCFE  BL	_gsmgnss2_cmdSingle+0
;Click_GSM_GNSS_2_STM.c, 97 :: 		gsmgnss2_cmdSingle( &GSM_CMD_CMGF[0] );
0x1FB8	0x4817    LDR	R0, [PC, #92]
0x1FBA	0xF7FFFCFB  BL	_gsmgnss2_cmdSingle+0
;Click_GSM_GNSS_2_STM.c, 98 :: 		mikrobus_logWrite("---- GSM Init done ---", _LOG_LINE);
0x1FBE	0x4817    LDR	R0, [PC, #92]
0x1FC0	0x2102    MOVS	R1, #2
0x1FC2	0xF7FFFDD9  BL	_mikrobus_logWrite+0
;Click_GSM_GNSS_2_STM.c, 100 :: 		gsmgnss2_cmdSingle( "AT+CGNSPWR=1" );
0x1FC6	0x4816    LDR	R0, [PC, #88]
0x1FC8	0xF7FFFCF4  BL	_gsmgnss2_cmdSingle+0
;Click_GSM_GNSS_2_STM.c, 101 :: 		Delay_ms( 3000 );
0x1FCC	0xF24507FF  MOVW	R7, #20735
0x1FD0	0xF2C02725  MOVT	R7, #549
0x1FD4	0xBF00    NOP
0x1FD6	0xBF00    NOP
L_applicationInit0:
0x1FD8	0x1E7F    SUBS	R7, R7, #1
0x1FDA	0xD1FD    BNE	L_applicationInit0
0x1FDC	0xBF00    NOP
0x1FDE	0xBF00    NOP
0x1FE0	0xBF00    NOP
;Click_GSM_GNSS_2_STM.c, 103 :: 		mikrobus_logWrite("---- GNSS Init done ---", _LOG_LINE);
0x1FE2	0x4810    LDR	R0, [PC, #64]
0x1FE4	0x2102    MOVS	R1, #2
0x1FE6	0xF7FFFDC7  BL	_mikrobus_logWrite+0
;Click_GSM_GNSS_2_STM.c, 104 :: 		mikrobus_logWrite("---- Please, call me :) ----", _LOG_LINE);
0x1FEA	0x480F    LDR	R0, [PC, #60]
0x1FEC	0x2102    MOVS	R1, #2
0x1FEE	0xF7FFFDC3  BL	_mikrobus_logWrite+0
;Click_GSM_GNSS_2_STM.c, 105 :: 		}
L_end_applicationInit:
0x1FF2	0xF8DDE000  LDR	LR, [SP, #0]
0x1FF6	0xB001    ADD	SP, SP, #4
0x1FF8	0x4770    BX	LR
0x1FFA	0xBF00    NOP
0x1FFC	0x24F80000  	__MIKROBUS1_UART+0
0x2000	0x24200000  	__MIKROBUS1_GPIO+0
0x2004	0x18590000  	_gsmgnss_default_handler+0
0x2008	0x00152000  	Click_GSM_GNSS_2_STM_GSM_CMD_AT+0
0x200C	0x00182000  	Click_GSM_GNSS_2_STM_GSM_CMD_ATI+0
0x2010	0x001C2000  	Click_GSM_GNSS_2_STM_GSM_CMD_ATE+0
0x2014	0x00212000  	Click_GSM_GNSS_2_STM_GSM_CMD_IFC+0
0x2018	0x002D2000  	Click_GSM_GNSS_2_STM_GSM_CMD_CMGF+0
0x201C	0x00372000  	?lstr2_Click_GSM_GNSS_2_STM+0
0x2020	0x004E2000  	?lstr3_Click_GSM_GNSS_2_STM+0
0x2024	0x005B2000  	?lstr4_Click_GSM_GNSS_2_STM+0
0x2028	0x00732000  	?lstr5_Click_GSM_GNSS_2_STM+0
; end of _applicationInit
Click_GSM_GNSS_2_STM_gsmgnss2_configTimer:
;click_gsm_gnss_2_timer.h, 15 :: 		static void gsmgnss2_configTimer()
0x1CF0	0xB081    SUB	SP, SP, #4
0x1CF2	0xF8CDE000  STR	LR, [SP, #0]
;click_gsm_gnss_2_timer.h, 17 :: 		RCC_APB1ENR.TIM2EN = 1;
0x1CF6	0x2101    MOVS	R1, #1
0x1CF8	0xB249    SXTB	R1, R1
0x1CFA	0x480E    LDR	R0, [PC, #56]
0x1CFC	0x6001    STR	R1, [R0, #0]
;click_gsm_gnss_2_timer.h, 18 :: 		TIM2_CR1.CEN = 0;
0x1CFE	0x2100    MOVS	R1, #0
0x1D00	0xB249    SXTB	R1, R1
0x1D02	0x480D    LDR	R0, [PC, #52]
0x1D04	0x6001    STR	R1, [R0, #0]
;click_gsm_gnss_2_timer.h, 19 :: 		TIM2_PSC = 1;
0x1D06	0x2101    MOVS	R1, #1
0x1D08	0x480C    LDR	R0, [PC, #48]
0x1D0A	0x6001    STR	R1, [R0, #0]
;click_gsm_gnss_2_timer.h, 20 :: 		TIM2_ARR = 35999;
0x1D0C	0xF648419F  MOVW	R1, #35999
0x1D10	0x480B    LDR	R0, [PC, #44]
0x1D12	0x6001    STR	R1, [R0, #0]
;click_gsm_gnss_2_timer.h, 21 :: 		NVIC_IntEnable(IVT_INT_TIM2);
0x1D14	0xF240002C  MOVW	R0, #44
0x1D18	0xF7FFFDD4  BL	_NVIC_IntEnable+0
;click_gsm_gnss_2_timer.h, 22 :: 		TIM2_DIER.UIE = 1;
0x1D1C	0x2101    MOVS	R1, #1
0x1D1E	0xB249    SXTB	R1, R1
0x1D20	0x4808    LDR	R0, [PC, #32]
0x1D22	0x6001    STR	R1, [R0, #0]
;click_gsm_gnss_2_timer.h, 23 :: 		TIM2_CR1.CEN = 1;
0x1D24	0x4804    LDR	R0, [PC, #16]
0x1D26	0x6001    STR	R1, [R0, #0]
;click_gsm_gnss_2_timer.h, 24 :: 		EnableInterrupts();
0x1D28	0xF7FFFE08  BL	_EnableInterrupts+0
;click_gsm_gnss_2_timer.h, 25 :: 		}
L_end_gsmgnss2_configTimer:
0x1D2C	0xF8DDE000  LDR	LR, [SP, #0]
0x1D30	0xB001    ADD	SP, SP, #4
0x1D32	0x4770    BX	LR
0x1D34	0x03804242  	RCC_APB1ENR+0
0x1D38	0x00004200  	TIM2_CR1+0
0x1D3C	0x00284000  	TIM2_PSC+0
0x1D40	0x002C4000  	TIM2_ARR+0
0x1D44	0x01804200  	TIM2_DIER+0
; end of Click_GSM_GNSS_2_STM_gsmgnss2_configTimer
_NVIC_IntEnable:
;__Lib_System_105_107.c, 156 :: 		
; ivt start address is: 0 (R0)
0x18C4	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_105_107.c, 168 :: 		
0x18C6	0x2804    CMP	R0, #4
0x18C8	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 173 :: 		
0x18CA	0x4919    LDR	R1, [PC, #100]
0x18CC	0x6809    LDR	R1, [R1, #0]
0x18CE	0xF4413280  ORR	R2, R1, #65536
0x18D2	0x4917    LDR	R1, [PC, #92]
0x18D4	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 174 :: 		
0x18D6	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_105_107.c, 175 :: 		
; ivt start address is: 0 (R0)
0x18D8	0x2805    CMP	R0, #5
0x18DA	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 180 :: 		
0x18DC	0x4914    LDR	R1, [PC, #80]
0x18DE	0x6809    LDR	R1, [R1, #0]
0x18E0	0xF4413200  ORR	R2, R1, #131072
0x18E4	0x4912    LDR	R1, [PC, #72]
0x18E6	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 181 :: 		
0x18E8	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_105_107.c, 182 :: 		
; ivt start address is: 0 (R0)
0x18EA	0x2806    CMP	R0, #6
0x18EC	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 187 :: 		
0x18EE	0x4910    LDR	R1, [PC, #64]
0x18F0	0x6809    LDR	R1, [R1, #0]
0x18F2	0xF4412280  ORR	R2, R1, #262144
0x18F6	0x490E    LDR	R1, [PC, #56]
0x18F8	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 188 :: 		
0x18FA	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_105_107.c, 189 :: 		
; ivt start address is: 0 (R0)
0x18FC	0x280F    CMP	R0, #15
0x18FE	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 194 :: 		
0x1900	0x490C    LDR	R1, [PC, #48]
0x1902	0x6809    LDR	R1, [R1, #0]
0x1904	0xF0410202  ORR	R2, R1, #2
0x1908	0x490A    LDR	R1, [PC, #40]
0x190A	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 195 :: 		
0x190C	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_105_107.c, 196 :: 		
; ivt start address is: 0 (R0)
0x190E	0x2810    CMP	R0, #16
0x1910	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_105_107.c, 201 :: 		
0x1912	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x1916	0x0961    LSRS	R1, R4, #5
0x1918	0x008A    LSLS	R2, R1, #2
0x191A	0x4907    LDR	R1, [PC, #28]
0x191C	0x188B    ADDS	R3, R1, R2
;__Lib_System_105_107.c, 202 :: 		
0x191E	0xF004021F  AND	R2, R4, #31
0x1922	0xF04F0101  MOV	R1, #1
0x1926	0x4091    LSLS	R1, R2
0x1928	0x6019    STR	R1, [R3, #0]
;__Lib_System_105_107.c, 203 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_105_107.c, 204 :: 		
L_end_NVIC_IntEnable:
0x192A	0xB001    ADD	SP, SP, #4
0x192C	0x4770    BX	LR
0x192E	0xBF00    NOP
0x1930	0xED24E000  	SCB_SHCRS+0
0x1934	0xE010E000  	STK_CTRL+0
0x1938	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_EnableInterrupts:
;__Lib_System_105_107.c, 107 :: 		
0x193C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 110 :: 		
0x193E	0xF3EF8C10  MRS	R12, #16
0x1942	0x4660    MOV	R0, R12
; result start address is: 0 (R0)
;__Lib_System_105_107.c, 111 :: 		
0x1944	0xB662    CPSIE	i
;__Lib_System_105_107.c, 113 :: 		
; result end address is: 0 (R0)
;__Lib_System_105_107.c, 114 :: 		
L_end_EnableInterrupts:
0x1946	0xB001    ADD	SP, SP, #4
0x1948	0x4770    BX	LR
; end of _EnableInterrupts
_gsmgnss2_uartDriverInit:
;__gsmgnss2_driver.c, 556 :: 		void gsmgnss2_uartDriverInit(T_GSMGNSS2_P gpioObj, T_GSMGNSS2_P uartObj)
; uartObj start address is: 4 (R1)
; gpioObj start address is: 0 (R0)
0x1CD4	0xB081    SUB	SP, SP, #4
0x1CD6	0xF8CDE000  STR	LR, [SP, #0]
0x1CDA	0x4603    MOV	R3, R0
; uartObj end address is: 4 (R1)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 12 (R3)
; uartObj start address is: 4 (R1)
;__gsmgnss2_driver.c, 558 :: 		hal_uartMap( (T_HAL_P)uartObj );
0x1CDC	0x4608    MOV	R0, R1
; uartObj end address is: 4 (R1)
0x1CDE	0xF7FFFDDD  BL	__gsmgnss2_driver_hal_uartMap+0
;__gsmgnss2_driver.c, 559 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x1CE2	0x4618    MOV	R0, R3
; gpioObj end address is: 12 (R3)
0x1CE4	0xF7FFFCBE  BL	__gsmgnss2_driver_hal_gpioMap+0
;__gsmgnss2_driver.c, 560 :: 		}
L_end_gsmgnss2_uartDriverInit:
0x1CE8	0xF8DDE000  LDR	LR, [SP, #0]
0x1CEC	0xB001    ADD	SP, SP, #4
0x1CEE	0x4770    BX	LR
; end of _gsmgnss2_uartDriverInit
__gsmgnss2_driver_hal_uartMap:
;__hal_stm32.c, 133 :: 		static void hal_uartMap(T_HAL_P uartObj)
; uartObj start address is: 0 (R0)
; uartObj end address is: 0 (R0)
; uartObj start address is: 0 (R0)
;__hal_stm32.c, 137 :: 		fp_uartWrite = tmp->uartWrite;
0x189C	0x6802    LDR	R2, [R0, #0]
0x189E	0x4906    LDR	R1, [PC, #24]
0x18A0	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 138 :: 		fp_uartRead  = tmp->uartRead;
0x18A2	0x1D01    ADDS	R1, R0, #4
0x18A4	0x680A    LDR	R2, [R1, #0]
0x18A6	0x4905    LDR	R1, [PC, #20]
0x18A8	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 139 :: 		fp_uartReady = tmp->uartReady;
0x18AA	0xF2000108  ADDW	R1, R0, #8
; uartObj end address is: 0 (R0)
0x18AE	0x680A    LDR	R2, [R1, #0]
0x18B0	0x4903    LDR	R1, [PC, #12]
0x18B2	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 140 :: 		}
L_end_hal_uartMap:
0x18B4	0x4770    BX	LR
0x18B6	0xBF00    NOP
0x18B8	0x04142000  	__gsmgnss2_driver_fp_uartWrite+0
0x18BC	0x01002000  	__gsmgnss2_driver_fp_uartRead+0
0x18C0	0x04182000  	__gsmgnss2_driver_fp_uartReady+0
; end of __gsmgnss2_driver_hal_uartMap
__gsmgnss2_driver_hal_gpioMap:
;__gsmgnss2_hal.c, 215 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
; gpioObj start address is: 0 (R0)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 0 (R0)
;__gsmgnss2_hal.c, 220 :: 		hal_gpio_anGet = tmp->gpioGet[ __AN_PIN_INPUT__ ];
0x1664	0xF2000330  ADDW	R3, R0, #48
0x1668	0x681A    LDR	R2, [R3, #0]
0x166A	0x490B    LDR	R1, [PC, #44]
0x166C	0x600A    STR	R2, [R1, #0]
;__gsmgnss2_hal.c, 238 :: 		hal_gpio_pwmGet = tmp->gpioGet[ __PWM_PIN_INPUT__ ];
0x166E	0xF2030118  ADDW	R1, R3, #24
0x1672	0x680A    LDR	R2, [R1, #0]
0x1674	0x4909    LDR	R1, [PC, #36]
0x1676	0x600A    STR	R2, [R1, #0]
;__gsmgnss2_hal.c, 241 :: 		hal_gpio_intGet = tmp->gpioGet[ __INT_PIN_INPUT__ ];
0x1678	0xF203011C  ADDW	R1, R3, #28
0x167C	0x680A    LDR	R2, [R1, #0]
0x167E	0x4908    LDR	R1, [PC, #32]
0x1680	0x600A    STR	R2, [R1, #0]
;__gsmgnss2_hal.c, 259 :: 		hal_gpio_csSet = tmp->gpioSet[ __CS_PIN_OUTPUT__ ];
0x1682	0xF2000108  ADDW	R1, R0, #8
0x1686	0x680A    LDR	R2, [R1, #0]
0x1688	0x4906    LDR	R1, [PC, #24]
0x168A	0x600A    STR	R2, [R1, #0]
;__gsmgnss2_hal.c, 262 :: 		hal_gpio_rstSet = tmp->gpioSet[ __RST_PIN_OUTPUT__ ];
0x168C	0x1D01    ADDS	R1, R0, #4
; gpioObj end address is: 0 (R0)
0x168E	0x680A    LDR	R2, [R1, #0]
0x1690	0x4905    LDR	R1, [PC, #20]
0x1692	0x600A    STR	R2, [R1, #0]
;__gsmgnss2_hal.c, 291 :: 		}
L_end_hal_gpioMap:
0x1694	0x4770    BX	LR
0x1696	0xBF00    NOP
0x1698	0x041C2000  	__gsmgnss2_driver_hal_gpio_anGet+0
0x169C	0x04202000  	__gsmgnss2_driver_hal_gpio_pwmGet+0
0x16A0	0x04242000  	__gsmgnss2_driver_hal_gpio_intGet+0
0x16A4	0x04282000  	__gsmgnss2_driver_hal_gpio_csSet+0
0x16A8	0x042C2000  	__gsmgnss2_driver_hal_gpio_rstSet+0
; end of __gsmgnss2_driver_hal_gpioMap
_gsmgnss2_coreInit:
;__gsmgnss2_driver.c, 565 :: 		void gsmgnss2_coreInit(T_gsmgnss2_handler defaultHdl, uint32_t defaultWdog)
; defaultWdog start address is: 4 (R1)
; defaultHdl start address is: 0 (R0)
0x1BE8	0xB081    SUB	SP, SP, #4
0x1BEA	0xF8CDE000  STR	LR, [SP, #0]
; defaultWdog end address is: 4 (R1)
; defaultHdl end address is: 0 (R0)
; defaultHdl start address is: 0 (R0)
; defaultWdog start address is: 4 (R1)
;__gsmgnss2_driver.c, 567 :: 		f_sequence_active          = false;
0x1BEE	0x2300    MOVS	R3, #0
0x1BF0	0x4A27    LDR	R2, [PC, #156]
0x1BF2	0x7013    STRB	R3, [R2, #0]
;__gsmgnss2_driver.c, 568 :: 		f_buffer_warning           = false;
0x1BF4	0x2300    MOVS	R3, #0
0x1BF6	0x4A27    LDR	R2, [PC, #156]
0x1BF8	0x7013    STRB	R3, [R2, #0]
;__gsmgnss2_driver.c, 569 :: 		f_response_ready           = false;
0x1BFA	0x2300    MOVS	R3, #0
0x1BFC	0x4A26    LDR	R2, [PC, #152]
0x1BFE	0x7013    STRB	R3, [R2, #0]
;__gsmgnss2_driver.c, 570 :: 		f_wdog_timeout             = false;
0x1C00	0x2300    MOVS	R3, #0
0x1C02	0x4A26    LDR	R2, [PC, #152]
0x1C04	0x7013    STRB	R3, [R2, #0]
;__gsmgnss2_driver.c, 573 :: 		hdlBuff.storage[0].handler = defaultHdl;
0x1C06	0x4A26    LDR	R2, [PC, #152]
0x1C08	0x6010    STR	R0, [R2, #0]
; defaultHdl end address is: 0 (R0)
;__gsmgnss2_driver.c, 574 :: 		hdlBuff.storage[0].timeout = defaultWdog;
0x1C0A	0x4A26    LDR	R2, [PC, #152]
0x1C0C	0x6011    STR	R1, [R2, #0]
; defaultWdog end address is: 4 (R1)
;__gsmgnss2_driver.c, 575 :: 		hdlBuff.storage[0].hash    = generateHash("");
0x1C0E	0x4A26    LDR	R2, [PC, #152]
0x1C10	0x4610    MOV	R0, R2
0x1C12	0xF7FFFD0F  BL	__gsmgnss2_driver_generateHash+0
0x1C16	0x4A25    LDR	R2, [PC, #148]
0x1C18	0x6010    STR	R0, [R2, #0]
;__gsmgnss2_driver.c, 576 :: 		hdlBuff.storage[0].len     = 0;
0x1C1A	0x2300    MOVS	R3, #0
0x1C1C	0x4A24    LDR	R2, [PC, #144]
0x1C1E	0x8013    STRH	R3, [R2, #0]
;__gsmgnss2_driver.c, 577 :: 		hdlBuff.idx                = 1;
0x1C20	0x2301    MOVS	R3, #1
0x1C22	0x4A24    LDR	R2, [PC, #144]
0x1C24	0x8013    STRH	R3, [R2, #0]
;__gsmgnss2_driver.c, 580 :: 		CORE_CLEAN_RX();
0x1C26	0x2300    MOVS	R3, #0
0x1C28	0x4A23    LDR	R2, [PC, #140]
0x1C2A	0x8013    STRH	R3, [R2, #0]
0x1C2C	0x2300    MOVS	R3, #0
0x1C2E	0x4A23    LDR	R2, [PC, #140]
0x1C30	0x7013    STRB	R3, [R2, #0]
;__gsmgnss2_driver.c, 581 :: 		CORE_BLOCK();
0x1C32	0x2300    MOVS	R3, #0
0x1C34	0x4A19    LDR	R2, [PC, #100]
0x1C36	0x7013    STRB	R3, [R2, #0]
0x1C38	0x2300    MOVS	R3, #0
0x1C3A	0x4A17    LDR	R2, [PC, #92]
0x1C3C	0x7013    STRB	R3, [R2, #0]
0x1C3E	0x2301    MOVS	R3, #1
0x1C40	0x4A13    LDR	R2, [PC, #76]
0x1C42	0x7013    STRB	R3, [R2, #0]
;__gsmgnss2_driver.c, 582 :: 		CORE_UNBLOCK();
0x1C44	0x2300    MOVS	R3, #0
0x1C46	0x4A15    LDR	R2, [PC, #84]
0x1C48	0x7013    STRB	R3, [R2, #0]
0x1C4A	0x2300    MOVS	R3, #0
0x1C4C	0x4A12    LDR	R2, [PC, #72]
0x1C4E	0x7013    STRB	R3, [R2, #0]
0x1C50	0x2300    MOVS	R3, #0
0x1C52	0x4A0F    LDR	R2, [PC, #60]
0x1C54	0x7013    STRB	R3, [R2, #0]
;__gsmgnss2_driver.c, 583 :: 		WATCHDOG_START();
0x1C56	0x2300    MOVS	R3, #0
0x1C58	0x4A19    LDR	R2, [PC, #100]
0x1C5A	0x6013    STR	R3, [R2, #0]
0x1C5C	0x2301    MOVS	R3, #1
0x1C5E	0x4A19    LDR	R2, [PC, #100]
0x1C60	0x7013    STRB	R3, [R2, #0]
;__gsmgnss2_driver.c, 584 :: 		WATCHDOG_STOP();
0x1C62	0x2300    MOVS	R3, #0
0x1C64	0x4A17    LDR	R2, [PC, #92]
0x1C66	0x7013    STRB	R3, [R2, #0]
;__gsmgnss2_driver.c, 585 :: 		TIMER_START();
0x1C68	0x2300    MOVS	R3, #0
0x1C6A	0x4A17    LDR	R2, [PC, #92]
0x1C6C	0x6013    STR	R3, [R2, #0]
0x1C6E	0x2301    MOVS	R3, #1
0x1C70	0x4A16    LDR	R2, [PC, #88]
0x1C72	0x7013    STRB	R3, [R2, #0]
;__gsmgnss2_driver.c, 586 :: 		TIMER_STOP();
0x1C74	0x2300    MOVS	R3, #0
0x1C76	0x4A15    LDR	R2, [PC, #84]
0x1C78	0x7013    STRB	R3, [R2, #0]
;__gsmgnss2_driver.c, 587 :: 		CORE_SET_FREE();
0x1C7A	0x4A15    LDR	R2, [PC, #84]
0x1C7C	0x7812    LDRB	R2, [R2, #0]
0x1C7E	0xB112    CBZ	R2, L_gsmgnss2_coreInit49
0x1C80	0x2001    MOVS	R0, #1
0x1C82	0xF7FFFCC3  BL	__gsmgnss2_driver_DTE_setState+0
L_gsmgnss2_coreInit49:
;__gsmgnss2_driver.c, 588 :: 		}
L_end_gsmgnss2_coreInit:
0x1C86	0xF8DDE000  LDR	LR, [SP, #0]
0x1C8A	0xB001    ADD	SP, SP, #4
0x1C8C	0x4770    BX	LR
0x1C8E	0xBF00    NOP
0x1C90	0x01042000  	__gsmgnss2_driver_f_sequence_active+0
0x1C94	0x01062000  	__gsmgnss2_driver_f_buffer_warning+0
0x1C98	0x00FB2000  	__gsmgnss2_driver_f_response_ready+0
0x1C9C	0x00B32000  	__gsmgnss2_driver_f_wdog_timeout+0
0x1CA0	0x02202000  	__gsmgnss2_driver_hdlBuff+16
0x1CA4	0x021C2000  	__gsmgnss2_driver_hdlBuff+12
0x1CA8	0x00B22000  	?lstr1___gsmgnss2_driver+0
0x1CAC	0x02182000  	__gsmgnss2_driver_hdlBuff+8
0x1CB0	0x02142000  	__gsmgnss2_driver_hdlBuff+4
0x1CB4	0x02102000  	__gsmgnss2_driver_hdlBuff+0
0x1CB8	0x010C2000  	__gsmgnss2_driver_rxBuff+0
0x1CBC	0x010E2000  	__gsmgnss2_driver_rxBuff+2
0x1CC0	0x04302000  	__gsmgnss2_driver_c_watchdog_timer+0
0x1CC4	0x01072000  	__gsmgnss2_driver_f_watchdog_active+0
0x1CC8	0x01082000  	__gsmgnss2_driver_c_timer+0
0x1CCC	0x01052000  	__gsmgnss2_driver_f_timer_active+0
0x1CD0	0x020E2000  	__gsmgnss2_driver_f_hfc_active+0
; end of _gsmgnss2_coreInit
__gsmgnss2_driver_generateHash:
;__gsmgnss2_driver.c, 449 :: 		static uint32_t generateHash( char *pCmd )
; pCmd start address is: 0 (R0)
; pCmd end address is: 0 (R0)
; pCmd start address is: 0 (R0)
;__gsmgnss2_driver.c, 451 :: 		uint8_t  cnt  = 0;
; cnt start address is: 4 (R1)
0x1634	0x2100    MOVS	R1, #0
;__gsmgnss2_driver.c, 452 :: 		uint16_t ch   = 0;
;__gsmgnss2_driver.c, 453 :: 		uint32_t hash = 5;
; hash start address is: 16 (R4)
0x1636	0xF04F0405  MOV	R4, #5
; pCmd end address is: 0 (R0)
; cnt end address is: 4 (R1)
; hash end address is: 16 (R4)
0x163A	0x4603    MOV	R3, R0
0x163C	0xB2C8    UXTB	R0, R1
;__gsmgnss2_driver.c, 455 :: 		while ( ch = *pCmd++ )
L___gsmgnss2_driver_generateHash30:
; hash start address is: 16 (R4)
; pCmd start address is: 12 (R3)
; cnt start address is: 0 (R0)
; pCmd start address is: 12 (R3)
0x163E	0x461A    MOV	R2, R3
0x1640	0x1C59    ADDS	R1, R3, #1
0x1642	0x460B    MOV	R3, R1
; pCmd end address is: 12 (R3)
0x1644	0x7811    LDRB	R1, [R2, #0]
; ch start address is: 8 (R2)
0x1646	0xB2CA    UXTB	R2, R1
0x1648	0xB14A    CBZ	R2, L___gsmgnss2_driver_generateHash31
; pCmd end address is: 12 (R3)
;__gsmgnss2_driver.c, 457 :: 		hash += (ch << (cnt % 8));
; pCmd start address is: 12 (R3)
0x164A	0xF0000107  AND	R1, R0, #7
0x164E	0xB2C9    UXTB	R1, R1
0x1650	0xFA02F101  LSL	R1, R2, R1
0x1654	0xB289    UXTH	R1, R1
0x1656	0x1864    ADDS	R4, R4, R1
;__gsmgnss2_driver.c, 458 :: 		cnt++;
0x1658	0x1C40    ADDS	R0, R0, #1
0x165A	0xB2C0    UXTB	R0, R0
;__gsmgnss2_driver.c, 459 :: 		}
; pCmd end address is: 12 (R3)
; ch end address is: 8 (R2)
; cnt end address is: 0 (R0)
0x165C	0xE7EF    B	L___gsmgnss2_driver_generateHash30
L___gsmgnss2_driver_generateHash31:
;__gsmgnss2_driver.c, 460 :: 		return hash;
0x165E	0x4620    MOV	R0, R4
; hash end address is: 16 (R4)
;__gsmgnss2_driver.c, 461 :: 		}
L_end_generateHash:
0x1660	0x4770    BX	LR
; end of __gsmgnss2_driver_generateHash
__gsmgnss2_driver_DTE_setState:
;__gsmgnss2_driver.c, 152 :: 		static void DTE_setState(bool state)
; state start address is: 0 (R0)
0x160C	0xB081    SUB	SP, SP, #4
0x160E	0xF8CDE000  STR	LR, [SP, #0]
; state end address is: 0 (R0)
; state start address is: 0 (R0)
;__gsmgnss2_driver.c, 155 :: 		if (true == state)
0x1612	0x2801    CMP	R0, #1
0x1614	0xD104    BNE	L___gsmgnss2_driver_DTE_setState0
; state end address is: 0 (R0)
;__gsmgnss2_driver.c, 157 :: 		hal_gpio_csSet( 0 );
0x1616	0x2000    MOVS	R0, #0
0x1618	0x4C05    LDR	R4, [PC, #20]
0x161A	0x6824    LDR	R4, [R4, #0]
0x161C	0x47A0    BLX	R4
;__gsmgnss2_driver.c, 158 :: 		}
0x161E	0xE003    B	L___gsmgnss2_driver_DTE_setState1
L___gsmgnss2_driver_DTE_setState0:
;__gsmgnss2_driver.c, 161 :: 		hal_gpio_csSet( 1 );
0x1620	0x2001    MOVS	R0, #1
0x1622	0x4C03    LDR	R4, [PC, #12]
0x1624	0x6824    LDR	R4, [R4, #0]
0x1626	0x47A0    BLX	R4
;__gsmgnss2_driver.c, 162 :: 		}
L___gsmgnss2_driver_DTE_setState1:
;__gsmgnss2_driver.c, 164 :: 		}
L_end_DTE_setState:
0x1628	0xF8DDE000  LDR	LR, [SP, #0]
0x162C	0xB001    ADD	SP, SP, #4
0x162E	0x4770    BX	LR
0x1630	0x04282000  	__gsmgnss2_driver_hal_gpio_csSet+0
; end of __gsmgnss2_driver_DTE_setState
easymx_v7_STM32F107VC__setAN_1:
;__em_f107vc_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value) 	{ GPIOA_ODR.B4  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1008	0x4901    LDR	R1, [PC, #4]
0x100A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x100C	0x4770    BX	LR
0x100E	0xBF00    NOP
0x1010	0x01904221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_1
easymx_v7_STM32F107VC__setRST_1:
;__em_f107vc_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value) 	{ GPIOC_ODR.B2  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F64	0x4901    LDR	R1, [PC, #4]
0x0F66	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x0F68	0x4770    BX	LR
0x0F6A	0xBF00    NOP
0x0F6C	0x01884222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_1
easymx_v7_STM32F107VC__setCS_1:
;__em_f107vc_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value) 	{ GPIOD_ODR.B13 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F1C	0x4901    LDR	R1, [PC, #4]
0x0F1E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x0F20	0x4770    BX	LR
0x0F22	0xBF00    NOP
0x0F24	0x81B44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_1
easymx_v7_STM32F107VC__setSCK_1:
;__em_f107vc_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value) 	{ GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F28	0x4901    LDR	R1, [PC, #4]
0x0F2A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x0F2C	0x4770    BX	LR
0x0F2E	0xBF00    NOP
0x0F30	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_1
easymx_v7_STM32F107VC__setMISO_1:
;__em_f107vc_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value) 	{ GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F04	0x4901    LDR	R1, [PC, #4]
0x0F06	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x0F08	0x4770    BX	LR
0x0F0A	0xBF00    NOP
0x0F0C	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_1
easymx_v7_STM32F107VC__setMOSI_1:
;__em_f107vc_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value) 	{ GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F10	0x4901    LDR	R1, [PC, #4]
0x0F12	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x0F14	0x4770    BX	LR
0x0F16	0xBF00    NOP
0x0F18	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_1
easymx_v7_STM32F107VC__setPWM_1:
;__em_f107vc_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value) 	{ GPIOA_ODR.B0  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F4C	0x4901    LDR	R1, [PC, #4]
0x0F4E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x0F50	0x4770    BX	LR
0x0F52	0xBF00    NOP
0x0F54	0x01804221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_1
easymx_v7_STM32F107VC__setINT_1:
;__em_f107vc_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value) 	{ GPIOD_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F58	0x4901    LDR	R1, [PC, #4]
0x0F5A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x0F5C	0x4770    BX	LR
0x0F5E	0xBF00    NOP
0x0F60	0x81A84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_1
easymx_v7_STM32F107VC__setRX_1:
;__em_f107vc_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value) 	{ GPIOD_ODR.B9  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F34	0x4901    LDR	R1, [PC, #4]
0x0F36	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x0F38	0x4770    BX	LR
0x0F3A	0xBF00    NOP
0x0F3C	0x81A44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_1
easymx_v7_STM32F107VC__setTX_1:
;__em_f107vc_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value) 	{ GPIOD_ODR.B8  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F40	0x4901    LDR	R1, [PC, #4]
0x0F42	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x0F44	0x4770    BX	LR
0x0F46	0xBF00    NOP
0x0F48	0x81A04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_1
easymx_v7_STM32F107VC__setSCL_1:
;__em_f107vc_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value) 	{ GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1108	0x4901    LDR	R1, [PC, #4]
0x110A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x110C	0x4770    BX	LR
0x110E	0xBF00    NOP
0x1110	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_1
easymx_v7_STM32F107VC__setSDA_1:
;__em_f107vc_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value) 	{ GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1114	0x4901    LDR	R1, [PC, #4]
0x1116	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x1118	0x4770    BX	LR
0x111A	0xBF00    NOP
0x111C	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_1
easymx_v7_STM32F107VC__setAN_2:
;__em_f107vc_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)   { GPIOA_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x10FC	0x4901    LDR	R1, [PC, #4]
0x10FE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x1100	0x4770    BX	LR
0x1102	0xBF00    NOP
0x1104	0x01944221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_2
easymx_v7_STM32F107VC__setRST_2:
;__em_f107vc_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)   { GPIOC_ODR.B3  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x10E4	0x4901    LDR	R1, [PC, #4]
0x10E6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x10E8	0x4770    BX	LR
0x10EA	0xBF00    NOP
0x10EC	0x018C4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_2
easymx_v7_STM32F107VC__setCS_2:
;__em_f107vc_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)   { GPIOD_ODR.B14 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x10F0	0x4901    LDR	R1, [PC, #4]
0x10F2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x10F4	0x4770    BX	LR
0x10F6	0xBF00    NOP
0x10F8	0x81B84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_2
easymx_v7_STM32F107VC__setSCK_2:
;__em_f107vc_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)   { GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1120	0x4901    LDR	R1, [PC, #4]
0x1122	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x1124	0x4770    BX	LR
0x1126	0xBF00    NOP
0x1128	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_2
easymx_v7_STM32F107VC__setMISO_2:
;__em_f107vc_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)   { GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x10B4	0x4901    LDR	R1, [PC, #4]
0x10B6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x10B8	0x4770    BX	LR
0x10BA	0xBF00    NOP
0x10BC	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_2
easymx_v7_STM32F107VC__setMOSI_2:
;__em_f107vc_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)   { GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x10D8	0x4901    LDR	R1, [PC, #4]
0x10DA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x10DC	0x4770    BX	LR
0x10DE	0xBF00    NOP
0x10E0	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_2
easymx_v7_STM32F107VC__setPWM_2:
;__em_f107vc_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x10CC	0x4901    LDR	R1, [PC, #4]
0x10CE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x10D0	0x4770    BX	LR
0x10D2	0xBF00    NOP
0x10D4	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_2
easymx_v7_STM32F107VC__setINT_2:
;__em_f107vc_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)   { GPIOD_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x10C0	0x4901    LDR	R1, [PC, #4]
0x10C2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x10C4	0x4770    BX	LR
0x10C6	0xBF00    NOP
0x10C8	0x81AC4222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_2
easymx_v7_STM32F107VC__setRX_2:
;__em_f107vc_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)   { GPIOD_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0D48	0x4901    LDR	R1, [PC, #4]
0x0D4A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x0D4C	0x4770    BX	LR
0x0D4E	0xBF00    NOP
0x0D50	0x81984222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_2
easymx_v7_STM32F107VC__setTX_2:
;__em_f107vc_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)   { GPIOD_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0D54	0x4901    LDR	R1, [PC, #4]
0x0D56	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x0D58	0x4770    BX	LR
0x0D5A	0xBF00    NOP
0x0D5C	0x81944222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_2
easymx_v7_STM32F107VC__setSCL_2:
;__em_f107vc_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)   { GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0D3C	0x4901    LDR	R1, [PC, #4]
0x0D3E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x0D40	0x4770    BX	LR
0x0D42	0xBF00    NOP
0x0D44	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_2
easymx_v7_STM32F107VC__setSDA_2:
;__em_f107vc_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)   { GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0D14	0x4901    LDR	R1, [PC, #4]
0x0D16	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x0D18	0x4770    BX	LR
0x0D1A	0xBF00    NOP
0x0D1C	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_2
_gsmgnss2_hfcEnable:
;__gsmgnss2_driver.c, 590 :: 		void gsmgnss2_hfcEnable( bool hfcState )
; hfcState start address is: 0 (R0)
; hfcState end address is: 0 (R0)
; hfcState start address is: 0 (R0)
;__gsmgnss2_driver.c, 592 :: 		f_hfc_active = hfcState;
0x1B3C	0x4901    LDR	R1, [PC, #4]
0x1B3E	0x7008    STRB	R0, [R1, #0]
; hfcState end address is: 0 (R0)
;__gsmgnss2_driver.c, 593 :: 		}
L_end_gsmgnss2_hfcEnable:
0x1B40	0x4770    BX	LR
0x1B42	0xBF00    NOP
0x1B44	0x020E2000  	__gsmgnss2_driver_f_hfc_active+0
; end of _gsmgnss2_hfcEnable
_gsmgnss2_modulePower:
;__gsmgnss2_driver.c, 180 :: 		void gsmgnss2_modulePower( bool powerState )
; powerState start address is: 0 (R0)
0x1AA8	0xB081    SUB	SP, SP, #4
0x1AAA	0xF8CDE000  STR	LR, [SP, #0]
; powerState end address is: 0 (R0)
; powerState start address is: 0 (R0)
;__gsmgnss2_driver.c, 182 :: 		if (0 != powerState)
0x1AAE	0x2800    CMP	R0, #0
0x1AB0	0xD03A    BEQ	L_gsmgnss2_modulePower4
; powerState end address is: 0 (R0)
;__gsmgnss2_driver.c, 185 :: 		hal_gpio_rstSet( 1 );
0x1AB2	0x2001    MOVS	R0, #1
0x1AB4	0x4C20    LDR	R4, [PC, #128]
0x1AB6	0x6824    LDR	R4, [R4, #0]
0x1AB8	0x47A0    BLX	R4
;__gsmgnss2_driver.c, 186 :: 		Delay_1sec();
0x1ABA	0xF7FFFEC1  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 187 :: 		hal_gpio_rstSet( 0 );
0x1ABE	0x2000    MOVS	R0, #0
0x1AC0	0x4C1D    LDR	R4, [PC, #116]
0x1AC2	0x6824    LDR	R4, [R4, #0]
0x1AC4	0x47A0    BLX	R4
;__gsmgnss2_driver.c, 188 :: 		Delay_1sec();
0x1AC6	0xF7FFFEBB  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 189 :: 		Delay_1sec();
0x1ACA	0xF7FFFEB9  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 190 :: 		hal_gpio_rstSet( 1 );
0x1ACE	0x2001    MOVS	R0, #1
0x1AD0	0x4C19    LDR	R4, [PC, #100]
0x1AD2	0x6824    LDR	R4, [R4, #0]
0x1AD4	0x47A0    BLX	R4
;__gsmgnss2_driver.c, 191 :: 		Delay_1sec();
0x1AD6	0xF7FFFEB3  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 192 :: 		Delay_1sec();
0x1ADA	0xF7FFFEB1  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 193 :: 		Delay_1sec();
0x1ADE	0xF7FFFEAF  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 194 :: 		Delay_1sec();
0x1AE2	0xF7FFFEAD  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 195 :: 		Delay_1sec();
0x1AE6	0xF7FFFEAB  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 196 :: 		Delay_1sec();
0x1AEA	0xF7FFFEA9  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 197 :: 		Delay_1sec();
0x1AEE	0xF7FFFEA7  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 198 :: 		Delay_1sec();
0x1AF2	0xF7FFFEA5  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 199 :: 		Delay_1sec();
0x1AF6	0xF7FFFEA3  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 200 :: 		Delay_1sec();
0x1AFA	0xF7FFFEA1  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 201 :: 		Delay_1sec();
0x1AFE	0xF7FFFE9F  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 202 :: 		Delay_1sec();
0x1B02	0xF7FFFE9D  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 203 :: 		Delay_1sec();
0x1B06	0xF7FFFE9B  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 204 :: 		Delay_1sec();
0x1B0A	0xF7FFFE99  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 205 :: 		Delay_1sec();
0x1B0E	0xF7FFFE97  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 206 :: 		Delay_1sec();
0x1B12	0xF7FFFE95  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 207 :: 		Delay_1sec();
0x1B16	0xF7FFFE93  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 208 :: 		Delay_1sec();
0x1B1A	0xF7FFFE91  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 209 :: 		Delay_1sec();
0x1B1E	0xF7FFFE8F  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 210 :: 		Delay_1sec();
0x1B22	0xF7FFFE8D  BL	_Delay_1sec+0
;__gsmgnss2_driver.c, 211 :: 		}
0x1B26	0xE003    B	L_gsmgnss2_modulePower5
L_gsmgnss2_modulePower4:
;__gsmgnss2_driver.c, 214 :: 		hal_gpio_rstSet( 0 );
0x1B28	0x2000    MOVS	R0, #0
0x1B2A	0x4C03    LDR	R4, [PC, #12]
0x1B2C	0x6824    LDR	R4, [R4, #0]
0x1B2E	0x47A0    BLX	R4
;__gsmgnss2_driver.c, 215 :: 		}
L_gsmgnss2_modulePower5:
;__gsmgnss2_driver.c, 216 :: 		}
L_end_gsmgnss2_modulePower:
0x1B30	0xF8DDE000  LDR	LR, [SP, #0]
0x1B34	0xB001    ADD	SP, SP, #4
0x1B36	0x4770    BX	LR
0x1B38	0x042C2000  	__gsmgnss2_driver_hal_gpio_rstSet+0
; end of _gsmgnss2_modulePower
_Delay_1sec:
;__Lib_Delays.c, 62 :: 		void Delay_1sec() {
;__Lib_Delays.c, 63 :: 		Delay_ms(1000);
0x1840	0xF64127FF  MOVW	R7, #6911
0x1844	0xF2C007B7  MOVT	R7, #183
L_Delay_1sec24:
0x1848	0x1E7F    SUBS	R7, R7, #1
0x184A	0xD1FD    BNE	L_Delay_1sec24
0x184C	0xBF00    NOP
0x184E	0xBF00    NOP
0x1850	0xBF00    NOP
0x1852	0xBF00    NOP
0x1854	0xBF00    NOP
;__Lib_Delays.c, 64 :: 		}
L_end_Delay_1sec:
0x1856	0x4770    BX	LR
; end of _Delay_1sec
_gsmgnss2_cmdSingle:
;__gsmgnss2_driver.c, 677 :: 		void gsmgnss2_cmdSingle( uint8_t *pCmd )
0x19B4	0xB082    SUB	SP, SP, #8
0x19B6	0xF8CDE000  STR	LR, [SP, #0]
0x19BA	0x9001    STR	R0, [SP, #4]
;__gsmgnss2_driver.c, 679 :: 		_strcpy( txBuff, pCmd );
0x19BC	0x9901    LDR	R1, [SP, #4]
0x19BE	0x481A    LDR	R0, [PC, #104]
0x19C0	0xF7FFFF54  BL	__gsmgnss2_driver__strcpy+0
;__gsmgnss2_driver.c, 681 :: 		CORE_SEQUENCE();
L_gsmgnss2_cmdSingle63:
0x19C4	0x4919    LDR	R1, [PC, #100]
0x19C6	0x7809    LDRB	R1, [R1, #0]
0x19C8	0xB111    CBZ	R1, L_gsmgnss2_cmdSingle64
0x19CA	0xF7FFFE6F  BL	_gsmgnss2_process+0
0x19CE	0xE7F9    B	L_gsmgnss2_cmdSingle63
L_gsmgnss2_cmdSingle64:
;__gsmgnss2_driver.c, 682 :: 		createEvent(pCmd, &currentEv);
0x19D0	0x4917    LDR	R1, [PC, #92]
0x19D2	0x9801    LDR	R0, [SP, #4]
0x19D4	0xF7FFFA2C  BL	__gsmgnss2_driver_createEvent+0
;__gsmgnss2_driver.c, 684 :: 		transmitCommand(pCmd, TERMINATION_CHAR);
0x19D8	0x210D    MOVS	R1, #13
0x19DA	0x9801    LDR	R0, [SP, #4]
0x19DC	0xF7FFFFB6  BL	__gsmgnss2_driver_transmitCommand+0
;__gsmgnss2_driver.c, 685 :: 		EXEC_CALLBACK();
0x19E0	0x2100    MOVS	R1, #0
0x19E2	0x2901    CMP	R1, __GSMGNSS2_CALLBACK_ENABLE
0x19E4	0xD007    BEQ	L_gsmgnss2_cmdSingle65
0x19E6	0x2204    MOVS	R2, #4
0x19E8	0x4912    LDR	R1, [PC, #72]
0x19EA	0x700A    STRB	R2, [R1, #0]
0x19EC	0x4912    LDR	R1, [PC, #72]
0x19EE	0x480E    LDR	R0, [PC, #56]
0x19F0	0x4C0F    LDR	R4, [PC, #60]
0x19F2	0x6824    LDR	R4, [R4, #0]
0x19F4	0x47A0    BLX	R4
L_gsmgnss2_cmdSingle65:
;__gsmgnss2_driver.c, 687 :: 		CORE_BLOCK();
0x19F6	0x2200    MOVS	R2, #0
0x19F8	0x4910    LDR	R1, [PC, #64]
0x19FA	0x700A    STRB	R2, [R1, #0]
0x19FC	0x2200    MOVS	R2, #0
0x19FE	0x4910    LDR	R1, [PC, #64]
0x1A00	0x700A    STRB	R2, [R1, #0]
0x1A02	0x2201    MOVS	R2, #1
0x1A04	0x4909    LDR	R1, [PC, #36]
0x1A06	0x700A    STRB	R2, [R1, #0]
;__gsmgnss2_driver.c, 688 :: 		WATCHDOG_START();
0x1A08	0x2200    MOVS	R2, #0
0x1A0A	0x490E    LDR	R1, [PC, #56]
0x1A0C	0x600A    STR	R2, [R1, #0]
0x1A0E	0x2201    MOVS	R2, #1
0x1A10	0x490D    LDR	R1, [PC, #52]
0x1A12	0x700A    STRB	R2, [R1, #0]
;__gsmgnss2_driver.c, 689 :: 		CORE_SEQUENCE();
L_gsmgnss2_cmdSingle66:
0x1A14	0x4905    LDR	R1, [PC, #20]
0x1A16	0x7809    LDRB	R1, [R1, #0]
0x1A18	0xB111    CBZ	R1, L_gsmgnss2_cmdSingle67
0x1A1A	0xF7FFFE47  BL	_gsmgnss2_process+0
0x1A1E	0xE7F9    B	L_gsmgnss2_cmdSingle66
L_gsmgnss2_cmdSingle67:
;__gsmgnss2_driver.c, 690 :: 		}
L_end_gsmgnss2_cmdSingle:
0x1A20	0xF8DDE000  LDR	LR, [SP, #0]
0x1A24	0xB002    ADD	SP, SP, #8
0x1A26	0x4770    BX	LR
0x1A28	0x04402000  	__gsmgnss2_driver_txBuff+0
0x1A2C	0x01042000  	__gsmgnss2_driver_f_sequence_active+0
0x1A30	0x04342000  	__gsmgnss2_driver_currentEv+0
0x1A34	0x043E2000  	__gsmgnss2_driver_currentEv+10
0x1A38	0x043C2000  	__gsmgnss2_driver_currentEv+8
0x1A3C	0x00B32000  	__gsmgnss2_driver_f_wdog_timeout+0
0x1A40	0x00FB2000  	__gsmgnss2_driver_f_response_ready+0
0x1A44	0x04302000  	__gsmgnss2_driver_c_watchdog_timer+0
0x1A48	0x01072000  	__gsmgnss2_driver_f_watchdog_active+0
; end of _gsmgnss2_cmdSingle
_gsmgnss_default_handler:
;Click_GSM_GNSS_2_STM.c, 58 :: 		void gsmgnss_default_handler( uint8_t *rsp, uint8_t *evArgs )
; rsp start address is: 0 (R0)
0x1858	0xB081    SUB	SP, SP, #4
0x185A	0xF8CDE000  STR	LR, [SP, #0]
; rsp end address is: 0 (R0)
; rsp start address is: 0 (R0)
;Click_GSM_GNSS_2_STM.c, 63 :: 		mikrobus_logWrite( tmp, _LOG_TEXT );
0x185E	0x2101    MOVS	R1, #1
; rsp end address is: 0 (R0)
0x1860	0xF000F98A  BL	_mikrobus_logWrite+0
;Click_GSM_GNSS_2_STM.c, 64 :: 		}
L_end_gsmgnss_default_handler:
0x1864	0xF8DDE000  LDR	LR, [SP, #0]
0x1868	0xB001    ADD	SP, SP, #4
0x186A	0x4770    BX	LR
; end of _gsmgnss_default_handler
__gsmgnss2_driver__strcpy:
;__gsmgnss2_driver.c, 339 :: 		static void _strcpy(uint8_t *dest, uint8_t *src)
; src start address is: 4 (R1)
; dest start address is: 0 (R0)
0x186C	0x460A    MOV	R2, R1
0x186E	0x4601    MOV	R1, R0
; src end address is: 4 (R1)
; dest end address is: 0 (R0)
; dest start address is: 4 (R1)
; src start address is: 8 (R2)
;__gsmgnss2_driver.c, 343 :: 		uint16_t i = 0;
; i start address is: 16 (R4)
0x1870	0xF2400400  MOVW	R4, #0
;__gsmgnss2_driver.c, 344 :: 		uint16_t j = 0;
; j start address is: 0 (R0)
0x1874	0xF2400000  MOVW	R0, #0
; src end address is: 8 (R2)
; j end address is: 0 (R0)
; i end address is: 16 (R4)
; dest end address is: 4 (R1)
0x1878	0xB286    UXTH	R6, R0
0x187A	0x4610    MOV	R0, R2
;__gsmgnss2_driver.c, 346 :: 		while ((dest[i++] = src[j++]) != '\0')
L___gsmgnss2_driver__strcpy15:
; j start address is: 24 (R6)
; j start address is: 24 (R6)
; i start address is: 20 (R5)
; i start address is: 16 (R4)
; src start address is: 0 (R0)
; dest start address is: 4 (R1)
0x187C	0xB2A3    UXTH	R3, R4
0x187E	0x1C62    ADDS	R2, R4, #1
; i end address is: 16 (R4)
; i start address is: 20 (R5)
0x1880	0xB295    UXTH	R5, R2
; i end address is: 20 (R5)
0x1882	0x18CC    ADDS	R4, R1, R3
0x1884	0xB2B3    UXTH	R3, R6
0x1886	0x1C72    ADDS	R2, R6, #1
0x1888	0xB296    UXTH	R6, R2
; j end address is: 24 (R6)
0x188A	0x18C2    ADDS	R2, R0, R3
0x188C	0x7812    LDRB	R2, [R2, #0]
0x188E	0x7022    STRB	R2, [R4, #0]
0x1890	0x7822    LDRB	R2, [R4, #0]
0x1892	0xB10A    CBZ	R2, L___gsmgnss2_driver__strcpy16
; i end address is: 20 (R5)
; j end address is: 24 (R6)
;__gsmgnss2_driver.c, 347 :: 		;
; j start address is: 24 (R6)
; i start address is: 20 (R5)
; src end address is: 0 (R0)
; dest end address is: 4 (R1)
; i end address is: 20 (R5)
; j end address is: 24 (R6)
0x1894	0xB2AC    UXTH	R4, R5
0x1896	0xE7F1    B	L___gsmgnss2_driver__strcpy15
L___gsmgnss2_driver__strcpy16:
;__gsmgnss2_driver.c, 348 :: 		}
L_end__strcpy:
0x1898	0x4770    BX	LR
; end of __gsmgnss2_driver__strcpy
_gsmgnss2_process:
;__gsmgnss2_driver.c, 743 :: 		void gsmgnss2_process()
0x16AC	0xB081    SUB	SP, SP, #4
0x16AE	0xF8CDE000  STR	LR, [SP, #0]
;__gsmgnss2_driver.c, 746 :: 		if (0 != _GSMGNSS2_POLL_ENABLE)
0x16B2	0x2000    MOVS	R0, #0
0x16B4	0x2801    CMP	R0, __GSMGNSS2_POLL_ENABLE
0x16B6	0xD006    BEQ	L_gsmgnss2_process84
;__gsmgnss2_driver.c, 748 :: 		if (0 != hal_uartReady())
0x16B8	0xF7FFFB32  BL	__gsmgnss2_driver_hal_uartReady+0
0x16BC	0xB118    CBZ	R0, L_gsmgnss2_process85
;__gsmgnss2_driver.c, 750 :: 		char tmp = hal_uartRead();
0x16BE	0xF7FFFB5F  BL	__gsmgnss2_driver_hal_uartRead+0
;__gsmgnss2_driver.c, 751 :: 		gsmgnss2_putc( tmp );
0x16C2	0xF7FFFB6B  BL	_gsmgnss2_putc+0
;__gsmgnss2_driver.c, 752 :: 		}
L_gsmgnss2_process85:
;__gsmgnss2_driver.c, 753 :: 		}
L_gsmgnss2_process84:
;__gsmgnss2_driver.c, 756 :: 		if (f_buffer_warning)
0x16C6	0x4852    LDR	R0, [PC, #328]
0x16C8	0x7800    LDRB	R0, [R0, #0]
0x16CA	0x2800    CMP	R0, #0
0x16CC	0xF000803A  BEQ	L_gsmgnss2_process86
;__gsmgnss2_driver.c, 758 :: 		CORE_SET_BUSY();
0x16D0	0x4850    LDR	R0, [PC, #320]
0x16D2	0x7800    LDRB	R0, [R0, #0]
0x16D4	0xB110    CBZ	R0, L_gsmgnss2_process87
0x16D6	0x2000    MOVS	R0, #0
0x16D8	0xF7FFFF98  BL	__gsmgnss2_driver_DTE_setState+0
L_gsmgnss2_process87:
;__gsmgnss2_driver.c, 759 :: 		TIMER_STOP();
0x16DC	0x2100    MOVS	R1, #0
0x16DE	0x484E    LDR	R0, [PC, #312]
0x16E0	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 760 :: 		WATCHDOG_STOP();
0x16E2	0x2100    MOVS	R1, #0
0x16E4	0x484D    LDR	R0, [PC, #308]
0x16E6	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 763 :: 		if (_GSMGNSS2_EVENT_BUFFER_OUT == currentEv.evArg[_GSMGNSS2_EVARG_EVENT_T])
0x16E8	0x484D    LDR	R0, [PC, #308]
0x16EA	0x7800    LDRB	R0, [R0, #0]
0x16EC	0x2802    CMP	R0, #2
0x16EE	0xD105    BNE	L_gsmgnss2_process88
;__gsmgnss2_driver.c, 766 :: 		currentEv.fpHdl(rxBuff.storage, currentEv.evArg);
0x16F0	0x494C    LDR	R1, [PC, #304]
0x16F2	0x484D    LDR	R0, [PC, #308]
0x16F4	0x4C4D    LDR	R4, [PC, #308]
0x16F6	0x6824    LDR	R4, [R4, #0]
0x16F8	0x47A0    BLX	R4
;__gsmgnss2_driver.c, 767 :: 		}
0x16FA	0xE00B    B	L_gsmgnss2_process89
L_gsmgnss2_process88:
;__gsmgnss2_driver.c, 771 :: 		createEvent(rxBuff.storage, &currentEv);
0x16FC	0x494B    LDR	R1, [PC, #300]
0x16FE	0x484A    LDR	R0, [PC, #296]
0x1700	0xF7FFFB96  BL	__gsmgnss2_driver_createEvent+0
;__gsmgnss2_driver.c, 772 :: 		EXEC_EVENT(_GSMGNSS2_EVENT_BUFFER_OUT);
0x1704	0x2102    MOVS	R1, #2
0x1706	0x4846    LDR	R0, [PC, #280]
0x1708	0x7001    STRB	R1, [R0, #0]
0x170A	0x4946    LDR	R1, [PC, #280]
0x170C	0x4846    LDR	R0, [PC, #280]
0x170E	0x4C47    LDR	R4, [PC, #284]
0x1710	0x6824    LDR	R4, [R4, #0]
0x1712	0x47A0    BLX	R4
;__gsmgnss2_driver.c, 773 :: 		}
L_gsmgnss2_process89:
;__gsmgnss2_driver.c, 774 :: 		f_buffer_warning = false;
0x1714	0x2100    MOVS	R1, #0
0x1716	0x483E    LDR	R0, [PC, #248]
0x1718	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 776 :: 		CORE_CLEAN_RX();
0x171A	0x2100    MOVS	R1, #0
0x171C	0x4844    LDR	R0, [PC, #272]
0x171E	0x8001    STRH	R1, [R0, #0]
0x1720	0x2100    MOVS	R1, #0
0x1722	0x4841    LDR	R0, [PC, #260]
0x1724	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 777 :: 		CORE_UNBLOCK();
0x1726	0x2100    MOVS	R1, #0
0x1728	0x4842    LDR	R0, [PC, #264]
0x172A	0x7001    STRB	R1, [R0, #0]
0x172C	0x2100    MOVS	R1, #0
0x172E	0x4842    LDR	R0, [PC, #264]
0x1730	0x7001    STRB	R1, [R0, #0]
0x1732	0x2100    MOVS	R1, #0
0x1734	0x4841    LDR	R0, [PC, #260]
0x1736	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 778 :: 		CORE_SET_FREE();
0x1738	0x4836    LDR	R0, [PC, #216]
0x173A	0x7800    LDRB	R0, [R0, #0]
0x173C	0xB110    CBZ	R0, L_gsmgnss2_process90
0x173E	0x2001    MOVS	R0, #1
0x1740	0xF7FFFF64  BL	__gsmgnss2_driver_DTE_setState+0
L_gsmgnss2_process90:
;__gsmgnss2_driver.c, 779 :: 		}
L_gsmgnss2_process86:
;__gsmgnss2_driver.c, 782 :: 		if (f_response_ready)
0x1744	0x483C    LDR	R0, [PC, #240]
0x1746	0x7800    LDRB	R0, [R0, #0]
0x1748	0x2800    CMP	R0, #0
0x174A	0xD02C    BEQ	L_gsmgnss2_process91
;__gsmgnss2_driver.c, 784 :: 		CORE_SET_BUSY();
0x174C	0x4831    LDR	R0, [PC, #196]
0x174E	0x7800    LDRB	R0, [R0, #0]
0x1750	0xB110    CBZ	R0, L_gsmgnss2_process92
0x1752	0x2000    MOVS	R0, #0
0x1754	0xF7FFFF5A  BL	__gsmgnss2_driver_DTE_setState+0
L_gsmgnss2_process92:
;__gsmgnss2_driver.c, 785 :: 		TIMER_STOP();
0x1758	0x2100    MOVS	R1, #0
0x175A	0x482F    LDR	R0, [PC, #188]
0x175C	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 786 :: 		WATCHDOG_STOP();
0x175E	0x2100    MOVS	R1, #0
0x1760	0x482E    LDR	R0, [PC, #184]
0x1762	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 788 :: 		createEvent(rxBuff.storage, &currentEv);
0x1764	0x4931    LDR	R1, [PC, #196]
0x1766	0x4830    LDR	R0, [PC, #192]
0x1768	0xF7FFFB62  BL	__gsmgnss2_driver_createEvent+0
;__gsmgnss2_driver.c, 789 :: 		EXEC_EVENT(_GSMGNSS2_EVENT_RESPONSE);
0x176C	0x2100    MOVS	R1, #0
0x176E	0x482C    LDR	R0, [PC, #176]
0x1770	0x7001    STRB	R1, [R0, #0]
0x1772	0x492C    LDR	R1, [PC, #176]
0x1774	0x482C    LDR	R0, [PC, #176]
0x1776	0x4C2D    LDR	R4, [PC, #180]
0x1778	0x6824    LDR	R4, [R4, #0]
0x177A	0x47A0    BLX	R4
;__gsmgnss2_driver.c, 791 :: 		CORE_CLEAN_RX();
0x177C	0x2100    MOVS	R1, #0
0x177E	0x482C    LDR	R0, [PC, #176]
0x1780	0x8001    STRH	R1, [R0, #0]
0x1782	0x2100    MOVS	R1, #0
0x1784	0x4828    LDR	R0, [PC, #160]
0x1786	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 792 :: 		CORE_UNBLOCK();
0x1788	0x2100    MOVS	R1, #0
0x178A	0x482A    LDR	R0, [PC, #168]
0x178C	0x7001    STRB	R1, [R0, #0]
0x178E	0x2100    MOVS	R1, #0
0x1790	0x4829    LDR	R0, [PC, #164]
0x1792	0x7001    STRB	R1, [R0, #0]
0x1794	0x2100    MOVS	R1, #0
0x1796	0x4829    LDR	R0, [PC, #164]
0x1798	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 793 :: 		CORE_SET_FREE();
0x179A	0x481E    LDR	R0, [PC, #120]
0x179C	0x7800    LDRB	R0, [R0, #0]
0x179E	0xB110    CBZ	R0, L_gsmgnss2_process93
0x17A0	0x2001    MOVS	R0, #1
0x17A2	0xF7FFFF33  BL	__gsmgnss2_driver_DTE_setState+0
L_gsmgnss2_process93:
;__gsmgnss2_driver.c, 794 :: 		}
L_gsmgnss2_process91:
;__gsmgnss2_driver.c, 797 :: 		if (f_wdog_timeout)
0x17A6	0x4823    LDR	R0, [PC, #140]
0x17A8	0x7800    LDRB	R0, [R0, #0]
0x17AA	0x2800    CMP	R0, #0
0x17AC	0xD02C    BEQ	L_gsmgnss2_process94
;__gsmgnss2_driver.c, 799 :: 		CORE_SET_BUSY();
0x17AE	0x4819    LDR	R0, [PC, #100]
0x17B0	0x7800    LDRB	R0, [R0, #0]
0x17B2	0xB110    CBZ	R0, L_gsmgnss2_process95
0x17B4	0x2000    MOVS	R0, #0
0x17B6	0xF7FFFF29  BL	__gsmgnss2_driver_DTE_setState+0
L_gsmgnss2_process95:
;__gsmgnss2_driver.c, 800 :: 		TIMER_STOP();
0x17BA	0x2100    MOVS	R1, #0
0x17BC	0x4816    LDR	R0, [PC, #88]
0x17BE	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 801 :: 		WATCHDOG_STOP();
0x17C0	0x2100    MOVS	R1, #0
0x17C2	0x4816    LDR	R0, [PC, #88]
0x17C4	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 803 :: 		createEvent(rxBuff.storage, &currentEv);
0x17C6	0x4919    LDR	R1, [PC, #100]
0x17C8	0x4817    LDR	R0, [PC, #92]
0x17CA	0xF7FFFB31  BL	__gsmgnss2_driver_createEvent+0
;__gsmgnss2_driver.c, 804 :: 		EXEC_EVENT(_GSMGNSS2_EVENT_TIMEOUT);
0x17CE	0x2101    MOVS	R1, #1
0x17D0	0x4813    LDR	R0, [PC, #76]
0x17D2	0x7001    STRB	R1, [R0, #0]
0x17D4	0x4913    LDR	R1, [PC, #76]
0x17D6	0x4814    LDR	R0, [PC, #80]
0x17D8	0x4C14    LDR	R4, [PC, #80]
0x17DA	0x6824    LDR	R4, [R4, #0]
0x17DC	0x47A0    BLX	R4
;__gsmgnss2_driver.c, 806 :: 		CORE_CLEAN_RX();
0x17DE	0x2100    MOVS	R1, #0
0x17E0	0x4813    LDR	R0, [PC, #76]
0x17E2	0x8001    STRH	R1, [R0, #0]
0x17E4	0x2100    MOVS	R1, #0
0x17E6	0x4810    LDR	R0, [PC, #64]
0x17E8	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 807 :: 		CORE_UNBLOCK();
0x17EA	0x2100    MOVS	R1, #0
0x17EC	0x4811    LDR	R0, [PC, #68]
0x17EE	0x7001    STRB	R1, [R0, #0]
0x17F0	0x2100    MOVS	R1, #0
0x17F2	0x4811    LDR	R0, [PC, #68]
0x17F4	0x7001    STRB	R1, [R0, #0]
0x17F6	0x2100    MOVS	R1, #0
0x17F8	0x4810    LDR	R0, [PC, #64]
0x17FA	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 808 :: 		CORE_SET_FREE();
0x17FC	0x4805    LDR	R0, [PC, #20]
0x17FE	0x7800    LDRB	R0, [R0, #0]
0x1800	0xB110    CBZ	R0, L_gsmgnss2_process96
0x1802	0x2001    MOVS	R0, #1
0x1804	0xF7FFFF02  BL	__gsmgnss2_driver_DTE_setState+0
L_gsmgnss2_process96:
;__gsmgnss2_driver.c, 809 :: 		}
L_gsmgnss2_process94:
;__gsmgnss2_driver.c, 810 :: 		}
L_end_gsmgnss2_process:
0x1808	0xF8DDE000  LDR	LR, [SP, #0]
0x180C	0xB001    ADD	SP, SP, #4
0x180E	0x4770    BX	LR
0x1810	0x01062000  	__gsmgnss2_driver_f_buffer_warning+0
0x1814	0x020E2000  	__gsmgnss2_driver_f_hfc_active+0
0x1818	0x01052000  	__gsmgnss2_driver_f_timer_active+0
0x181C	0x01072000  	__gsmgnss2_driver_f_watchdog_active+0
0x1820	0x043E2000  	__gsmgnss2_driver_currentEv+10
0x1824	0x043C2000  	__gsmgnss2_driver_currentEv+8
0x1828	0x010E2000  	__gsmgnss2_driver_rxBuff+2
0x182C	0x04342000  	__gsmgnss2_driver_currentEv+0
0x1830	0x010C2000  	__gsmgnss2_driver_rxBuff+0
0x1834	0x00B32000  	__gsmgnss2_driver_f_wdog_timeout+0
0x1838	0x00FB2000  	__gsmgnss2_driver_f_response_ready+0
0x183C	0x01042000  	__gsmgnss2_driver_f_sequence_active+0
; end of _gsmgnss2_process
__gsmgnss2_driver_hal_uartReady:
;__hal_stm32.c, 152 :: 		static uint8_t hal_uartReady()
0x0D20	0xB081    SUB	SP, SP, #4
0x0D22	0xF8CDE000  STR	LR, [SP, #0]
;__hal_stm32.c, 154 :: 		return ( uint8_t )fp_uartReady();
0x0D26	0x4C04    LDR	R4, [PC, #16]
0x0D28	0x6824    LDR	R4, [R4, #0]
0x0D2A	0x47A0    BLX	R4
0x0D2C	0xB2C0    UXTB	R0, R0
;__hal_stm32.c, 155 :: 		}
L_end_hal_uartReady:
0x0D2E	0xF8DDE000  LDR	LR, [SP, #0]
0x0D32	0xB001    ADD	SP, SP, #4
0x0D34	0x4770    BX	LR
0x0D36	0xBF00    NOP
0x0D38	0x04182000  	__gsmgnss2_driver_fp_uartReady+0
; end of __gsmgnss2_driver_hal_uartReady
_UART1_Read:
;__Lib_UART_123_45.c, 104 :: 		
0x06F4	0xB081    SUB	SP, SP, #4
0x06F6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 105 :: 		
0x06FA	0x4803    LDR	R0, [PC, #12]
0x06FC	0xF7FFFEDC  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 106 :: 		
L_end_UART1_Read:
0x0700	0xF8DDE000  LDR	LR, [SP, #0]
0x0704	0xB001    ADD	SP, SP, #4
0x0706	0x4770    BX	LR
0x0708	0x38004001  	USART1_SR+0
; end of _UART1_Read
__Lib_UART_123_45_UARTx_Read:
;__Lib_UART_123_45.c, 96 :: 		
; UART_Base start address is: 0 (R0)
0x04B8	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; UART_Base end address is: 0 (R0)
;__Lib_UART_123_45.c, 98 :: 		
L___Lib_UART_123_45_UARTx_Read4:
; UART_Base start address is: 0 (R0)
0x04BA	0x6802    LDR	R2, [R0, #0]
0x04BC	0xF3C21140  UBFX	R1, R2, #5, #1
0x04C0	0xB901    CBNZ	R1, L___Lib_UART_123_45_UARTx_Read5
0x04C2	0xE7FA    B	L___Lib_UART_123_45_UARTx_Read4
L___Lib_UART_123_45_UARTx_Read5:
;__Lib_UART_123_45.c, 101 :: 		
0x04C4	0x1D01    ADDS	R1, R0, #4
; UART_Base end address is: 0 (R0)
0x04C6	0x6809    LDR	R1, [R1, #0]
0x04C8	0xB288    UXTH	R0, R1
;__Lib_UART_123_45.c, 102 :: 		
L_end_UARTx_Read:
0x04CA	0xB001    ADD	SP, SP, #4
0x04CC	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Read
_UART1_Data_Ready:
;__Lib_UART_123_45.c, 131 :: 		
0x070C	0xB081    SUB	SP, SP, #4
0x070E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 132 :: 		
0x0712	0x4803    LDR	R0, [PC, #12]
0x0714	0xF7FFFEDC  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 133 :: 		
L_end_UART1_Data_Ready:
0x0718	0xF8DDE000  LDR	LR, [SP, #0]
0x071C	0xB001    ADD	SP, SP, #4
0x071E	0x4770    BX	LR
0x0720	0x38004001  	USART1_SR+0
; end of _UART1_Data_Ready
__Lib_UART_123_45_UARTx_Data_Ready:
;__Lib_UART_123_45.c, 126 :: 		
; UART_Base start address is: 0 (R0)
0x04D0	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 128 :: 		
0x04D2	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x04D4	0xF3C11040  UBFX	R0, R1, #5, #1
;__Lib_UART_123_45.c, 129 :: 		
L_end_UARTx_Data_Ready:
0x04D8	0xB001    ADD	SP, SP, #4
0x04DA	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Data_Ready
_UART1_Tx_Idle:
;__Lib_UART_123_45.c, 212 :: 		
0x06DC	0xB081    SUB	SP, SP, #4
0x06DE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 213 :: 		
0x06E2	0x4803    LDR	R0, [PC, #12]
0x06E4	0xF7FFFEFA  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 214 :: 		
L_end_UART1_Tx_Idle:
0x06E8	0xF8DDE000  LDR	LR, [SP, #0]
0x06EC	0xB001    ADD	SP, SP, #4
0x06EE	0x4770    BX	LR
0x06F0	0x38004001  	USART1_SR+0
; end of _UART1_Tx_Idle
__Lib_UART_123_45_UARTx_Tx_Idle:
;__Lib_UART_123_45.c, 208 :: 		
; UART_Base start address is: 0 (R0)
0x04DC	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 209 :: 		
0x04DE	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x04E0	0xF3C11080  UBFX	R0, R1, #6, #1
;__Lib_UART_123_45.c, 210 :: 		
L_end_UARTx_Tx_Idle:
0x04E4	0xB001    ADD	SP, SP, #4
0x04E6	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Tx_Idle
_UART2_Read:
;__Lib_UART_123_45.c, 108 :: 		
0x06AC	0xB081    SUB	SP, SP, #4
0x06AE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 109 :: 		
0x06B2	0x4803    LDR	R0, [PC, #12]
0x06B4	0xF7FFFF00  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 110 :: 		
L_end_UART2_Read:
0x06B8	0xF8DDE000  LDR	LR, [SP, #0]
0x06BC	0xB001    ADD	SP, SP, #4
0x06BE	0x4770    BX	LR
0x06C0	0x44004000  	USART2_SR+0
; end of _UART2_Read
_UART2_Data_Ready:
;__Lib_UART_123_45.c, 135 :: 		
0x06C4	0xB081    SUB	SP, SP, #4
0x06C6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 136 :: 		
0x06CA	0x4803    LDR	R0, [PC, #12]
0x06CC	0xF7FFFF00  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 137 :: 		
L_end_UART2_Data_Ready:
0x06D0	0xF8DDE000  LDR	LR, [SP, #0]
0x06D4	0xB001    ADD	SP, SP, #4
0x06D6	0x4770    BX	LR
0x06D8	0x44004000  	USART2_SR+0
; end of _UART2_Data_Ready
_UART2_Tx_Idle:
;__Lib_UART_123_45.c, 216 :: 		
0x0724	0xB081    SUB	SP, SP, #4
0x0726	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 217 :: 		
0x072A	0x4803    LDR	R0, [PC, #12]
0x072C	0xF7FFFED6  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 218 :: 		
L_end_UART2_Tx_Idle:
0x0730	0xF8DDE000  LDR	LR, [SP, #0]
0x0734	0xB001    ADD	SP, SP, #4
0x0736	0x4770    BX	LR
0x0738	0x44004000  	USART2_SR+0
; end of _UART2_Tx_Idle
_UART3_Read:
;__Lib_UART_123_45.c, 112 :: 		
0x0784	0xB081    SUB	SP, SP, #4
0x0786	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 113 :: 		
0x078A	0x4803    LDR	R0, [PC, #12]
0x078C	0xF7FFFE94  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 114 :: 		
L_end_UART3_Read:
0x0790	0xF8DDE000  LDR	LR, [SP, #0]
0x0794	0xB001    ADD	SP, SP, #4
0x0796	0x4770    BX	LR
0x0798	0x48004000  	USART3_SR+0
; end of _UART3_Read
_UART3_Data_Ready:
;__Lib_UART_123_45.c, 139 :: 		
0x079C	0xB081    SUB	SP, SP, #4
0x079E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 140 :: 		
0x07A2	0x4803    LDR	R0, [PC, #12]
0x07A4	0xF7FFFE94  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 141 :: 		
L_end_UART3_Data_Ready:
0x07A8	0xF8DDE000  LDR	LR, [SP, #0]
0x07AC	0xB001    ADD	SP, SP, #4
0x07AE	0x4770    BX	LR
0x07B0	0x48004000  	USART3_SR+0
; end of _UART3_Data_Ready
_UART3_Tx_Idle:
;__Lib_UART_123_45.c, 220 :: 		
0x076C	0xB081    SUB	SP, SP, #4
0x076E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 221 :: 		
0x0772	0x4803    LDR	R0, [PC, #12]
0x0774	0xF7FFFEB2  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 222 :: 		
L_end_UART3_Tx_Idle:
0x0778	0xF8DDE000  LDR	LR, [SP, #0]
0x077C	0xB001    ADD	SP, SP, #4
0x077E	0x4770    BX	LR
0x0780	0x48004000  	USART3_SR+0
; end of _UART3_Tx_Idle
_UART4_Read:
;__Lib_UART_123_45.c, 116 :: 		
0x073C	0xB081    SUB	SP, SP, #4
0x073E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 117 :: 		
0x0742	0x4803    LDR	R0, [PC, #12]
0x0744	0xF7FFFEB8  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 118 :: 		
L_end_UART4_Read:
0x0748	0xF8DDE000  LDR	LR, [SP, #0]
0x074C	0xB001    ADD	SP, SP, #4
0x074E	0x4770    BX	LR
0x0750	0x4C004000  	UART4_SR+0
; end of _UART4_Read
_UART4_Data_Ready:
;__Lib_UART_123_45.c, 143 :: 		
0x0754	0xB081    SUB	SP, SP, #4
0x0756	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 144 :: 		
0x075A	0x4803    LDR	R0, [PC, #12]
0x075C	0xF7FFFEB8  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 145 :: 		
L_end_UART4_Data_Ready:
0x0760	0xF8DDE000  LDR	LR, [SP, #0]
0x0764	0xB001    ADD	SP, SP, #4
0x0766	0x4770    BX	LR
0x0768	0x4C004000  	UART4_SR+0
; end of _UART4_Data_Ready
_UART4_Tx_Idle:
;__Lib_UART_123_45.c, 224 :: 		
0x04E8	0xB081    SUB	SP, SP, #4
0x04EA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 225 :: 		
0x04EE	0x4803    LDR	R0, [PC, #12]
0x04F0	0xF7FFFFF4  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 226 :: 		
L_end_UART4_Tx_Idle:
0x04F4	0xF8DDE000  LDR	LR, [SP, #0]
0x04F8	0xB001    ADD	SP, SP, #4
0x04FA	0x4770    BX	LR
0x04FC	0x4C004000  	UART4_SR+0
; end of _UART4_Tx_Idle
_UART5_Read:
;__Lib_UART_123_45.c, 120 :: 		
0x0518	0xB081    SUB	SP, SP, #4
0x051A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 121 :: 		
0x051E	0x4803    LDR	R0, [PC, #12]
0x0520	0xF7FFFFCA  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 122 :: 		
L_end_UART5_Read:
0x0524	0xF8DDE000  LDR	LR, [SP, #0]
0x0528	0xB001    ADD	SP, SP, #4
0x052A	0x4770    BX	LR
0x052C	0x50004000  	UART5_SR+0
; end of _UART5_Read
_UART5_Data_Ready:
;__Lib_UART_123_45.c, 147 :: 		
0x067C	0xB081    SUB	SP, SP, #4
0x067E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 148 :: 		
0x0682	0x4803    LDR	R0, [PC, #12]
0x0684	0xF7FFFF24  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 149 :: 		
L_end_UART5_Data_Ready:
0x0688	0xF8DDE000  LDR	LR, [SP, #0]
0x068C	0xB001    ADD	SP, SP, #4
0x068E	0x4770    BX	LR
0x0690	0x50004000  	UART5_SR+0
; end of _UART5_Data_Ready
_UART5_Tx_Idle:
;__Lib_UART_123_45.c, 228 :: 		
0x0694	0xB081    SUB	SP, SP, #4
0x0696	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 229 :: 		
0x069A	0x4803    LDR	R0, [PC, #12]
0x069C	0xF7FFFF1E  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 230 :: 		
L_end_UART5_Tx_Idle:
0x06A0	0xF8DDE000  LDR	LR, [SP, #0]
0x06A4	0xB001    ADD	SP, SP, #4
0x06A6	0x4770    BX	LR
0x06A8	0x50004000  	UART5_SR+0
; end of _UART5_Tx_Idle
__gsmgnss2_driver_hal_uartRead:
;__hal_stm32.c, 147 :: 		static uint8_t hal_uartRead()
0x0D80	0xB081    SUB	SP, SP, #4
0x0D82	0xF8CDE000  STR	LR, [SP, #0]
;__hal_stm32.c, 149 :: 		return ( uint8_t )fp_uartRead();
0x0D86	0x4C04    LDR	R4, [PC, #16]
0x0D88	0x6824    LDR	R4, [R4, #0]
0x0D8A	0x47A0    BLX	R4
0x0D8C	0xB2C0    UXTB	R0, R0
;__hal_stm32.c, 150 :: 		}
L_end_hal_uartRead:
0x0D8E	0xF8DDE000  LDR	LR, [SP, #0]
0x0D92	0xB001    ADD	SP, SP, #4
0x0D94	0x4770    BX	LR
0x0D96	0xBF00    NOP
0x0D98	0x01002000  	__gsmgnss2_driver_fp_uartRead+0
; end of __gsmgnss2_driver_hal_uartRead
_gsmgnss2_putc:
;__gsmgnss2_driver.c, 595 :: 		void gsmgnss2_putc( uint8_t rxInput )
; rxInput start address is: 0 (R0)
; rxInput end address is: 0 (R0)
; rxInput start address is: 0 (R0)
;__gsmgnss2_driver.c, 597 :: 		CORE_BLOCK();
0x0D9C	0x2200    MOVS	R2, #0
0x0D9E	0x4915    LDR	R1, [PC, #84]
0x0DA0	0x700A    STRB	R2, [R1, #0]
0x0DA2	0x2200    MOVS	R2, #0
0x0DA4	0x4914    LDR	R1, [PC, #80]
0x0DA6	0x700A    STRB	R2, [R1, #0]
0x0DA8	0x2201    MOVS	R2, #1
0x0DAA	0x4914    LDR	R1, [PC, #80]
0x0DAC	0x700A    STRB	R2, [R1, #0]
;__gsmgnss2_driver.c, 598 :: 		TIMER_START();
0x0DAE	0x2200    MOVS	R2, #0
0x0DB0	0x4913    LDR	R1, [PC, #76]
0x0DB2	0x600A    STR	R2, [R1, #0]
0x0DB4	0x2201    MOVS	R2, #1
0x0DB6	0x4913    LDR	R1, [PC, #76]
0x0DB8	0x700A    STRB	R2, [R1, #0]
;__gsmgnss2_driver.c, 599 :: 		rxBuff.storage[rxBuff.idx++] = rxInput;
0x0DBA	0x4913    LDR	R1, [PC, #76]
0x0DBC	0x880A    LDRH	R2, [R1, #0]
0x0DBE	0x4913    LDR	R1, [PC, #76]
0x0DC0	0x1889    ADDS	R1, R1, R2
0x0DC2	0x7008    STRB	R0, [R1, #0]
; rxInput end address is: 0 (R0)
0x0DC4	0x4910    LDR	R1, [PC, #64]
0x0DC6	0x8809    LDRH	R1, [R1, #0]
0x0DC8	0x1C4A    ADDS	R2, R1, #1
0x0DCA	0x490F    LDR	R1, [PC, #60]
0x0DCC	0x800A    STRH	R2, [R1, #0]
;__gsmgnss2_driver.c, 601 :: 		if (_GSMGNSS2_BUF_WARNING <= rxBuff.idx)
0x0DCE	0x490E    LDR	R1, [PC, #56]
0x0DD0	0x880A    LDRH	R2, [R1, #0]
0x0DD2	0x490F    LDR	R1, [PC, #60]
0x0DD4	0x428A    CMP	R2, R1
0x0DD6	0xD302    BCC	L_gsmgnss2_putc50
;__gsmgnss2_driver.c, 603 :: 		f_buffer_warning = true;
0x0DD8	0x2201    MOVS	R2, #1
0x0DDA	0x490E    LDR	R1, [PC, #56]
0x0DDC	0x700A    STRB	R2, [R1, #0]
;__gsmgnss2_driver.c, 604 :: 		}
L_gsmgnss2_putc50:
;__gsmgnss2_driver.c, 606 :: 		if((_GSMGNSS2_BUF_SIZE - 1) == rxBuff.idx)
0x0DDE	0x490A    LDR	R1, [PC, #40]
0x0DE0	0x8809    LDRH	R1, [R1, #0]
0x0DE2	0xF1B10FFF  CMP	R1, #255
0x0DE6	0xD104    BNE	L_gsmgnss2_putc51
;__gsmgnss2_driver.c, 608 :: 		rxBuff.idx--;
0x0DE8	0x4907    LDR	R1, [PC, #28]
0x0DEA	0x8809    LDRH	R1, [R1, #0]
0x0DEC	0x1E4A    SUBS	R2, R1, #1
0x0DEE	0x4906    LDR	R1, [PC, #24]
0x0DF0	0x800A    STRH	R2, [R1, #0]
;__gsmgnss2_driver.c, 609 :: 		}
L_gsmgnss2_putc51:
;__gsmgnss2_driver.c, 610 :: 		}
L_end_gsmgnss2_putc:
0x0DF2	0x4770    BX	LR
0x0DF4	0x00B32000  	__gsmgnss2_driver_f_wdog_timeout+0
0x0DF8	0x00FB2000  	__gsmgnss2_driver_f_response_ready+0
0x0DFC	0x01042000  	__gsmgnss2_driver_f_sequence_active+0
0x0E00	0x01082000  	__gsmgnss2_driver_c_timer+0
0x0E04	0x01052000  	__gsmgnss2_driver_f_timer_active+0
0x0E08	0x010C2000  	__gsmgnss2_driver_rxBuff+0
0x0E0C	0x010E2000  	__gsmgnss2_driver_rxBuff+2
0x0E10	0x00C00000  	__GSMGNSS2_BUF_WARNING
0x0E14	0x01062000  	__gsmgnss2_driver_f_buffer_warning+0
; end of _gsmgnss2_putc
__gsmgnss2_driver_createEvent:
;__gsmgnss2_driver.c, 524 :: 		static void createEvent( char *pInput, T_CORE_event *pEvent )
0x0E30	0xB089    SUB	SP, SP, #36
0x0E32	0xF8CDE000  STR	LR, [SP, #0]
0x0E36	0x9006    STR	R0, [SP, #24]
0x0E38	0x9107    STR	R1, [SP, #28]
;__gsmgnss2_driver.c, 526 :: 		uint8_t hIdx     = 0;
;__gsmgnss2_driver.c, 527 :: 		uint8_t startIdx = 0;
;__gsmgnss2_driver.c, 528 :: 		uint8_t startOff = 0;
;__gsmgnss2_driver.c, 529 :: 		uint8_t endIdx   = 0;
;__gsmgnss2_driver.c, 530 :: 		uint8_t endOff   = 0;
;__gsmgnss2_driver.c, 532 :: 		char tmp[_GSMGNSS2_CMD_MAXSIZE + 1] = { 0 };
0x0E3A	0xF10D0B04  ADD	R11, SP, #4
0x0E3E	0xF10B0A11  ADD	R10, R11, #17
0x0E42	0xF8DFC0B0  LDR	R12, [PC, #176]
0x0E46	0xF001F90F  BL	___CC2DW+0
;__gsmgnss2_driver.c, 535 :: 		startIdx = searchLut(pInput, LUT_START_MARK, LUT_START_MARK_SIZE, SEARCH_IDX);
0x0E4A	0x2300    MOVS	R3, #0
0x0E4C	0x2207    MOVS	R2, #7
0x0E4E	0x492A    LDR	R1, [PC, #168]
0x0E50	0x9806    LDR	R0, [SP, #24]
0x0E52	0xF7FFFBB3  BL	__gsmgnss2_driver_searchLut+0
0x0E56	0xF88D0020  STRB	R0, [SP, #32]
;__gsmgnss2_driver.c, 536 :: 		startOff = searchLut(pInput, LUT_START_MARK, LUT_START_MARK_SIZE, SEARCH_OFFSET);
0x0E5A	0x2301    MOVS	R3, #1
0x0E5C	0x2207    MOVS	R2, #7
0x0E5E	0x4926    LDR	R1, [PC, #152]
0x0E60	0x9806    LDR	R0, [SP, #24]
0x0E62	0xF7FFFBAB  BL	__gsmgnss2_driver_searchLut+0
0x0E66	0xF88D0021  STRB	R0, [SP, #33]
;__gsmgnss2_driver.c, 537 :: 		endIdx = searchLut(pInput, LUT_END_MARK, LUT_END_MARK_SIZE, SEARCH_IDX);
0x0E6A	0x2300    MOVS	R3, #0
0x0E6C	0x2206    MOVS	R2, #6
0x0E6E	0x4923    LDR	R1, [PC, #140]
0x0E70	0x9806    LDR	R0, [SP, #24]
0x0E72	0xF7FFFBA3  BL	__gsmgnss2_driver_searchLut+0
0x0E76	0xF88D0022  STRB	R0, [SP, #34]
;__gsmgnss2_driver.c, 538 :: 		endOff = searchLut(pInput, LUT_END_MARK, LUT_END_MARK_SIZE, SEARCH_OFFSET);
0x0E7A	0x2301    MOVS	R3, #1
0x0E7C	0x2206    MOVS	R2, #6
0x0E7E	0x491F    LDR	R1, [PC, #124]
0x0E80	0x9806    LDR	R0, [SP, #24]
0x0E82	0xF7FFFB9B  BL	__gsmgnss2_driver_searchLut+0
; endOff start address is: 4 (R1)
0x0E86	0xB2C1    UXTB	R1, R0
;__gsmgnss2_driver.c, 540 :: 		if (0 == endOff)
0x0E88	0xB908    CBNZ	R0, L___gsmgnss2_driver_createEvent98
; endOff end address is: 4 (R1)
;__gsmgnss2_driver.c, 542 :: 		endOff = _GSMGNSS2_CMD_MAXSIZE;
; endOff start address is: 0 (R0)
0x0E8A	0x2010    MOVS	R0, #16
; endOff end address is: 0 (R0)
;__gsmgnss2_driver.c, 543 :: 		}
0x0E8C	0xE000    B	L___gsmgnss2_driver_createEvent48
L___gsmgnss2_driver_createEvent98:
;__gsmgnss2_driver.c, 540 :: 		if (0 == endOff)
0x0E8E	0xB2C8    UXTB	R0, R1
;__gsmgnss2_driver.c, 543 :: 		}
L___gsmgnss2_driver_createEvent48:
;__gsmgnss2_driver.c, 546 :: 		_strncpy(tmp, pInput + startOff, endOff - startOff);
; endOff start address is: 0 (R0)
0x0E90	0xF89D2021  LDRB	R2, [SP, #33]
0x0E94	0x1A84    SUB	R4, R0, R2
; endOff end address is: 0 (R0)
0x0E96	0xF89D3021  LDRB	R3, [SP, #33]
0x0E9A	0x9A06    LDR	R2, [SP, #24]
0x0E9C	0x18D3    ADDS	R3, R2, R3
0x0E9E	0xAA01    ADD	R2, SP, #4
0x0EA0	0x4619    MOV	R1, R3
0x0EA2	0x4610    MOV	R0, R2
0x0EA4	0xB2A2    UXTH	R2, R4
0x0EA6	0xF7FFFB6F  BL	__gsmgnss2_driver__strncpy+0
;__gsmgnss2_driver.c, 547 :: 		hIdx                         = locateHandler(tmp);
0x0EAA	0xAA01    ADD	R2, SP, #4
0x0EAC	0x4610    MOV	R0, R2
0x0EAE	0xF7FFFB3F  BL	__gsmgnss2_driver_locateHandler+0
; hIdx start address is: 4 (R1)
0x0EB2	0xB2C1    UXTB	R1, R0
;__gsmgnss2_driver.c, 548 :: 		pEvent->fpHdl                = hdlBuff.storage[hIdx].handler;
0x0EB4	0xB2C2    UXTB	R2, R0
0x0EB6	0x0113    LSLS	R3, R2, #4
0x0EB8	0x4A11    LDR	R2, [PC, #68]
0x0EBA	0x18D2    ADDS	R2, R2, R3
0x0EBC	0x320C    ADDS	R2, #12
0x0EBE	0x6813    LDR	R3, [R2, #0]
0x0EC0	0x9A07    LDR	R2, [SP, #28]
0x0EC2	0x6013    STR	R3, [R2, #0]
;__gsmgnss2_driver.c, 549 :: 		pEvent->wDogLimit            = hdlBuff.storage[hIdx].timeout;
0x0EC4	0x9A07    LDR	R2, [SP, #28]
0x0EC6	0x1D14    ADDS	R4, R2, #4
0x0EC8	0x010B    LSLS	R3, R1, #4
; hIdx end address is: 4 (R1)
0x0ECA	0x4A0D    LDR	R2, [PC, #52]
0x0ECC	0x18D2    ADDS	R2, R2, R3
0x0ECE	0x3208    ADDS	R2, #8
0x0ED0	0x6812    LDR	R2, [R2, #0]
0x0ED2	0x6022    STR	R2, [R4, #0]
;__gsmgnss2_driver.c, 550 :: 		pEvent->evArg[_GSMGNSS2_EVARG_START_T]  = startIdx;
0x0ED4	0x9A07    LDR	R2, [SP, #28]
0x0ED6	0xF2020308  ADDW	R3, R2, #8
0x0EDA	0xF89D2020  LDRB	R2, [SP, #32]
0x0EDE	0x701A    STRB	R2, [R3, #0]
;__gsmgnss2_driver.c, 551 :: 		pEvent->evArg[_GSMGNSS2_EVARG_END_T]    = endIdx;
0x0EE0	0x9A07    LDR	R2, [SP, #28]
0x0EE2	0x3208    ADDS	R2, #8
0x0EE4	0x1C53    ADDS	R3, R2, #1
0x0EE6	0xF89D2022  LDRB	R2, [SP, #34]
0x0EEA	0x701A    STRB	R2, [R3, #0]
;__gsmgnss2_driver.c, 552 :: 		}
L_end_createEvent:
0x0EEC	0xF8DDE000  LDR	LR, [SP, #0]
0x0EF0	0xB009    ADD	SP, SP, #36
0x0EF2	0x4770    BX	LR
0x0EF4	0x24C70000  	?ICS__gsmgnss2_driver_createEvent_tmp_L0+0
0x0EF8	0x00D42000  	__gsmgnss2_driver_LUT_START_MARK+0
0x0EFC	0x00E92000  	__gsmgnss2_driver_LUT_END_MARK+0
0x0F00	0x02142000  	__gsmgnss2_driver_hdlBuff+4
; end of __gsmgnss2_driver_createEvent
__gsmgnss2_driver_searchLut:
;__gsmgnss2_driver.c, 490 :: 		static uint8_t searchLut( char* pInput, char (*pLut)[ LUTS_WIDTH ], uint8_t lutSize, uint8_t flag )
; pInput start address is: 0 (R0)
0x05BC	0xB085    SUB	SP, SP, #20
0x05BE	0xF8CDE000  STR	LR, [SP, #0]
0x05C2	0x4682    MOV	R10, R0
0x05C4	0x9102    STR	R1, [SP, #8]
0x05C6	0xF88D200C  STRB	R2, [SP, #12]
0x05CA	0xF88D3010  STRB	R3, [SP, #16]
; pInput end address is: 0 (R0)
; pInput start address is: 40 (R10)
;__gsmgnss2_driver.c, 492 :: 		uint8_t     inLen    = 0;
;__gsmgnss2_driver.c, 493 :: 		uint8_t     inOff    = 0;
;__gsmgnss2_driver.c, 494 :: 		uint8_t     lutLen   = 0;
;__gsmgnss2_driver.c, 495 :: 		uint8_t     lutIdx   = 0;
;__gsmgnss2_driver.c, 497 :: 		if (_GSMGNSS2_CMD_MAXSIZE < (inLen = _strlen(pInput)))
0x05CE	0x4650    MOV	R0, R10
0x05D0	0xF7FFFE84  BL	__gsmgnss2_driver__strlen+0
0x05D4	0xF88D0011  STRB	R0, [SP, #17]
0x05D8	0xB2C4    UXTB	R4, R0
0x05DA	0x2C10    CMP	R4, #16
0x05DC	0xD902    BLS	L___gsmgnss2_driver_searchLut37
;__gsmgnss2_driver.c, 499 :: 		inLen = _GSMGNSS2_CMD_MAXSIZE;
0x05DE	0x2410    MOVS	R4, #16
0x05E0	0xF88D4011  STRB	R4, [SP, #17]
;__gsmgnss2_driver.c, 500 :: 		}
L___gsmgnss2_driver_searchLut37:
;__gsmgnss2_driver.c, 502 :: 		for (lutIdx = 1; lutIdx < lutSize; lutIdx++)
; lutIdx start address is: 28 (R7)
0x05E4	0x2701    MOVS	R7, #1
; lutIdx end address is: 28 (R7)
; pInput end address is: 40 (R10)
0x05E6	0x4651    MOV	R1, R10
L___gsmgnss2_driver_searchLut38:
; lutIdx start address is: 28 (R7)
; pInput start address is: 4 (R1)
0x05E8	0xF89D400C  LDRB	R4, [SP, #12]
0x05EC	0x42A7    CMP	R7, R4
0x05EE	0xD23F    BCS	L___gsmgnss2_driver_searchLut39
;__gsmgnss2_driver.c, 504 :: 		lutLen = _strlen(pLut[lutIdx]);
0x05F0	0x2403    MOVS	R4, #3
0x05F2	0xFB04F507  MUL	R5, R4, R7
0x05F6	0x9C02    LDR	R4, [SP, #8]
0x05F8	0x1964    ADDS	R4, R4, R5
0x05FA	0x9101    STR	R1, [SP, #4]
0x05FC	0x4620    MOV	R0, R4
0x05FE	0xF7FFFE6D  BL	__gsmgnss2_driver__strlen+0
0x0602	0x9901    LDR	R1, [SP, #4]
; lutLen start address is: 8 (R2)
0x0604	0xB2C2    UXTB	R2, R0
;__gsmgnss2_driver.c, 506 :: 		for (inOff = 0; inOff < inLen; inOff++)
; inOff start address is: 48 (R12)
0x0606	0xF2400C00  MOVW	R12, #0
; lutIdx end address is: 28 (R7)
; pInput end address is: 4 (R1)
; lutLen end address is: 8 (R2)
; inOff end address is: 48 (R12)
0x060A	0x468A    MOV	R10, R1
0x060C	0xB2F9    UXTB	R1, R7
0x060E	0xFA5FFB8C  UXTB	R11, R12
0x0612	0xFA5FFC82  UXTB	R12, R2
L___gsmgnss2_driver_searchLut41:
; lutLen start address is: 48 (R12)
; inOff start address is: 44 (R11)
; lutLen start address is: 48 (R12)
; lutLen end address is: 48 (R12)
; pInput start address is: 40 (R10)
; lutIdx start address is: 4 (R1)
0x0616	0xF89D4011  LDRB	R4, [SP, #17]
0x061A	0x45A3    CMP	R11, R4
0x061C	0xD223    BCS	L___gsmgnss2_driver_searchLut42
; lutLen end address is: 48 (R12)
;__gsmgnss2_driver.c, 508 :: 		if (!_strncmp(pLut[lutIdx], pInput + inOff, lutLen))
; lutLen start address is: 48 (R12)
0x061E	0xEB0A060B  ADD	R6, R10, R11, LSL #0
0x0622	0x2403    MOVS	R4, #3
0x0624	0xFB04F501  MUL	R5, R4, R1
0x0628	0x9C02    LDR	R4, [SP, #8]
0x062A	0x1964    ADDS	R4, R4, R5
0x062C	0xF88D1004  STRB	R1, [SP, #4]
0x0630	0xFA5FF28C  UXTB	R2, R12
0x0634	0x4631    MOV	R1, R6
0x0636	0x4620    MOV	R0, R4
0x0638	0xF7FFFE22  BL	__gsmgnss2_driver__strncmp+0
0x063C	0xF89D1004  LDRB	R1, [SP, #4]
0x0640	0xB958    CBNZ	R0, L___gsmgnss2_driver_searchLut44
;__gsmgnss2_driver.c, 510 :: 		if (SEARCH_IDX == flag)
0x0642	0xF89D4010  LDRB	R4, [SP, #16]
0x0646	0xB90C    CBNZ	R4, L___gsmgnss2_driver_searchLut45
; inOff end address is: 44 (R11)
; lutLen end address is: 48 (R12)
; pInput end address is: 40 (R10)
;__gsmgnss2_driver.c, 512 :: 		return lutIdx;
0x0648	0xB2C8    UXTB	R0, R1
; lutIdx end address is: 4 (R1)
0x064A	0xE012    B	L_end_searchLut
;__gsmgnss2_driver.c, 513 :: 		}
L___gsmgnss2_driver_searchLut45:
;__gsmgnss2_driver.c, 514 :: 		else if (SEARCH_OFFSET == flag)
; lutIdx start address is: 4 (R1)
; pInput start address is: 40 (R10)
; lutLen start address is: 48 (R12)
; inOff start address is: 44 (R11)
0x064C	0xF89D4010  LDRB	R4, [SP, #16]
0x0650	0x2C01    CMP	R4, #1
0x0652	0xD102    BNE	L___gsmgnss2_driver_searchLut47
; lutLen end address is: 48 (R12)
; pInput end address is: 40 (R10)
; lutIdx end address is: 4 (R1)
;__gsmgnss2_driver.c, 516 :: 		return inOff;
0x0654	0xFA5FF08B  UXTB	R0, R11
; inOff end address is: 44 (R11)
0x0658	0xE00B    B	L_end_searchLut
;__gsmgnss2_driver.c, 517 :: 		}
L___gsmgnss2_driver_searchLut47:
;__gsmgnss2_driver.c, 518 :: 		}
; lutIdx start address is: 4 (R1)
; pInput start address is: 40 (R10)
; lutLen start address is: 48 (R12)
; inOff start address is: 44 (R11)
L___gsmgnss2_driver_searchLut44:
;__gsmgnss2_driver.c, 506 :: 		for (inOff = 0; inOff < inLen; inOff++)
0x065A	0xF10B0401  ADD	R4, R11, #1
; inOff end address is: 44 (R11)
; inOff start address is: 0 (R0)
0x065E	0xB2E0    UXTB	R0, R4
;__gsmgnss2_driver.c, 519 :: 		}
; lutLen end address is: 48 (R12)
; inOff end address is: 0 (R0)
0x0660	0xFA5FFB80  UXTB	R11, R0
0x0664	0xE7D7    B	L___gsmgnss2_driver_searchLut41
L___gsmgnss2_driver_searchLut42:
;__gsmgnss2_driver.c, 502 :: 		for (lutIdx = 1; lutIdx < lutSize; lutIdx++)
0x0666	0x1C4C    ADDS	R4, R1, #1
; lutIdx end address is: 4 (R1)
; lutIdx start address is: 20 (R5)
0x0668	0xB2E5    UXTB	R5, R4
;__gsmgnss2_driver.c, 520 :: 		}
0x066A	0x4651    MOV	R1, R10
; pInput end address is: 40 (R10)
; lutIdx end address is: 20 (R5)
0x066C	0xB2EF    UXTB	R7, R5
0x066E	0xE7BB    B	L___gsmgnss2_driver_searchLut38
L___gsmgnss2_driver_searchLut39:
;__gsmgnss2_driver.c, 521 :: 		return 0;
0x0670	0x2000    MOVS	R0, #0
;__gsmgnss2_driver.c, 522 :: 		}
L_end_searchLut:
0x0672	0xF8DDE000  LDR	LR, [SP, #0]
0x0676	0xB005    ADD	SP, SP, #20
0x0678	0x4770    BX	LR
; end of __gsmgnss2_driver_searchLut
__gsmgnss2_driver__strlen:
;__gsmgnss2_driver.c, 365 :: 		static uint16_t _strlen(uint8_t *s)
; s start address is: 0 (R0)
0x02DC	0x4601    MOV	R1, R0
; s end address is: 0 (R0)
; s start address is: 4 (R1)
;__gsmgnss2_driver.c, 367 :: 		uint16_t i = 0;
; i start address is: 12 (R3)
0x02DE	0xF2400300  MOVW	R3, #0
;__gsmgnss2_driver.c, 368 :: 		uint16_t c = 0;
; c start address is: 0 (R0)
0x02E2	0xF2400000  MOVW	R0, #0
; s end address is: 4 (R1)
; c end address is: 0 (R0)
; i end address is: 12 (R3)
0x02E6	0xB282    UXTH	R2, R0
0x02E8	0x4608    MOV	R0, R1
;__gsmgnss2_driver.c, 370 :: 		while (0 != s[i])
L___gsmgnss2_driver__strlen21:
; c start address is: 8 (R2)
; i start address is: 12 (R3)
; s start address is: 0 (R0)
0x02EA	0x18C1    ADDS	R1, R0, R3
0x02EC	0x7809    LDRB	R1, [R1, #0]
0x02EE	0xB121    CBZ	R1, L___gsmgnss2_driver__strlen22
;__gsmgnss2_driver.c, 372 :: 		i++;
0x02F0	0x1C5B    ADDS	R3, R3, #1
0x02F2	0xB29B    UXTH	R3, R3
;__gsmgnss2_driver.c, 373 :: 		c++;
0x02F4	0x1C52    ADDS	R2, R2, #1
0x02F6	0xB292    UXTH	R2, R2
;__gsmgnss2_driver.c, 374 :: 		}
; s end address is: 0 (R0)
; i end address is: 12 (R3)
0x02F8	0xE7F7    B	L___gsmgnss2_driver__strlen21
L___gsmgnss2_driver__strlen22:
;__gsmgnss2_driver.c, 376 :: 		return c;
0x02FA	0xB290    UXTH	R0, R2
; c end address is: 8 (R2)
;__gsmgnss2_driver.c, 377 :: 		}
L_end__strlen:
0x02FC	0x4770    BX	LR
; end of __gsmgnss2_driver__strlen
__gsmgnss2_driver__strncmp:
;__gsmgnss2_driver.c, 297 :: 		static int8_t _strncmp(uint8_t *cs, uint8_t *ct, uint16_t count)
; count start address is: 8 (R2)
; ct start address is: 4 (R1)
; cs start address is: 0 (R0)
0x0280	0xB293    UXTH	R3, R2
0x0282	0x460A    MOV	R2, R1
0x0284	0x4601    MOV	R1, R0
; count end address is: 8 (R2)
; ct end address is: 4 (R1)
; cs end address is: 0 (R0)
; cs start address is: 4 (R1)
; ct start address is: 8 (R2)
; count start address is: 12 (R3)
;__gsmgnss2_driver.c, 301 :: 		uint16_t i = 0;
; i start address is: 16 (R4)
0x0286	0xF2400400  MOVW	R4, #0
;__gsmgnss2_driver.c, 302 :: 		uint16_t j = 0;
; j start address is: 0 (R0)
0x028A	0xF2400000  MOVW	R0, #0
; ct end address is: 8 (R2)
; count end address is: 12 (R3)
; j end address is: 0 (R0)
; i end address is: 16 (R4)
0x028E	0xFA1FF880  UXTH	R8, R0
0x0292	0x4610    MOV	R0, R2
0x0294	0xB29A    UXTH	R2, R3
;__gsmgnss2_driver.c, 304 :: 		while (0 != count)
L___gsmgnss2_driver__strncmp6:
; j start address is: 32 (R8)
; ct start address is: 0 (R0)
; i start address is: 16 (R4)
; count start address is: 8 (R2)
; ct start address is: 0 (R0)
; ct end address is: 0 (R0)
; cs start address is: 4 (R1)
; cs end address is: 4 (R1)
0x0296	0xB1EA    CBZ	R2, L___gsmgnss2_driver__strncmp7
; ct end address is: 0 (R0)
; cs end address is: 4 (R1)
;__gsmgnss2_driver.c, 306 :: 		c1 = cs[i++];
; cs start address is: 4 (R1)
; ct start address is: 0 (R0)
0x0298	0x190B    ADDS	R3, R1, R4
0x029A	0x781D    LDRB	R5, [R3, #0]
; c1 start address is: 24 (R6)
0x029C	0xB2EE    UXTB	R6, R5
0x029E	0x1C63    ADDS	R3, R4, #1
; i end address is: 16 (R4)
; i start address is: 28 (R7)
0x02A0	0xB29F    UXTH	R7, R3
;__gsmgnss2_driver.c, 307 :: 		c2 = ct[j++];
0x02A2	0xEB000308  ADD	R3, R0, R8, LSL #0
0x02A6	0x781C    LDRB	R4, [R3, #0]
; c2 start address is: 36 (R9)
0x02A8	0xFA5FF984  UXTB	R9, R4
0x02AC	0xF1080801  ADD	R8, R8, #1
0x02B0	0xFA1FF888  UXTH	R8, R8
;__gsmgnss2_driver.c, 309 :: 		if (c1 != c2)
0x02B4	0x42A5    CMP	R5, R4
0x02B6	0xD007    BEQ	L___gsmgnss2_driver__strncmp8
; ct end address is: 0 (R0)
; cs end address is: 4 (R1)
; i end address is: 28 (R7)
; j end address is: 32 (R8)
; count end address is: 8 (R2)
;__gsmgnss2_driver.c, 311 :: 		return c1 < c2 ? -1 : 1;
0x02B8	0x454E    CMP	R6, R9
0x02BA	0xD202    BCS	L___gsmgnss2_driver__strncmp9
; c1 end address is: 24 (R6)
; c2 end address is: 36 (R9)
; ?FLOC____gsmgnss2_driver__strncmp?T70 start address is: 0 (R0)
0x02BC	0x20FF    MOVS	R0, #-1
0x02BE	0xB240    SXTB	R0, R0
; ?FLOC____gsmgnss2_driver__strncmp?T70 end address is: 0 (R0)
0x02C0	0xE001    B	L___gsmgnss2_driver__strncmp10
L___gsmgnss2_driver__strncmp9:
; ?FLOC____gsmgnss2_driver__strncmp?T70 start address is: 0 (R0)
0x02C2	0x2001    MOVS	R0, #1
0x02C4	0xB240    SXTB	R0, R0
; ?FLOC____gsmgnss2_driver__strncmp?T70 end address is: 0 (R0)
L___gsmgnss2_driver__strncmp10:
; ?FLOC____gsmgnss2_driver__strncmp?T70 start address is: 0 (R0)
; ?FLOC____gsmgnss2_driver__strncmp?T70 end address is: 0 (R0)
0x02C6	0xE007    B	L_end__strncmp
;__gsmgnss2_driver.c, 312 :: 		}
L___gsmgnss2_driver__strncmp8:
;__gsmgnss2_driver.c, 313 :: 		if (0 == c1)
; count start address is: 8 (R2)
; j start address is: 32 (R8)
; i start address is: 28 (R7)
; c1 start address is: 24 (R6)
; cs start address is: 4 (R1)
; ct start address is: 0 (R0)
0x02C8	0xB906    CBNZ	R6, L___gsmgnss2_driver__strncmp11
; ct end address is: 0 (R0)
; cs end address is: 4 (R1)
; c1 end address is: 24 (R6)
; i end address is: 28 (R7)
; j end address is: 32 (R8)
; count end address is: 8 (R2)
;__gsmgnss2_driver.c, 315 :: 		break;
0x02CA	0xE003    B	L___gsmgnss2_driver__strncmp7
;__gsmgnss2_driver.c, 316 :: 		}
L___gsmgnss2_driver__strncmp11:
;__gsmgnss2_driver.c, 317 :: 		count--;
; count start address is: 8 (R2)
; j start address is: 32 (R8)
; i start address is: 28 (R7)
; cs start address is: 4 (R1)
; ct start address is: 0 (R0)
0x02CC	0x1E52    SUBS	R2, R2, #1
0x02CE	0xB292    UXTH	R2, R2
;__gsmgnss2_driver.c, 318 :: 		}
; ct end address is: 0 (R0)
; cs end address is: 4 (R1)
; i end address is: 28 (R7)
; j end address is: 32 (R8)
; count end address is: 8 (R2)
0x02D0	0xB2BC    UXTH	R4, R7
0x02D2	0xE7E0    B	L___gsmgnss2_driver__strncmp6
L___gsmgnss2_driver__strncmp7:
;__gsmgnss2_driver.c, 319 :: 		return 0;
0x02D4	0x2000    MOVS	R0, #0
0x02D6	0xB240    SXTB	R0, R0
;__gsmgnss2_driver.c, 320 :: 		}
L_end__strncmp:
0x02D8	0x4770    BX	LR
; end of __gsmgnss2_driver__strncmp
__gsmgnss2_driver__strncpy:
;__gsmgnss2_driver.c, 322 :: 		static void _strncpy(uint8_t *dest, uint8_t *src, uint16_t count)
; count start address is: 8 (R2)
; src start address is: 4 (R1)
; dest start address is: 0 (R0)
0x0588	0xB081    SUB	SP, SP, #4
; count end address is: 8 (R2)
; src end address is: 4 (R1)
; dest end address is: 0 (R0)
; dest start address is: 0 (R0)
; src start address is: 4 (R1)
; count start address is: 8 (R2)
;__gsmgnss2_driver.c, 324 :: 		char *tmp  = dest;
; tmp start address is: 16 (R4)
0x058A	0x4604    MOV	R4, R0
; dest end address is: 0 (R0)
;__gsmgnss2_driver.c, 326 :: 		uint16_t i = 0;
; i start address is: 0 (R0)
0x058C	0xF2400000  MOVW	R0, #0
; src end address is: 4 (R1)
; count end address is: 8 (R2)
; i end address is: 0 (R0)
; tmp end address is: 16 (R4)
0x0590	0xF8AD2000  STRH	R2, [SP, #0]
0x0594	0xB282    UXTH	R2, R0
0x0596	0x4608    MOV	R0, R1
0x0598	0xF8BD1000  LDRH	R1, [SP, #0]
;__gsmgnss2_driver.c, 328 :: 		while (0 != count)
L___gsmgnss2_driver__strncpy12:
; i start address is: 8 (R2)
; src start address is: 0 (R0)
; tmp start address is: 16 (R4)
; count start address is: 4 (R1)
; src start address is: 0 (R0)
; src end address is: 0 (R0)
0x059C	0xB159    CBZ	R1, L___gsmgnss2_driver__strncpy13
; src end address is: 0 (R0)
;__gsmgnss2_driver.c, 330 :: 		if (0 != (*tmp = src[i]))
; src start address is: 0 (R0)
0x059E	0x1883    ADDS	R3, R0, R2
0x05A0	0x781B    LDRB	R3, [R3, #0]
0x05A2	0x7023    STRB	R3, [R4, #0]
0x05A4	0x7823    LDRB	R3, [R4, #0]
0x05A6	0xB113    CBZ	R3, L___gsmgnss2_driver__strncpy97
;__gsmgnss2_driver.c, 332 :: 		i++;
0x05A8	0x1C52    ADDS	R2, R2, #1
0x05AA	0xB292    UXTH	R2, R2
; i end address is: 8 (R2)
;__gsmgnss2_driver.c, 333 :: 		}
0x05AC	0xE7FF    B	L___gsmgnss2_driver__strncpy14
L___gsmgnss2_driver__strncpy97:
;__gsmgnss2_driver.c, 330 :: 		if (0 != (*tmp = src[i]))
;__gsmgnss2_driver.c, 333 :: 		}
L___gsmgnss2_driver__strncpy14:
;__gsmgnss2_driver.c, 334 :: 		tmp++;
; i start address is: 8 (R2)
0x05AE	0x1C64    ADDS	R4, R4, #1
;__gsmgnss2_driver.c, 335 :: 		count--;
0x05B0	0x1E49    SUBS	R1, R1, #1
0x05B2	0xB289    UXTH	R1, R1
;__gsmgnss2_driver.c, 336 :: 		}
; src end address is: 0 (R0)
; i end address is: 8 (R2)
; tmp end address is: 16 (R4)
; count end address is: 4 (R1)
0x05B4	0xE7F2    B	L___gsmgnss2_driver__strncpy12
L___gsmgnss2_driver__strncpy13:
;__gsmgnss2_driver.c, 337 :: 		}
L_end__strncpy:
0x05B6	0xB001    ADD	SP, SP, #4
0x05B8	0x4770    BX	LR
; end of __gsmgnss2_driver__strncpy
__gsmgnss2_driver_locateHandler:
;__gsmgnss2_driver.c, 463 :: 		static uint16_t locateHandler( char* pCmd )
; pCmd start address is: 0 (R0)
0x0530	0xB081    SUB	SP, SP, #4
0x0532	0xF8CDE000  STR	LR, [SP, #0]
0x0536	0x4604    MOV	R4, R0
; pCmd end address is: 0 (R0)
; pCmd start address is: 16 (R4)
;__gsmgnss2_driver.c, 470 :: 		len = _strlen(pCmd);
0x0538	0x4620    MOV	R0, R4
0x053A	0xF7FFFECF  BL	__gsmgnss2_driver__strlen+0
; len start address is: 20 (R5)
0x053E	0xB2C5    UXTB	R5, R0
;__gsmgnss2_driver.c, 471 :: 		hash = generateHash(pCmd);
0x0540	0x4620    MOV	R0, R4
; pCmd end address is: 16 (R4)
0x0542	0xF001F877  BL	__gsmgnss2_driver_generateHash+0
; hash start address is: 0 (R0)
;__gsmgnss2_driver.c, 473 :: 		for (idx = 1; idx < hdlBuff.idx; idx++)
; idx start address is: 16 (R4)
0x0546	0x2401    MOVS	R4, #1
; len end address is: 20 (R5)
; idx end address is: 16 (R4)
0x0548	0xB2EB    UXTB	R3, R5
L___gsmgnss2_driver_locateHandler32:
; idx start address is: 16 (R4)
; len start address is: 12 (R3)
; hash start address is: 0 (R0)
; hash end address is: 0 (R0)
; len start address is: 12 (R3)
; len end address is: 12 (R3)
0x054A	0x490D    LDR	R1, [PC, #52]
0x054C	0x8809    LDRH	R1, [R1, #0]
0x054E	0x428C    CMP	R4, R1
0x0550	0xD211    BCS	L___gsmgnss2_driver_locateHandler33
; hash end address is: 0 (R0)
; len end address is: 12 (R3)
;__gsmgnss2_driver.c, 475 :: 		if (hdlBuff.storage[idx].len == len)
; len start address is: 12 (R3)
; hash start address is: 0 (R0)
0x0552	0x0122    LSLS	R2, R4, #4
0x0554	0x490B    LDR	R1, [PC, #44]
0x0556	0x1889    ADDS	R1, R1, R2
0x0558	0x8809    LDRH	R1, [R1, #0]
0x055A	0x4299    CMP	R1, R3
0x055C	0xD108    BNE	L___gsmgnss2_driver_locateHandler35
;__gsmgnss2_driver.c, 477 :: 		if (hdlBuff.storage[idx].hash == hash)
0x055E	0x0122    LSLS	R2, R4, #4
0x0560	0x4908    LDR	R1, [PC, #32]
0x0562	0x1889    ADDS	R1, R1, R2
0x0564	0x1D09    ADDS	R1, R1, #4
0x0566	0x6809    LDR	R1, [R1, #0]
0x0568	0x4281    CMP	R1, R0
0x056A	0xD101    BNE	L___gsmgnss2_driver_locateHandler36
; hash end address is: 0 (R0)
; len end address is: 12 (R3)
;__gsmgnss2_driver.c, 479 :: 		return idx;
0x056C	0xB2A0    UXTH	R0, R4
; idx end address is: 16 (R4)
0x056E	0xE003    B	L_end_locateHandler
;__gsmgnss2_driver.c, 480 :: 		}
L___gsmgnss2_driver_locateHandler36:
;__gsmgnss2_driver.c, 481 :: 		}
; idx start address is: 16 (R4)
; len start address is: 12 (R3)
; hash start address is: 0 (R0)
L___gsmgnss2_driver_locateHandler35:
;__gsmgnss2_driver.c, 473 :: 		for (idx = 1; idx < hdlBuff.idx; idx++)
0x0570	0x1C64    ADDS	R4, R4, #1
0x0572	0xB2A4    UXTH	R4, R4
;__gsmgnss2_driver.c, 482 :: 		}
; hash end address is: 0 (R0)
; len end address is: 12 (R3)
; idx end address is: 16 (R4)
0x0574	0xE7E9    B	L___gsmgnss2_driver_locateHandler32
L___gsmgnss2_driver_locateHandler33:
;__gsmgnss2_driver.c, 484 :: 		return 0;
0x0576	0x2000    MOVS	R0, #0
;__gsmgnss2_driver.c, 485 :: 		}
L_end_locateHandler:
0x0578	0xF8DDE000  LDR	LR, [SP, #0]
0x057C	0xB001    ADD	SP, SP, #4
0x057E	0x4770    BX	LR
0x0580	0x02102000  	__gsmgnss2_driver_hdlBuff+0
0x0584	0x02142000  	__gsmgnss2_driver_hdlBuff+4
; end of __gsmgnss2_driver_locateHandler
__gsmgnss2_driver_transmitCommand:
;__gsmgnss2_driver.c, 432 :: 		static void transmitCommand( uint8_t *pInput, uint8_t delimiter )
0x194C	0xB084    SUB	SP, SP, #16
0x194E	0xF8CDE000  STR	LR, [SP, #0]
0x1952	0x9002    STR	R0, [SP, #8]
0x1954	0xF88D100C  STRB	R1, [SP, #12]
;__gsmgnss2_driver.c, 434 :: 		while (0 != *pInput)
L___gsmgnss2_driver_transmitCommand23:
0x1958	0x9A02    LDR	R2, [SP, #8]
0x195A	0x7812    LDRB	R2, [R2, #0]
0x195C	0xB1E2    CBZ	R2, L___gsmgnss2_driver_transmitCommand24
;__gsmgnss2_driver.c, 436 :: 		if (0!= f_hfc_active)
0x195E	0x4A14    LDR	R2, [PC, #80]
0x1960	0x7812    LDRB	R2, [R2, #0]
0x1962	0xB182    CBZ	R2, L___gsmgnss2_driver_transmitCommand25
;__gsmgnss2_driver.c, 438 :: 		while (MODULE_BUSY())
L___gsmgnss2_driver_transmitCommand26:
0x1964	0xF7FFF9FC  BL	__gsmgnss2_driver_DCE_getState+0
0x1968	0xB120    CBZ	R0, L___gsmgnss2_driver_transmitCommand28
0x196A	0x2200    MOVS	R2, #0
0x196C	0xB252    SXTB	R2, R2
0x196E	0xF88D2004  STRB	R2, [SP, #4]
0x1972	0xE003    B	L___gsmgnss2_driver_transmitCommand29
L___gsmgnss2_driver_transmitCommand28:
0x1974	0x2201    MOVS	R2, #1
0x1976	0xB252    SXTB	R2, R2
0x1978	0xF88D2004  STRB	R2, [SP, #4]
L___gsmgnss2_driver_transmitCommand29:
0x197C	0xF99D2004  LDRSB	R2, [SP, #4]
0x1980	0xB10A    CBZ	R2, L___gsmgnss2_driver_transmitCommand27
;__gsmgnss2_driver.c, 440 :: 		asm nop;
0x1982	0xBF00    NOP
;__gsmgnss2_driver.c, 441 :: 		}
0x1984	0xE7EE    B	L___gsmgnss2_driver_transmitCommand26
L___gsmgnss2_driver_transmitCommand27:
;__gsmgnss2_driver.c, 442 :: 		}
L___gsmgnss2_driver_transmitCommand25:
;__gsmgnss2_driver.c, 443 :: 		hal_uartWrite(*pInput++);
0x1986	0x9A02    LDR	R2, [SP, #8]
0x1988	0x7812    LDRB	R2, [R2, #0]
0x198A	0xB2D0    UXTB	R0, R2
0x198C	0xF7FFFA44  BL	__gsmgnss2_driver_hal_uartWrite+0
0x1990	0x9A02    LDR	R2, [SP, #8]
0x1992	0x1C52    ADDS	R2, R2, #1
0x1994	0x9202    STR	R2, [SP, #8]
;__gsmgnss2_driver.c, 444 :: 		}
0x1996	0xE7DF    B	L___gsmgnss2_driver_transmitCommand23
L___gsmgnss2_driver_transmitCommand24:
;__gsmgnss2_driver.c, 445 :: 		hal_uartWrite(delimiter);
0x1998	0xF89D000C  LDRB	R0, [SP, #12]
0x199C	0xF7FFFA3C  BL	__gsmgnss2_driver_hal_uartWrite+0
;__gsmgnss2_driver.c, 446 :: 		hal_uartWrite('\n');
0x19A0	0x200A    MOVS	R0, #10
0x19A2	0xF7FFFA39  BL	__gsmgnss2_driver_hal_uartWrite+0
;__gsmgnss2_driver.c, 447 :: 		}
L_end_transmitCommand:
0x19A6	0xF8DDE000  LDR	LR, [SP, #0]
0x19AA	0xB004    ADD	SP, SP, #16
0x19AC	0x4770    BX	LR
0x19AE	0xBF00    NOP
0x19B0	0x020E2000  	__gsmgnss2_driver_f_hfc_active+0
; end of __gsmgnss2_driver_transmitCommand
__gsmgnss2_driver_DCE_getState:
;__gsmgnss2_driver.c, 166 :: 		static bool DCE_getState()
0x0D60	0xB081    SUB	SP, SP, #4
0x0D62	0xF8CDE000  STR	LR, [SP, #0]
;__gsmgnss2_driver.c, 169 :: 		if (0 != hal_gpio_intGet())
0x0D66	0x4C05    LDR	R4, [PC, #20]
0x0D68	0x6824    LDR	R4, [R4, #0]
0x0D6A	0x47A0    BLX	R4
0x0D6C	0xB108    CBZ	R0, L___gsmgnss2_driver_DCE_getState2
;__gsmgnss2_driver.c, 171 :: 		return false;
0x0D6E	0x2000    MOVS	R0, #0
0x0D70	0xE000    B	L_end_DCE_getState
;__gsmgnss2_driver.c, 172 :: 		}
L___gsmgnss2_driver_DCE_getState2:
;__gsmgnss2_driver.c, 175 :: 		return true;
0x0D72	0x2001    MOVS	R0, #1
;__gsmgnss2_driver.c, 178 :: 		}
L_end_DCE_getState:
0x0D74	0xF8DDE000  LDR	LR, [SP, #0]
0x0D78	0xB001    ADD	SP, SP, #4
0x0D7A	0x4770    BX	LR
0x0D7C	0x04242000  	__gsmgnss2_driver_hal_gpio_intGet+0
; end of __gsmgnss2_driver_DCE_getState
easymx_v7_STM32F107VC__getAN_1:
;__em_f107vc_gpio.c, 31 :: 		static uint8_t _getAN_1  () 			{ return GPIOA_IDR.B4 ;  }
0x050C	0x4801    LDR	R0, [PC, #4]
0x050E	0x6800    LDR	R0, [R0, #0]
L_end__getAN_1:
0x0510	0x4770    BX	LR
0x0512	0xBF00    NOP
0x0514	0x01104221  	GPIOA_IDR+0
; end of easymx_v7_STM32F107VC__getAN_1
easymx_v7_STM32F107VC__getRST_1:
;__em_f107vc_gpio.c, 32 :: 		static uint8_t _getRST_1 () 			{ return GPIOC_IDR.B2 ;  }
0x0500	0x4801    LDR	R0, [PC, #4]
0x0502	0x6800    LDR	R0, [R0, #0]
L_end__getRST_1:
0x0504	0x4770    BX	LR
0x0506	0xBF00    NOP
0x0508	0x01084222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getRST_1
easymx_v7_STM32F107VC__getCS_1:
;__em_f107vc_gpio.c, 33 :: 		static uint8_t _getCS_1  () 			{ return GPIOD_IDR.B13;  }
0x0CC0	0x4801    LDR	R0, [PC, #4]
0x0CC2	0x6800    LDR	R0, [R0, #0]
L_end__getCS_1:
0x0CC4	0x4770    BX	LR
0x0CC6	0xBF00    NOP
0x0CC8	0x81344222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getCS_1
easymx_v7_STM32F107VC__getSCK_1:
;__em_f107vc_gpio.c, 34 :: 		static uint8_t _getSCK_1 () 			{ return GPIOC_IDR.B10;  }
0x0CCC	0x4801    LDR	R0, [PC, #4]
0x0CCE	0x6800    LDR	R0, [R0, #0]
L_end__getSCK_1:
0x0CD0	0x4770    BX	LR
0x0CD2	0xBF00    NOP
0x0CD4	0x01284222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getSCK_1
easymx_v7_STM32F107VC__getMISO_1:
;__em_f107vc_gpio.c, 35 :: 		static uint8_t _getMISO_1() 			{ return GPIOC_IDR.B11;  }
0x0CD8	0x4801    LDR	R0, [PC, #4]
0x0CDA	0x6800    LDR	R0, [R0, #0]
L_end__getMISO_1:
0x0CDC	0x4770    BX	LR
0x0CDE	0xBF00    NOP
0x0CE0	0x012C4222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getMISO_1
easymx_v7_STM32F107VC__getMOSI_1:
;__em_f107vc_gpio.c, 36 :: 		static uint8_t _getMOSI_1() 			{ return GPIOC_IDR.B12;  }
0x0C9C	0x4801    LDR	R0, [PC, #4]
0x0C9E	0x6800    LDR	R0, [R0, #0]
L_end__getMOSI_1:
0x0CA0	0x4770    BX	LR
0x0CA2	0xBF00    NOP
0x0CA4	0x01304222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getMOSI_1
easymx_v7_STM32F107VC__getPWM_1:
;__em_f107vc_gpio.c, 37 :: 		static uint8_t _getPWM_1 () 			{ return GPIOA_IDR.B0 ;  }
0x0CA8	0x4801    LDR	R0, [PC, #4]
0x0CAA	0x6800    LDR	R0, [R0, #0]
L_end__getPWM_1:
0x0CAC	0x4770    BX	LR
0x0CAE	0xBF00    NOP
0x0CB0	0x01004221  	GPIOA_IDR+0
; end of easymx_v7_STM32F107VC__getPWM_1
easymx_v7_STM32F107VC__getINT_1:
;__em_f107vc_gpio.c, 38 :: 		static uint8_t _getINT_1 () 			{ return GPIOD_IDR.B10;  }
0x0CB4	0x4801    LDR	R0, [PC, #4]
0x0CB6	0x6800    LDR	R0, [R0, #0]
L_end__getINT_1:
0x0CB8	0x4770    BX	LR
0x0CBA	0xBF00    NOP
0x0CBC	0x81284222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getINT_1
easymx_v7_STM32F107VC__getRX_1:
;__em_f107vc_gpio.c, 39 :: 		static uint8_t _getRX_1  () 			{ return GPIOD_IDR.B9 ;  }
0x0CE4	0x4801    LDR	R0, [PC, #4]
0x0CE6	0x6800    LDR	R0, [R0, #0]
L_end__getRX_1:
0x0CE8	0x4770    BX	LR
0x0CEA	0xBF00    NOP
0x0CEC	0x81244222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getRX_1
easymx_v7_STM32F107VC__getTX_1:
;__em_f107vc_gpio.c, 40 :: 		static uint8_t _getTX_1  () 			{ return GPIOD_IDR.B8 ;  }
0x0CF0	0x4801    LDR	R0, [PC, #4]
0x0CF2	0x6800    LDR	R0, [R0, #0]
L_end__getTX_1:
0x0CF4	0x4770    BX	LR
0x0CF6	0xBF00    NOP
0x0CF8	0x81204222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getTX_1
easymx_v7_STM32F107VC__getSCL_1:
;__em_f107vc_gpio.c, 41 :: 		static uint8_t _getSCL_1 () 			{ return GPIOB_IDR.B6 ;  }
0x0CFC	0x4801    LDR	R0, [PC, #4]
0x0CFE	0x6800    LDR	R0, [R0, #0]
L_end__getSCL_1:
0x0D00	0x4770    BX	LR
0x0D02	0xBF00    NOP
0x0D04	0x81184221  	GPIOB_IDR+0
; end of easymx_v7_STM32F107VC__getSCL_1
easymx_v7_STM32F107VC__getSDA_1:
;__em_f107vc_gpio.c, 42 :: 		static uint8_t _getSDA_1 () 			{ return GPIOB_IDR.B7 ;  }
0x0D08	0x4801    LDR	R0, [PC, #4]
0x0D0A	0x6800    LDR	R0, [R0, #0]
L_end__getSDA_1:
0x0D0C	0x4770    BX	LR
0x0D0E	0xBF00    NOP
0x0D10	0x811C4221  	GPIOB_IDR+0
; end of easymx_v7_STM32F107VC__getSDA_1
easymx_v7_STM32F107VC__getAN_2:
;__em_f107vc_gpio.c, 56 :: 		static uint8_t _getAN_2  ()             { return GPIOA_IDR.B5 ;  }
0x0804	0x4801    LDR	R0, [PC, #4]
0x0806	0x6800    LDR	R0, [R0, #0]
L_end__getAN_2:
0x0808	0x4770    BX	LR
0x080A	0xBF00    NOP
0x080C	0x01144221  	GPIOA_IDR+0
; end of easymx_v7_STM32F107VC__getAN_2
easymx_v7_STM32F107VC__getRST_2:
;__em_f107vc_gpio.c, 57 :: 		static uint8_t _getRST_2 ()             { return GPIOC_IDR.B3 ;  }
0x0A54	0x4801    LDR	R0, [PC, #4]
0x0A56	0x6800    LDR	R0, [R0, #0]
L_end__getRST_2:
0x0A58	0x4770    BX	LR
0x0A5A	0xBF00    NOP
0x0A5C	0x010C4222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getRST_2
easymx_v7_STM32F107VC__getCS_2:
;__em_f107vc_gpio.c, 58 :: 		static uint8_t _getCS_2  ()             { return GPIOD_IDR.B14;  }
0x07F8	0x4801    LDR	R0, [PC, #4]
0x07FA	0x6800    LDR	R0, [R0, #0]
L_end__getCS_2:
0x07FC	0x4770    BX	LR
0x07FE	0xBF00    NOP
0x0800	0x81384222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getCS_2
easymx_v7_STM32F107VC__getSCK_2:
;__em_f107vc_gpio.c, 59 :: 		static uint8_t _getSCK_2 ()             { return GPIOC_IDR.B10;  }
0x07D4	0x4801    LDR	R0, [PC, #4]
0x07D6	0x6800    LDR	R0, [R0, #0]
L_end__getSCK_2:
0x07D8	0x4770    BX	LR
0x07DA	0xBF00    NOP
0x07DC	0x01284222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getSCK_2
easymx_v7_STM32F107VC__getMISO_2:
;__em_f107vc_gpio.c, 60 :: 		static uint8_t _getMISO_2()             { return GPIOC_IDR.B11;  }
0x07E0	0x4801    LDR	R0, [PC, #4]
0x07E2	0x6800    LDR	R0, [R0, #0]
L_end__getMISO_2:
0x07E4	0x4770    BX	LR
0x07E6	0xBF00    NOP
0x07E8	0x012C4222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getMISO_2
easymx_v7_STM32F107VC__getMOSI_2:
;__em_f107vc_gpio.c, 61 :: 		static uint8_t _getMOSI_2()             { return GPIOC_IDR.B12;  }
0x07EC	0x4801    LDR	R0, [PC, #4]
0x07EE	0x6800    LDR	R0, [R0, #0]
L_end__getMOSI_2:
0x07F0	0x4770    BX	LR
0x07F2	0xBF00    NOP
0x07F4	0x01304222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getMOSI_2
easymx_v7_STM32F107VC__getPWM_2:
;__em_f107vc_gpio.c, 62 :: 		static uint8_t _getPWM_2 ()             { return GPIOD_IDR.B12;  }
0x0C84	0x4801    LDR	R0, [PC, #4]
0x0C86	0x6800    LDR	R0, [R0, #0]
L_end__getPWM_2:
0x0C88	0x4770    BX	LR
0x0C8A	0xBF00    NOP
0x0C8C	0x81304222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getPWM_2
easymx_v7_STM32F107VC__getINT_2:
;__em_f107vc_gpio.c, 63 :: 		static uint8_t _getINT_2 ()             { return GPIOD_IDR.B11;  }
0x0C90	0x4801    LDR	R0, [PC, #4]
0x0C92	0x6800    LDR	R0, [R0, #0]
L_end__getINT_2:
0x0C94	0x4770    BX	LR
0x0C96	0xBF00    NOP
0x0C98	0x812C4222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getINT_2
easymx_v7_STM32F107VC__getRX_2:
;__em_f107vc_gpio.c, 64 :: 		static uint8_t _getRX_2  ()             { return GPIOD_IDR.B6 ;  }
0x0A84	0x4801    LDR	R0, [PC, #4]
0x0A86	0x6800    LDR	R0, [R0, #0]
L_end__getRX_2:
0x0A88	0x4770    BX	LR
0x0A8A	0xBF00    NOP
0x0A8C	0x81184222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getRX_2
easymx_v7_STM32F107VC__getTX_2:
;__em_f107vc_gpio.c, 65 :: 		static uint8_t _getTX_2  ()             { return GPIOD_IDR.B5 ;  }
0x0A60	0x4801    LDR	R0, [PC, #4]
0x0A62	0x6800    LDR	R0, [R0, #0]
L_end__getTX_2:
0x0A64	0x4770    BX	LR
0x0A66	0xBF00    NOP
0x0A68	0x81144222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getTX_2
easymx_v7_STM32F107VC__getSCL_2:
;__em_f107vc_gpio.c, 66 :: 		static uint8_t _getSCL_2 ()             { return GPIOB_IDR.B6 ;  }
0x0A6C	0x4801    LDR	R0, [PC, #4]
0x0A6E	0x6800    LDR	R0, [R0, #0]
L_end__getSCL_2:
0x0A70	0x4770    BX	LR
0x0A72	0xBF00    NOP
0x0A74	0x81184221  	GPIOB_IDR+0
; end of easymx_v7_STM32F107VC__getSCL_2
easymx_v7_STM32F107VC__getSDA_2:
;__em_f107vc_gpio.c, 67 :: 		static uint8_t _getSDA_2 ()             { return GPIOB_IDR.B7 ;  }
0x0A78	0x4801    LDR	R0, [PC, #4]
0x0A7A	0x6800    LDR	R0, [R0, #0]
L_end__getSDA_2:
0x0A7C	0x4770    BX	LR
0x0A7E	0xBF00    NOP
0x0A80	0x811C4221  	GPIOB_IDR+0
; end of easymx_v7_STM32F107VC__getSDA_2
__gsmgnss2_driver_hal_uartWrite:
;__hal_stm32.c, 142 :: 		static void hal_uartWrite(uint8_t input)
; input start address is: 0 (R0)
0x0E18	0xB081    SUB	SP, SP, #4
0x0E1A	0xF8CDE000  STR	LR, [SP, #0]
; input end address is: 0 (R0)
; input start address is: 0 (R0)
;__hal_stm32.c, 144 :: 		fp_uartWrite(input);
; input end address is: 0 (R0)
0x0E1E	0x4C03    LDR	R4, [PC, #12]
0x0E20	0x6824    LDR	R4, [R4, #0]
0x0E22	0x47A0    BLX	R4
;__hal_stm32.c, 145 :: 		}
L_end_hal_uartWrite:
0x0E24	0xF8DDE000  LDR	LR, [SP, #0]
0x0E28	0xB001    ADD	SP, SP, #4
0x0E2A	0x4770    BX	LR
0x0E2C	0x04142000  	__gsmgnss2_driver_fp_uartWrite+0
; end of __gsmgnss2_driver_hal_uartWrite
_applicationTask:
;Click_GSM_GNSS_2_STM.c, 107 :: 		void applicationTask()
0x1D90	0xB081    SUB	SP, SP, #4
0x1D92	0xF8CDE000  STR	LR, [SP, #0]
;Click_GSM_GNSS_2_STM.c, 110 :: 		gsmgnss2_process();
0x1D96	0xF7FFFC89  BL	_gsmgnss2_process+0
;Click_GSM_GNSS_2_STM.c, 112 :: 		if (0 == gsmgnss2_chackRing())
0x1D9A	0xF7FFFE79  BL	_gsmgnss2_chackRing+0
0x1D9E	0xB9A0    CBNZ	R0, L_applicationTask2
;Click_GSM_GNSS_2_STM.c, 114 :: 		gsmgnss2_cmdSingle( &GSM_CMD_CLCC[0] );
0x1DA0	0x4813    LDR	R0, [PC, #76]
0x1DA2	0xF7FFFE07  BL	_gsmgnss2_cmdSingle+0
;Click_GSM_GNSS_2_STM.c, 115 :: 		mikrobus_logWrite("--- Call detected ---", _LOG_LINE);
0x1DA6	0x4813    LDR	R0, [PC, #76]
0x1DA8	0x2102    MOVS	R1, #2
0x1DAA	0xF7FFFEE5  BL	_mikrobus_logWrite+0
;Click_GSM_GNSS_2_STM.c, 116 :: 		gsmgnss2_cmdSingle( &GSM_CMD_ATH[0] );
0x1DAE	0x4812    LDR	R0, [PC, #72]
0x1DB0	0xF7FFFE00  BL	_gsmgnss2_cmdSingle+0
;Click_GSM_GNSS_2_STM.c, 117 :: 		Delay_ms( 3000 );
0x1DB4	0xF24507FF  MOVW	R7, #20735
0x1DB8	0xF2C02725  MOVT	R7, #549
0x1DBC	0xBF00    NOP
0x1DBE	0xBF00    NOP
L_applicationTask3:
0x1DC0	0x1E7F    SUBS	R7, R7, #1
0x1DC2	0xD1FD    BNE	L_applicationTask3
0x1DC4	0xBF00    NOP
0x1DC6	0xBF00    NOP
0x1DC8	0xBF00    NOP
;Click_GSM_GNSS_2_STM.c, 118 :: 		}
L_applicationTask2:
;Click_GSM_GNSS_2_STM.c, 120 :: 		if(timerCounter > 5000)
0x1DCA	0x480C    LDR	R0, [PC, #48]
0x1DCC	0x6801    LDR	R1, [R0, #0]
0x1DCE	0xF2413088  MOVW	R0, #5000
0x1DD2	0x4281    CMP	R1, R0
0x1DD4	0xD908    BLS	L_applicationTask5
;Click_GSM_GNSS_2_STM.c, 122 :: 		gsmgnss2_cmdSingle( "AT+CGNSSEQ=\"GGA\"" );
0x1DD6	0x480A    LDR	R0, [PC, #40]
0x1DD8	0xF7FFFDEC  BL	_gsmgnss2_cmdSingle+0
;Click_GSM_GNSS_2_STM.c, 123 :: 		gsmgnss2_cmdSingle( "AT+CGNSINF" );
0x1DDC	0x4809    LDR	R0, [PC, #36]
0x1DDE	0xF7FFFDE9  BL	_gsmgnss2_cmdSingle+0
;Click_GSM_GNSS_2_STM.c, 124 :: 		timerCounter = 0;
0x1DE2	0x2100    MOVS	R1, #0
0x1DE4	0x4805    LDR	R0, [PC, #20]
0x1DE6	0x6001    STR	R1, [R0, #0]
;Click_GSM_GNSS_2_STM.c, 125 :: 		}
L_applicationTask5:
;Click_GSM_GNSS_2_STM.c, 126 :: 		}
L_end_applicationTask:
0x1DE8	0xF8DDE000  LDR	LR, [SP, #0]
0x1DEC	0xB001    ADD	SP, SP, #4
0x1DEE	0x4770    BX	LR
0x1DF0	0x00902000  	Click_GSM_GNSS_2_STM_GSM_CMD_CLCC+0
0x1DF4	0x00982000  	?lstr6_Click_GSM_GNSS_2_STM+0
0x1DF8	0x00AE2000  	Click_GSM_GNSS_2_STM_GSM_CMD_ATH+0
0x1DFC	0x00B42000  	_timerCounter+0
0x1E00	0x00B82000  	?lstr7_Click_GSM_GNSS_2_STM+0
0x1E04	0x00C92000  	?lstr8_Click_GSM_GNSS_2_STM+0
; end of _applicationTask
_gsmgnss2_chackRing:
;__gsmgnss2_driver.c, 812 :: 		uint8_t gsmgnss2_chackRing()
0x1A90	0xB081    SUB	SP, SP, #4
0x1A92	0xF8CDE000  STR	LR, [SP, #0]
;__gsmgnss2_driver.c, 814 :: 		return hal_gpio_pwmGet();
0x1A96	0x4C03    LDR	R4, [PC, #12]
0x1A98	0x6824    LDR	R4, [R4, #0]
0x1A9A	0x47A0    BLX	R4
;__gsmgnss2_driver.c, 815 :: 		}
L_end_gsmgnss2_chackRing:
0x1A9C	0xF8DDE000  LDR	LR, [SP, #0]
0x1AA0	0xB001    ADD	SP, SP, #4
0x1AA2	0x4770    BX	LR
0x1AA4	0x04202000  	__gsmgnss2_driver_hal_gpio_pwmGet+0
; end of _gsmgnss2_chackRing
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 387 :: 		
0x20D0	0xB081    SUB	SP, SP, #4
0x20D2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 390 :: 		
; ulRCC_CR start address is: 8 (R2)
0x20D6	0x4A46    LDR	R2, [PC, #280]
;__Lib_System_105_107.c, 391 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x20D8	0x4B46    LDR	R3, [PC, #280]
;__Lib_System_105_107.c, 392 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x20DA	0x4C47    LDR	R4, [PC, #284]
;__Lib_System_105_107.c, 393 :: 		
; Fosc_kHz start address is: 4 (R1)
0x20DC	0x4947    LDR	R1, [PC, #284]
;__Lib_System_105_107.c, 400 :: 		
0x20DE	0xF64B3080  MOVW	R0, #48000
0x20E2	0x4281    CMP	R1, R0
0x20E4	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 401 :: 		
0x20E6	0x4846    LDR	R0, [PC, #280]
0x20E8	0x6800    LDR	R0, [R0, #0]
0x20EA	0xF0400102  ORR	R1, R0, #2
0x20EE	0x4844    LDR	R0, [PC, #272]
0x20F0	0x6001    STR	R1, [R0, #0]
0x20F2	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 402 :: 		
; Fosc_kHz start address is: 4 (R1)
0x20F4	0xF64550C0  MOVW	R0, #24000
0x20F8	0x4281    CMP	R1, R0
0x20FA	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC236
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 403 :: 		
0x20FC	0x4840    LDR	R0, [PC, #256]
0x20FE	0x6800    LDR	R0, [R0, #0]
0x2100	0xF0400101  ORR	R1, R0, #1
0x2104	0x483E    LDR	R0, [PC, #248]
0x2106	0x6001    STR	R1, [R0, #0]
0x2108	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 405 :: 		
0x210A	0x483D    LDR	R0, [PC, #244]
0x210C	0x6801    LDR	R1, [R0, #0]
0x210E	0xF06F0007  MVN	R0, #7
0x2112	0x4001    ANDS	R1, R0
0x2114	0x483A    LDR	R0, [PC, #232]
0x2116	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC237:
L___Lib_System_105_107_InitialSetUpRCCRCC235:
;__Lib_System_105_107.c, 407 :: 		
0x2118	0xF7FFFEC4  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 409 :: 		
0x211C	0x4839    LDR	R0, [PC, #228]
0x211E	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 410 :: 		
0x2120	0x4839    LDR	R0, [PC, #228]
0x2122	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 411 :: 		
0x2124	0x4839    LDR	R0, [PC, #228]
0x2126	0xEA020100  AND	R1, R2, R0, LSL #0
0x212A	0x4839    LDR	R0, [PC, #228]
0x212C	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 413 :: 		
0x212E	0xF0020001  AND	R0, R2, #1
0x2132	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x2134	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 414 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2136	0x4836    LDR	R0, [PC, #216]
0x2138	0x6800    LDR	R0, [R0, #0]
0x213A	0xF0000002  AND	R0, R0, #2
0x213E	0x2800    CMP	R0, #0
0x2140	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC240
;__Lib_System_105_107.c, 415 :: 		
0x2142	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
L___Lib_System_105_107_InitialSetUpRCCRCC240:
;__Lib_System_105_107.c, 416 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x2144	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC238
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 413 :: 		
0x2146	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 416 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 418 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2148	0xF4023080  AND	R0, R2, #65536
0x214C	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x214E	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 419 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x2150	0x482F    LDR	R0, [PC, #188]
0x2152	0x6800    LDR	R0, [R0, #0]
0x2154	0xF4003000  AND	R0, R0, #131072
0x2158	0x2800    CMP	R0, #0
0x215A	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC243
;__Lib_System_105_107.c, 420 :: 		
0x215C	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
L___Lib_System_105_107_InitialSetUpRCCRCC243:
;__Lib_System_105_107.c, 421 :: 		
; ulRCC_CR end address is: 8 (R2)
0x215E	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC241
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 418 :: 		
0x2160	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 421 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 423 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x2162	0xF0025080  AND	R0, R2, #268435456
0x2166	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 424 :: 		
0x2168	0x4829    LDR	R0, [PC, #164]
0x216A	0x6800    LDR	R0, [R0, #0]
0x216C	0xF0405180  ORR	R1, R0, #268435456
0x2170	0x4827    LDR	R0, [PC, #156]
0x2172	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 425 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x2174	0x4826    LDR	R0, [PC, #152]
0x2176	0x6800    LDR	R0, [R0, #0]
0x2178	0xF0005000  AND	R0, R0, #536870912
0x217C	0x2800    CMP	R0, #0
0x217E	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC246
;__Lib_System_105_107.c, 426 :: 		
0x2180	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
L___Lib_System_105_107_InitialSetUpRCCRCC246:
;__Lib_System_105_107.c, 427 :: 		
; ulRCC_CR end address is: 8 (R2)
0x2182	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC244
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 423 :: 		
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x2184	0xF0026080  AND	R0, R2, #67108864
0x2188	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC258
;__Lib_System_105_107.c, 430 :: 		
0x218A	0x4821    LDR	R0, [PC, #132]
0x218C	0x6800    LDR	R0, [R0, #0]
0x218E	0xF0406180  ORR	R1, R0, #67108864
0x2192	0x481F    LDR	R0, [PC, #124]
0x2194	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x2196	0x4611    MOV	R1, R2
0x2198	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 431 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x219A	0x481D    LDR	R0, [PC, #116]
0x219C	0x6800    LDR	R0, [R0, #0]
0x219E	0xF0006000  AND	R0, R0, #134217728
0x21A2	0x2800    CMP	R0, #0
0x21A4	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC249
;__Lib_System_105_107.c, 432 :: 		
0x21A6	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
L___Lib_System_105_107_InitialSetUpRCCRCC249:
;__Lib_System_105_107.c, 433 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x21A8	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC247
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC258:
;__Lib_System_105_107.c, 429 :: 		
0x21AA	0x4611    MOV	R1, R2
0x21AC	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 433 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 435 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x21AE	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x21B2	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC259
;__Lib_System_105_107.c, 436 :: 		
0x21B4	0x4816    LDR	R0, [PC, #88]
0x21B6	0x6800    LDR	R0, [R0, #0]
0x21B8	0xF0407180  ORR	R1, R0, #16777216
0x21BC	0x4814    LDR	R0, [PC, #80]
0x21BE	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x21C0	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 437 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 4 (R1)
0x21C2	0x4813    LDR	R0, [PC, #76]
0x21C4	0x6800    LDR	R0, [R0, #0]
0x21C6	0xF0007000  AND	R0, R0, #33554432
0x21CA	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 438 :: 		
0x21CC	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 439 :: 		
0x21CE	0x460A    MOV	R2, R1
0x21D0	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC250
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC259:
;__Lib_System_105_107.c, 435 :: 		
;__Lib_System_105_107.c, 439 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 443 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
; ulRCC_CFGR start address is: 8 (R2)
0x21D2	0x480C    LDR	R0, [PC, #48]
0x21D4	0x6800    LDR	R0, [R0, #0]
0x21D6	0xF000010C  AND	R1, R0, #12
0x21DA	0x0090    LSLS	R0, R2, #2
0x21DC	0xF000000C  AND	R0, R0, #12
0x21E0	0x4281    CMP	R1, R0
0x21E2	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC254
;__Lib_System_105_107.c, 444 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x21E4	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC253
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 445 :: 		
L_end_InitialSetUpRCCRCC2:
0x21E6	0xF8DDE000  LDR	LR, [SP, #0]
0x21EA	0xB001    ADD	SP, SP, #4
0x21EC	0x4770    BX	LR
0x21EE	0xBF00    NOP
0x21F0	0x00810501  	#83951745
0x21F4	0x8402001D  	#1934338
0x21F8	0x06440001  	#67140
0x21FC	0x19400001  	#72000
0x2200	0x20004002  	FLASH_ACR+0
0x2204	0x10044002  	RCC_CFGR+0
0x2208	0x102C4002  	RCC_CFGR2+0
0x220C	0xFFFF000F  	#1048575
0x2210	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 360 :: 		
0x1EA4	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 363 :: 		
0x1EA6	0x4815    LDR	R0, [PC, #84]
0x1EA8	0x6800    LDR	R0, [R0, #0]
0x1EAA	0xF0400101  ORR	R1, R0, #1
0x1EAE	0x4813    LDR	R0, [PC, #76]
0x1EB0	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 366 :: 		
0x1EB2	0x4913    LDR	R1, [PC, #76]
0x1EB4	0x4813    LDR	R0, [PC, #76]
0x1EB6	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 369 :: 		
0x1EB8	0x4810    LDR	R0, [PC, #64]
0x1EBA	0x6801    LDR	R1, [R0, #0]
0x1EBC	0x4812    LDR	R0, [PC, #72]
0x1EBE	0x4001    ANDS	R1, R0
0x1EC0	0x480E    LDR	R0, [PC, #56]
0x1EC2	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 372 :: 		
0x1EC4	0x480D    LDR	R0, [PC, #52]
0x1EC6	0x6801    LDR	R1, [R0, #0]
0x1EC8	0xF46F2080  MVN	R0, #262144
0x1ECC	0x4001    ANDS	R1, R0
0x1ECE	0x480B    LDR	R0, [PC, #44]
0x1ED0	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 375 :: 		
0x1ED2	0x480C    LDR	R0, [PC, #48]
0x1ED4	0x6801    LDR	R1, [R0, #0]
0x1ED6	0xF46F00FE  MVN	R0, #8323072
0x1EDA	0x4001    ANDS	R1, R0
0x1EDC	0x4809    LDR	R0, [PC, #36]
0x1EDE	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 378 :: 		
0x1EE0	0x4806    LDR	R0, [PC, #24]
0x1EE2	0x6801    LDR	R1, [R0, #0]
0x1EE4	0xF06F50A0  MVN	R0, #335544320
0x1EE8	0x4001    ANDS	R1, R0
0x1EEA	0x4804    LDR	R0, [PC, #16]
0x1EEC	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
0x1EEE	0xF04F0100  MOV	R1, #0
0x1EF2	0x4806    LDR	R0, [PC, #24]
0x1EF4	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 385 :: 		
L_end_SystemClockSetDefault:
0x1EF6	0xB001    ADD	SP, SP, #4
0x1EF8	0x4770    BX	LR
0x1EFA	0xBF00    NOP
0x1EFC	0x10004002  	RCC_CR+0
0x1F00	0x0000F0FF  	#-251723776
0x1F04	0x10044002  	RCC_CFGR+0
0x1F08	0xFFFFFEF6  	#-17367041
0x1F0C	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 447 :: 		
0x2214	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 448 :: 		
0x2216	0x4902    LDR	R1, [PC, #8]
0x2218	0x4802    LDR	R0, [PC, #8]
0x221A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 449 :: 		
L_end_InitialSetUpFosc:
0x221C	0xB001    ADD	SP, SP, #4
0x221E	0x4770    BX	LR
0x2220	0x19400001  	#72000
0x2224	0x05402000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 311 :: 		
0x20C8	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 312 :: 		
L___GenExcept30:
0x20CA	0xE7FE    B	L___GenExcept30
;__Lib_System_105_107.c, 313 :: 		
L_end___GenExcept:
0x20CC	0xB001    ADD	SP, SP, #4
0x20CE	0x4770    BX	LR
; end of ___GenExcept
0x2504	0xB500    PUSH	(R14)
0x2506	0xF8DFB024  LDR	R11, [PC, #36]
0x250A	0xF8DFA024  LDR	R10, [PC, #36]
0x250E	0xF8DFC024  LDR	R12, [PC, #36]
0x2512	0xF7FFFDA9  BL	8296
0x2516	0xF8DFB020  LDR	R11, [PC, #32]
0x251A	0xF8DFA020  LDR	R10, [PC, #32]
0x251E	0xF8DFC020  LDR	R12, [PC, #32]
0x2522	0xF7FFFDA1  BL	8296
0x2526	0xBD00    POP	(R15)
0x2528	0x4770    BX	LR
0x252A	0xBF00    NOP
0x252C	0x00002000  	#536870912
0x2530	0x00B32000  	#536871091
0x2534	0x22280000  	#8744
0x2538	0x00B42000  	#536871092
0x253C	0x00FB2000  	#536871163
0x2540	0x24800000  	#9344
0x25A0	0xB500    PUSH	(R14)
0x25A2	0xF8DFB010  LDR	R11, [PC, #16]
0x25A6	0xF8DFA010  LDR	R10, [PC, #16]
0x25AA	0xF7FFFD3F  BL	8236
0x25AE	0xBD00    POP	(R15)
0x25B0	0x4770    BX	LR
0x25B2	0xBF00    NOP
0x25B4	0x00002000  	#536870912
0x25B8	0x05542000  	#536872276
_Timer_interrupt:
;click_gsm_gnss_2_timer.h, 27 :: 		void Timer_interrupt() iv IVT_INT_TIM2
0x207C	0xB081    SUB	SP, SP, #4
0x207E	0xF8CDE000  STR	LR, [SP, #0]
;click_gsm_gnss_2_timer.h, 29 :: 		timerCounter++;
0x2082	0x4907    LDR	R1, [PC, #28]
0x2084	0x6808    LDR	R0, [R1, #0]
0x2086	0x1C40    ADDS	R0, R0, #1
0x2088	0x6008    STR	R0, [R1, #0]
;click_gsm_gnss_2_timer.h, 30 :: 		gsmgnss2_tick();
0x208A	0xF7FFFEBD  BL	_gsmgnss2_tick+0
;click_gsm_gnss_2_timer.h, 31 :: 		TIM2_SR.UIF = 0;
0x208E	0x2100    MOVS	R1, #0
0x2090	0xB249    SXTB	R1, R1
0x2092	0x4804    LDR	R0, [PC, #16]
0x2094	0x6001    STR	R1, [R0, #0]
;click_gsm_gnss_2_timer.h, 32 :: 		}
L_end_Timer_interrupt:
0x2096	0xF8DDE000  LDR	LR, [SP, #0]
0x209A	0xB001    ADD	SP, SP, #4
0x209C	0x4770    BX	LR
0x209E	0xBF00    NOP
0x20A0	0x00B42000  	_timerCounter+0
0x20A4	0x02004200  	TIM2_SR+0
; end of _Timer_interrupt
_gsmgnss2_tick:
;__gsmgnss2_driver.c, 612 :: 		void gsmgnss2_tick()
;__gsmgnss2_driver.c, 614 :: 		if (f_watchdog_active)
0x1E08	0x481C    LDR	R0, [PC, #112]
0x1E0A	0x7800    LDRB	R0, [R0, #0]
0x1E0C	0xB1C8    CBZ	R0, L_gsmgnss2_tick52
;__gsmgnss2_driver.c, 616 :: 		if (c_watchdog_timer++ > currentEv.wDogLimit)
0x1E0E	0x481C    LDR	R0, [PC, #112]
0x1E10	0x6802    LDR	R2, [R0, #0]
0x1E12	0x481B    LDR	R0, [PC, #108]
0x1E14	0x6800    LDR	R0, [R0, #0]
0x1E16	0x1C41    ADDS	R1, R0, #1
0x1E18	0x4819    LDR	R0, [PC, #100]
0x1E1A	0x6001    STR	R1, [R0, #0]
0x1E1C	0x4819    LDR	R0, [PC, #100]
0x1E1E	0x6800    LDR	R0, [R0, #0]
0x1E20	0x4282    CMP	R2, R0
0x1E22	0xD90E    BLS	L_gsmgnss2_tick53
;__gsmgnss2_driver.c, 618 :: 		f_watchdog_active = false;
0x1E24	0x2100    MOVS	R1, #0
0x1E26	0x4815    LDR	R0, [PC, #84]
0x1E28	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 619 :: 		c_watchdog_timer = 0;
0x1E2A	0x2100    MOVS	R1, #0
0x1E2C	0x4814    LDR	R0, [PC, #80]
0x1E2E	0x6001    STR	R1, [R0, #0]
;__gsmgnss2_driver.c, 620 :: 		rxBuff.storage[rxBuff.idx] = 0;
0x1E30	0x4815    LDR	R0, [PC, #84]
0x1E32	0x8801    LDRH	R1, [R0, #0]
0x1E34	0x4815    LDR	R0, [PC, #84]
0x1E36	0x1841    ADDS	R1, R0, R1
0x1E38	0x2000    MOVS	R0, #0
0x1E3A	0x7008    STRB	R0, [R1, #0]
;__gsmgnss2_driver.c, 621 :: 		f_wdog_timeout = true;
0x1E3C	0x2101    MOVS	R1, #1
0x1E3E	0x4814    LDR	R0, [PC, #80]
0x1E40	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 622 :: 		}
L_gsmgnss2_tick53:
;__gsmgnss2_driver.c, 623 :: 		}
L_gsmgnss2_tick52:
;__gsmgnss2_driver.c, 624 :: 		if (f_timer_active)
0x1E42	0x4814    LDR	R0, [PC, #80]
0x1E44	0x7800    LDRB	R0, [R0, #0]
0x1E46	0xB1C0    CBZ	R0, L_gsmgnss2_tick54
;__gsmgnss2_driver.c, 626 :: 		if (c_timer++ > _GSMGNSS2_TIMER_LIMIT)
0x1E48	0x4813    LDR	R0, [PC, #76]
0x1E4A	0x6802    LDR	R2, [R0, #0]
0x1E4C	0x4812    LDR	R0, [PC, #72]
0x1E4E	0x6800    LDR	R0, [R0, #0]
0x1E50	0x1C41    ADDS	R1, R0, #1
0x1E52	0x4811    LDR	R0, [PC, #68]
0x1E54	0x6001    STR	R1, [R0, #0]
0x1E56	0x4811    LDR	R0, [PC, #68]
0x1E58	0x4282    CMP	R2, R0
0x1E5A	0xD90E    BLS	L_gsmgnss2_tick55
;__gsmgnss2_driver.c, 628 :: 		f_timer_active = false;
0x1E5C	0x2100    MOVS	R1, #0
0x1E5E	0x480D    LDR	R0, [PC, #52]
0x1E60	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 629 :: 		c_timer = 0;
0x1E62	0x2100    MOVS	R1, #0
0x1E64	0x480C    LDR	R0, [PC, #48]
0x1E66	0x6001    STR	R1, [R0, #0]
;__gsmgnss2_driver.c, 630 :: 		rxBuff.storage[rxBuff.idx] = 0;
0x1E68	0x4807    LDR	R0, [PC, #28]
0x1E6A	0x8801    LDRH	R1, [R0, #0]
0x1E6C	0x4807    LDR	R0, [PC, #28]
0x1E6E	0x1841    ADDS	R1, R0, R1
0x1E70	0x2000    MOVS	R0, #0
0x1E72	0x7008    STRB	R0, [R1, #0]
;__gsmgnss2_driver.c, 631 :: 		f_response_ready = true;
0x1E74	0x2101    MOVS	R1, #1
0x1E76	0x480A    LDR	R0, [PC, #40]
0x1E78	0x7001    STRB	R1, [R0, #0]
;__gsmgnss2_driver.c, 632 :: 		}
L_gsmgnss2_tick55:
;__gsmgnss2_driver.c, 633 :: 		}
L_gsmgnss2_tick54:
;__gsmgnss2_driver.c, 634 :: 		}
L_end_gsmgnss2_tick:
0x1E7A	0x4770    BX	LR
0x1E7C	0x01072000  	__gsmgnss2_driver_f_watchdog_active+0
0x1E80	0x04302000  	__gsmgnss2_driver_c_watchdog_timer+0
0x1E84	0x04382000  	__gsmgnss2_driver_currentEv+4
0x1E88	0x010C2000  	__gsmgnss2_driver_rxBuff+0
0x1E8C	0x010E2000  	__gsmgnss2_driver_rxBuff+2
0x1E90	0x00B32000  	__gsmgnss2_driver_f_wdog_timeout+0
0x1E94	0x01052000  	__gsmgnss2_driver_f_timer_active+0
0x1E98	0x01082000  	__gsmgnss2_driver_c_timer+0
0x1E9C	0x00050000  	__GSMGNSS2_TIMER_LIMIT
0x1EA0	0x00FB2000  	__gsmgnss2_driver_f_response_ready+0
; end of _gsmgnss2_tick
;__Lib_System_105_107.c,452 :: __Lib_System_105_107_ADCPrescTable [4]
0x1F74	0x08060402 ;__Lib_System_105_107_ADCPrescTable+0
; end of __Lib_System_105_107_ADCPrescTable
;,0 :: _initBlock_1 [24]
; Containing: ?ICS?lstr1_Click_GSM_GNSS_2_STM [21]
;             ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_AT [3]
0x2228	0x2D2D2D2D ;_initBlock_1+0 : ?ICS?lstr1_Click_GSM_GNSS_2_STM at 0x2228
0x222C	0x61745320 ;_initBlock_1+4
0x2230	0x49207472 ;_initBlock_1+8
0x2234	0x2074696E ;_initBlock_1+12
0x2238	0x2D2D2D2D ;_initBlock_1+16
0x223C	0x00544100 ;_initBlock_1+20 : ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_AT at 0x223D
; end of _initBlock_1
;Click_GSM_GNSS_2_STM.c,0 :: ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_ATI [4]
0x2240	0x00495441 ;?ICSClick_GSM_GNSS_2_STM_GSM_CMD_ATI+0
; end of ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_ATI
;,0 :: _initBlock_3 [50]
; Containing: ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_ATE [5]
;             ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_IFC [12]
;             ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_CMGF [10]
;             ?ICS?lstr2_Click_GSM_GNSS_2_STM [23]
0x2244	0x30455441 ;_initBlock_3+0 : ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_ATE at 0x2244
0x2248	0x2B544100 ;_initBlock_3+4 : ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_IFC at 0x2249
0x224C	0x3D434649 ;_initBlock_3+8
0x2250	0x00322C32 ;_initBlock_3+12
0x2254	0x2B544100 ;_initBlock_3+16 : ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_CMGF at 0x2255
0x2258	0x46474D43 ;_initBlock_3+20
0x225C	0x2D00313D ;_initBlock_3+24 : ?ICS?lstr2_Click_GSM_GNSS_2_STM at 0x225F
0x2260	0x202D2D2D ;_initBlock_3+28
0x2264	0x204D5347 ;_initBlock_3+32
0x2268	0x74696E49 ;_initBlock_3+36
0x226C	0x6E6F6420 ;_initBlock_3+40
0x2270	0x2D2D2065 ;_initBlock_3+44
0x2274	0x002D ;_initBlock_3+48
; end of _initBlock_3
;,0 :: _initBlock_4 [66]
; Containing: ?ICS?lstr3_Click_GSM_GNSS_2_STM [13]
;             ?ICS?lstr4_Click_GSM_GNSS_2_STM [24]
;             ?ICS?lstr5_Click_GSM_GNSS_2_STM [29]
0x2276	0x432B5441 ;_initBlock_4+0 : ?ICS?lstr3_Click_GSM_GNSS_2_STM at 0x2276
0x227A	0x50534E47 ;_initBlock_4+4
0x227E	0x313D5257 ;_initBlock_4+8
0x2282	0x2D2D2D00 ;_initBlock_4+12 : ?ICS?lstr4_Click_GSM_GNSS_2_STM at 0x2283
0x2286	0x4E47202D ;_initBlock_4+16
0x228A	0x49205353 ;_initBlock_4+20
0x228E	0x2074696E ;_initBlock_4+24
0x2292	0x656E6F64 ;_initBlock_4+28
0x2296	0x2D2D2D20 ;_initBlock_4+32
0x229A	0x2D2D2D00 ;_initBlock_4+36 : ?ICS?lstr5_Click_GSM_GNSS_2_STM at 0x229B
0x229E	0x6C50202D ;_initBlock_4+40
0x22A2	0x65736165 ;_initBlock_4+44
0x22A6	0x6163202C ;_initBlock_4+48
0x22AA	0x6D206C6C ;_initBlock_4+52
0x22AE	0x293A2065 ;_initBlock_4+56
0x22B2	0x2D2D2D20 ;_initBlock_4+60
0x22B6	0x002D ;_initBlock_4+64
; end of _initBlock_4
;Click_GSM_GNSS_2_STM.c,0 :: ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_CLCC [8]
0x22B8	0x432B5441 ;?ICSClick_GSM_GNSS_2_STM_GSM_CMD_CLCC+0
0x22BC	0x0043434C ;?ICSClick_GSM_GNSS_2_STM_GSM_CMD_CLCC+4
; end of ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_CLCC
;Click_GSM_GNSS_2_STM.c,0 :: ?ICS?lstr6_Click_GSM_GNSS_2_STM [22]
0x22C0	0x202D2D2D ;?ICS?lstr6_Click_GSM_GNSS_2_STM+0
0x22C4	0x6C6C6143 ;?ICS?lstr6_Click_GSM_GNSS_2_STM+4
0x22C8	0x74656420 ;?ICS?lstr6_Click_GSM_GNSS_2_STM+8
0x22CC	0x65746365 ;?ICS?lstr6_Click_GSM_GNSS_2_STM+12
0x22D0	0x2D2D2064 ;?ICS?lstr6_Click_GSM_GNSS_2_STM+16
0x22D4	0x002D ;?ICS?lstr6_Click_GSM_GNSS_2_STM+20
; end of ?ICS?lstr6_Click_GSM_GNSS_2_STM
;Click_GSM_GNSS_2_STM.c,0 :: ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_ATH [4]
0x22D6	0x00485441 ;?ICSClick_GSM_GNSS_2_STM_GSM_CMD_ATH+0
; end of ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_ATH
;__gsmgnss2_driver.c,0 :: ?ICS?lstr1___gsmgnss2_driver [1]
0x22DA	0x00 ;?ICS?lstr1___gsmgnss2_driver+0
; end of ?ICS?lstr1___gsmgnss2_driver
;__Lib_GPIO_32F10x_Defs.c,732 :: __GPIO_MODULE_USART2_PD56 [108]
0x22DC	0x00000035 ;__GPIO_MODULE_USART2_PD56+0
0x22E0	0x00000036 ;__GPIO_MODULE_USART2_PD56+4
0x22E4	0xFFFFFFFF ;__GPIO_MODULE_USART2_PD56+8
0x22E8	0x00000000 ;__GPIO_MODULE_USART2_PD56+12
0x22EC	0x00000000 ;__GPIO_MODULE_USART2_PD56+16
0x22F0	0x00000000 ;__GPIO_MODULE_USART2_PD56+20
0x22F4	0x00000000 ;__GPIO_MODULE_USART2_PD56+24
0x22F8	0x00000000 ;__GPIO_MODULE_USART2_PD56+28
0x22FC	0x00000000 ;__GPIO_MODULE_USART2_PD56+32
0x2300	0x00000000 ;__GPIO_MODULE_USART2_PD56+36
0x2304	0x00000000 ;__GPIO_MODULE_USART2_PD56+40
0x2308	0x00000000 ;__GPIO_MODULE_USART2_PD56+44
0x230C	0x00000000 ;__GPIO_MODULE_USART2_PD56+48
0x2310	0x00000818 ;__GPIO_MODULE_USART2_PD56+52
0x2314	0x00000018 ;__GPIO_MODULE_USART2_PD56+56
0x2318	0x00000000 ;__GPIO_MODULE_USART2_PD56+60
0x231C	0x00000000 ;__GPIO_MODULE_USART2_PD56+64
0x2320	0x00000000 ;__GPIO_MODULE_USART2_PD56+68
0x2324	0x00000000 ;__GPIO_MODULE_USART2_PD56+72
0x2328	0x00000000 ;__GPIO_MODULE_USART2_PD56+76
0x232C	0x00000000 ;__GPIO_MODULE_USART2_PD56+80
0x2330	0x00000000 ;__GPIO_MODULE_USART2_PD56+84
0x2334	0x00000000 ;__GPIO_MODULE_USART2_PD56+88
0x2338	0x00000000 ;__GPIO_MODULE_USART2_PD56+92
0x233C	0x00000000 ;__GPIO_MODULE_USART2_PD56+96
0x2340	0x00000000 ;__GPIO_MODULE_USART2_PD56+100
0x2344	0x08000008 ;__GPIO_MODULE_USART2_PD56+104
; end of __GPIO_MODULE_USART2_PD56
;__Lib_GPIO_32F10x_Defs.c,712 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x2348	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x234C	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x2350	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x2354	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x2358	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x235C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x2360	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x2364	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x2368	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x236C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x2370	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x2374	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x2378	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x237C	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x2380	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x2384	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x2388	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x238C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x2390	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x2394	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x2398	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x239C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x23A0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x23A4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x23A8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x23AC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x23B0	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F10x_Defs.c,747 :: __GPIO_MODULE_USART3_PD89 [108]
0x23B4	0x00000038 ;__GPIO_MODULE_USART3_PD89+0
0x23B8	0x00000039 ;__GPIO_MODULE_USART3_PD89+4
0x23BC	0xFFFFFFFF ;__GPIO_MODULE_USART3_PD89+8
0x23C0	0x00000000 ;__GPIO_MODULE_USART3_PD89+12
0x23C4	0x00000000 ;__GPIO_MODULE_USART3_PD89+16
0x23C8	0x00000000 ;__GPIO_MODULE_USART3_PD89+20
0x23CC	0x00000000 ;__GPIO_MODULE_USART3_PD89+24
0x23D0	0x00000000 ;__GPIO_MODULE_USART3_PD89+28
0x23D4	0x00000000 ;__GPIO_MODULE_USART3_PD89+32
0x23D8	0x00000000 ;__GPIO_MODULE_USART3_PD89+36
0x23DC	0x00000000 ;__GPIO_MODULE_USART3_PD89+40
0x23E0	0x00000000 ;__GPIO_MODULE_USART3_PD89+44
0x23E4	0x00000000 ;__GPIO_MODULE_USART3_PD89+48
0x23E8	0x00000818 ;__GPIO_MODULE_USART3_PD89+52
0x23EC	0x00000018 ;__GPIO_MODULE_USART3_PD89+56
0x23F0	0x00000000 ;__GPIO_MODULE_USART3_PD89+60
0x23F4	0x00000000 ;__GPIO_MODULE_USART3_PD89+64
0x23F8	0x00000000 ;__GPIO_MODULE_USART3_PD89+68
0x23FC	0x00000000 ;__GPIO_MODULE_USART3_PD89+72
0x2400	0x00000000 ;__GPIO_MODULE_USART3_PD89+76
0x2404	0x00000000 ;__GPIO_MODULE_USART3_PD89+80
0x2408	0x00000000 ;__GPIO_MODULE_USART3_PD89+84
0x240C	0x00000000 ;__GPIO_MODULE_USART3_PD89+88
0x2410	0x00000000 ;__GPIO_MODULE_USART3_PD89+92
0x2414	0x00000000 ;__GPIO_MODULE_USART3_PD89+96
0x2418	0x00000000 ;__GPIO_MODULE_USART3_PD89+100
0x241C	0x08140030 ;__GPIO_MODULE_USART3_PD89+104
; end of __GPIO_MODULE_USART3_PD89
;easymx_v7_STM32F107VC.c,47 :: __MIKROBUS1_GPIO [96]
0x2420	0x00001009 ;__MIKROBUS1_GPIO+0
0x2424	0x00000F65 ;__MIKROBUS1_GPIO+4
0x2428	0x00000F1D ;__MIKROBUS1_GPIO+8
0x242C	0x00000F29 ;__MIKROBUS1_GPIO+12
0x2430	0x00000F05 ;__MIKROBUS1_GPIO+16
0x2434	0x00000F11 ;__MIKROBUS1_GPIO+20
0x2438	0x00000F4D ;__MIKROBUS1_GPIO+24
0x243C	0x00000F59 ;__MIKROBUS1_GPIO+28
0x2440	0x00000F35 ;__MIKROBUS1_GPIO+32
0x2444	0x00000F41 ;__MIKROBUS1_GPIO+36
0x2448	0x00001109 ;__MIKROBUS1_GPIO+40
0x244C	0x00001115 ;__MIKROBUS1_GPIO+44
0x2450	0x0000050D ;__MIKROBUS1_GPIO+48
0x2454	0x00000501 ;__MIKROBUS1_GPIO+52
0x2458	0x00000CC1 ;__MIKROBUS1_GPIO+56
0x245C	0x00000CCD ;__MIKROBUS1_GPIO+60
0x2460	0x00000CD9 ;__MIKROBUS1_GPIO+64
0x2464	0x00000C9D ;__MIKROBUS1_GPIO+68
0x2468	0x00000CA9 ;__MIKROBUS1_GPIO+72
0x246C	0x00000CB5 ;__MIKROBUS1_GPIO+76
0x2470	0x00000CE5 ;__MIKROBUS1_GPIO+80
0x2474	0x00000CF1 ;__MIKROBUS1_GPIO+84
0x2478	0x00000CFD ;__MIKROBUS1_GPIO+88
0x247C	0x00000D09 ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
;Click_GSM_GNSS_2_STM.c,0 :: ?ICS_timerCounter [4]
0x2480	0x00000000 ;?ICS_timerCounter+0
; end of ?ICS_timerCounter
;,0 :: _initBlock_14 [28]
; Containing: ?ICS?lstr7_Click_GSM_GNSS_2_STM [17]
;             ?ICS?lstr8_Click_GSM_GNSS_2_STM [11]
0x2484	0x432B5441 ;_initBlock_14+0 : ?ICS?lstr7_Click_GSM_GNSS_2_STM at 0x2484
0x2488	0x53534E47 ;_initBlock_14+4
0x248C	0x223D5145 ;_initBlock_14+8
0x2490	0x22414747 ;_initBlock_14+12
0x2494	0x2B544100 ;_initBlock_14+16 : ?ICS?lstr8_Click_GSM_GNSS_2_STM at 0x2495
0x2498	0x534E4743 ;_initBlock_14+20
0x249C	0x00464E49 ;_initBlock_14+24
; end of _initBlock_14
;,0 :: _initBlock_15 [56]
; Containing: ?ICS__gsmgnss2_driver_LUT_START_MARK [21]
;             ?ICS__gsmgnss2_driver_LUT_END_MARK [18]
;             ?ICS__gsmgnss2_driver_createEvent_tmp_L0 [17]
0x24A0	0x2B000000 ;_initBlock_15+0 : ?ICS__gsmgnss2_driver_LUT_START_MARK at 0x24A0
0x24A4	0x00230000 ;_initBlock_15+4
0x24A8	0x00002400 ;_initBlock_15+8
0x24AC	0x26005C25 ;_initBlock_15+12
0x24B0	0x00000000 ;_initBlock_15+16
0x24B4	0x00000000 ;_initBlock_15+20 : ?ICS__gsmgnss2_driver_LUT_END_MARK at 0x24B5
0x24B8	0x3F003F3D ;_initBlock_15+24
0x24BC	0x003D0000 ;_initBlock_15+28
0x24C0	0x00003A00 ;_initBlock_15+32
0x24C4	0x0000000D ;_initBlock_15+36 : ?ICS__gsmgnss2_driver_createEvent_tmp_L0 at 0x24C7
0x24C8	0x00000000 ;_initBlock_15+40
0x24CC	0x00000000 ;_initBlock_15+44
0x24D0	0x00000000 ;_initBlock_15+48
0x24D4	0x00000000 ;_initBlock_15+52
; end of _initBlock_15
;Click_GSM_GNSS_2_STM.c,8 :: __GSMGNSS2_UART_CFG [16]
0x24D8	0x00002580 ;__GSMGNSS2_UART_CFG+0
0x24DC	0x00000000 ;__GSMGNSS2_UART_CFG+4
0x24E0	0x00000000 ;__GSMGNSS2_UART_CFG+8
0x24E4	0x00000000 ;__GSMGNSS2_UART_CFG+12
; end of __GSMGNSS2_UART_CFG
;__Lib_System_105_107.c,451 :: __Lib_System_105_107_APBAHBPrescTable [16]
0x24E8	0x00000000 ;__Lib_System_105_107_APBAHBPrescTable+0
0x24EC	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+4
0x24F0	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+8
0x24F4	0x09080706 ;__Lib_System_105_107_APBAHBPrescTable+12
; end of __Lib_System_105_107_APBAHBPrescTable
;easymx_v7_STM32F107VC.c,15 :: __MIKROBUS1_UART [12]
0x24F8	0x00000F71 ;__MIKROBUS1_UART+0
0x24FC	0x00000785 ;__MIKROBUS1_UART+4
0x2500	0x0000079D ;__MIKROBUS1_UART+8
; end of __MIKROBUS1_UART
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150      [12]    _Get_Fosc_kHz
0x015C     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x01F4     [140]    _GPIO_Clk_Enable
0x0280      [90]    __gsmgnss2_driver__strncmp
0x02DC      [34]    __gsmgnss2_driver__strlen
0x0300     [272]    _GPIO_Alternate_Function_Enable
0x0410     [168]    _RCC_GetClocksFrequency
0x04B8      [22]    __Lib_UART_123_45_UARTx_Read
0x04D0      [12]    __Lib_UART_123_45_UARTx_Data_Ready
0x04DC      [12]    __Lib_UART_123_45_UARTx_Tx_Idle
0x04E8      [24]    _UART4_Tx_Idle
0x0500      [12]    easymx_v7_STM32F107VC__getRST_1
0x050C      [12]    easymx_v7_STM32F107VC__getAN_1
0x0518      [24]    _UART5_Read
0x0530      [88]    __gsmgnss2_driver_locateHandler
0x0588      [50]    __gsmgnss2_driver__strncpy
0x05BC     [190]    __gsmgnss2_driver_searchLut
0x067C      [24]    _UART5_Data_Ready
0x0694      [24]    _UART5_Tx_Idle
0x06AC      [24]    _UART2_Read
0x06C4      [24]    _UART2_Data_Ready
0x06DC      [24]    _UART1_Tx_Idle
0x06F4      [24]    _UART1_Read
0x070C      [24]    _UART1_Data_Ready
0x0724      [24]    _UART2_Tx_Idle
0x073C      [24]    _UART4_Read
0x0754      [24]    _UART4_Data_Ready
0x076C      [24]    _UART3_Tx_Idle
0x0784      [24]    _UART3_Read
0x079C      [24]    _UART3_Data_Ready
0x07B4      [30]    __Lib_UART_123_45_UARTx_Write
0x07D4      [12]    easymx_v7_STM32F107VC__getSCK_2
0x07E0      [12]    easymx_v7_STM32F107VC__getMISO_2
0x07EC      [12]    easymx_v7_STM32F107VC__getMOSI_2
0x07F8      [12]    easymx_v7_STM32F107VC__getCS_2
0x0804      [12]    easymx_v7_STM32F107VC__getAN_2
0x0810     [580]    __Lib_UART_123_45_UARTx_Init_Advanced
0x0A54      [12]    easymx_v7_STM32F107VC__getRST_2
0x0A60      [12]    easymx_v7_STM32F107VC__getTX_2
0x0A6C      [12]    easymx_v7_STM32F107VC__getSCL_2
0x0A78      [12]    easymx_v7_STM32F107VC__getSDA_2
0x0A84      [12]    easymx_v7_STM32F107VC__getRX_2
0x0A90     [500]    _GPIO_Config
0x0C84      [12]    easymx_v7_STM32F107VC__getPWM_2
0x0C90      [12]    easymx_v7_STM32F107VC__getINT_2
0x0C9C      [12]    easymx_v7_STM32F107VC__getMOSI_1
0x0CA8      [12]    easymx_v7_STM32F107VC__getPWM_1
0x0CB4      [12]    easymx_v7_STM32F107VC__getINT_1
0x0CC0      [12]    easymx_v7_STM32F107VC__getCS_1
0x0CCC      [12]    easymx_v7_STM32F107VC__getSCK_1
0x0CD8      [12]    easymx_v7_STM32F107VC__getMISO_1
0x0CE4      [12]    easymx_v7_STM32F107VC__getRX_1
0x0CF0      [12]    easymx_v7_STM32F107VC__getTX_1
0x0CFC      [12]    easymx_v7_STM32F107VC__getSCL_1
0x0D08      [12]    easymx_v7_STM32F107VC__getSDA_1
0x0D14      [12]    easymx_v7_STM32F107VC__setSDA_2
0x0D20      [28]    __gsmgnss2_driver_hal_uartReady
0x0D3C      [12]    easymx_v7_STM32F107VC__setSCL_2
0x0D48      [12]    easymx_v7_STM32F107VC__setRX_2
0x0D54      [12]    easymx_v7_STM32F107VC__setTX_2
0x0D60      [32]    __gsmgnss2_driver_DCE_getState
0x0D80      [28]    __gsmgnss2_driver_hal_uartRead
0x0D9C     [124]    _gsmgnss2_putc
0x0E18      [24]    __gsmgnss2_driver_hal_uartWrite
0x0E30     [212]    __gsmgnss2_driver_createEvent
0x0F04      [12]    easymx_v7_STM32F107VC__setMISO_1
0x0F10      [12]    easymx_v7_STM32F107VC__setMOSI_1
0x0F1C      [12]    easymx_v7_STM32F107VC__setCS_1
0x0F28      [12]    easymx_v7_STM32F107VC__setSCK_1
0x0F34      [12]    easymx_v7_STM32F107VC__setRX_1
0x0F40      [12]    easymx_v7_STM32F107VC__setTX_1
0x0F4C      [12]    easymx_v7_STM32F107VC__setPWM_1
0x0F58      [12]    easymx_v7_STM32F107VC__setINT_1
0x0F64      [12]    easymx_v7_STM32F107VC__setRST_1
0x0F70      [28]    _UART3_Write
0x0F8C      [28]    _UART2_Write
0x0FA8      [28]    _UART4_Write
0x0FC4      [28]    _UART5_Write
0x0FE0      [40]    _UART2_Init_Advanced
0x1008      [12]    easymx_v7_STM32F107VC__setAN_1
0x1014      [28]    _UART1_Write
0x1030      [40]    _UART1_Init_Advanced
0x1058      [24]    _GPIO_Digital_Input
0x1070      [28]    _GPIO_Digital_Output
0x108C      [40]    _UART3_Init_Advanced
0x10B4      [12]    easymx_v7_STM32F107VC__setMISO_2
0x10C0      [12]    easymx_v7_STM32F107VC__setINT_2
0x10CC      [12]    easymx_v7_STM32F107VC__setPWM_2
0x10D8      [12]    easymx_v7_STM32F107VC__setMOSI_2
0x10E4      [12]    easymx_v7_STM32F107VC__setRST_2
0x10F0      [12]    easymx_v7_STM32F107VC__setCS_2
0x10FC      [12]    easymx_v7_STM32F107VC__setAN_2
0x1108      [12]    easymx_v7_STM32F107VC__setSCL_1
0x1114      [12]    easymx_v7_STM32F107VC__setSDA_1
0x1120      [12]    easymx_v7_STM32F107VC__setSCK_2
0x112C     [440]    easymx_v7_STM32F107VC__gpioInit_1
0x12E4     [440]    easymx_v7_STM32F107VC__gpioInit_2
0x149C      [56]    easymx_v7_STM32F107VC__uartInit_2
0x14D4      [56]    easymx_v7_STM32F107VC__uartInit_1
0x150C      [56]    easymx_v7_STM32F107VC__log_initUartA
0x1544      [56]    easymx_v7_STM32F107VC__log_init2
0x157C      [56]    easymx_v7_STM32F107VC__log_init1
0x15B4      [32]    easymx_v7_STM32F107VC__log_write
0x15D4      [56]    easymx_v7_STM32F107VC__log_initUartB
0x160C      [40]    __gsmgnss2_driver_DTE_setState
0x1634      [46]    __gsmgnss2_driver_generateHash
0x1664      [72]    __gsmgnss2_driver_hal_gpioMap
0x16AC     [404]    _gsmgnss2_process
0x1840      [24]    _Delay_1sec
0x1858      [20]    _gsmgnss_default_handler
0x186C      [46]    __gsmgnss2_driver__strcpy
0x189C      [40]    __gsmgnss2_driver_hal_uartMap
0x18C4     [120]    _NVIC_IntEnable
0x193C      [14]    _EnableInterrupts
0x194C     [104]    __gsmgnss2_driver_transmitCommand
0x19B4     [152]    _gsmgnss2_cmdSingle
0x1A4C      [66]    _mikrobus_gpioInit
0x1A90      [24]    _gsmgnss2_chackRing
0x1AA8     [148]    _gsmgnss2_modulePower
0x1B3C      [12]    _gsmgnss2_hfcEnable
0x1B48      [46]    _mikrobus_uartInit
0x1B78     [112]    _mikrobus_logWrite
0x1BE8     [236]    _gsmgnss2_coreInit
0x1CD4      [28]    _gsmgnss2_uartDriverInit
0x1CF0      [88]    Click_GSM_GNSS_2_STM_gsmgnss2_configTimer
0x1D48      [70]    _mikrobus_logInit
0x1D90     [120]    _applicationTask
0x1E08     [156]    _gsmgnss2_tick
0x1EA4     [108]    __Lib_System_105_107_SystemClockSetDefault
0x1F10     [100]    _systemInit
0x1F78     [180]    _applicationInit
0x202C      [58]    ___FillZeros
0x2068      [20]    ___CC2DW
0x207C      [44]    _Timer_interrupt
0x20A8      [32]    _main
0x20C8       [8]    ___GenExcept
0x20D0     [324]    __Lib_System_105_107_InitialSetUpRCCRCC2
0x2214      [20]    __Lib_System_105_107_InitialSetUpFosc
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000      [21]    ?lstr1_Click_GSM_GNSS_2_STM
0x20000015       [3]    Click_GSM_GNSS_2_STM_GSM_CMD_AT
0x20000018       [4]    Click_GSM_GNSS_2_STM_GSM_CMD_ATI
0x2000001C       [5]    Click_GSM_GNSS_2_STM_GSM_CMD_ATE
0x20000021      [12]    Click_GSM_GNSS_2_STM_GSM_CMD_IFC
0x2000002D      [10]    Click_GSM_GNSS_2_STM_GSM_CMD_CMGF
0x20000037      [23]    ?lstr2_Click_GSM_GNSS_2_STM
0x2000004E      [13]    ?lstr3_Click_GSM_GNSS_2_STM
0x2000005B      [24]    ?lstr4_Click_GSM_GNSS_2_STM
0x20000073      [29]    ?lstr5_Click_GSM_GNSS_2_STM
0x20000090       [8]    Click_GSM_GNSS_2_STM_GSM_CMD_CLCC
0x20000098      [22]    ?lstr6_Click_GSM_GNSS_2_STM
0x200000AE       [4]    Click_GSM_GNSS_2_STM_GSM_CMD_ATH
0x200000B2       [1]    ?lstr1___gsmgnss2_driver
0x200000B3       [1]    __gsmgnss2_driver_f_wdog_timeout
0x200000B4       [4]    _timerCounter
0x200000B8      [17]    ?lstr7_Click_GSM_GNSS_2_STM
0x200000C9      [11]    ?lstr8_Click_GSM_GNSS_2_STM
0x200000D4      [21]    __gsmgnss2_driver_LUT_START_MARK
0x200000E9      [18]    __gsmgnss2_driver_LUT_END_MARK
0x200000FB       [1]    __gsmgnss2_driver_f_response_ready
0x200000FC       [4]    _logger
0x20000100       [4]    __gsmgnss2_driver_fp_uartRead
0x20000104       [1]    __gsmgnss2_driver_f_sequence_active
0x20000105       [1]    __gsmgnss2_driver_f_timer_active
0x20000106       [1]    __gsmgnss2_driver_f_buffer_warning
0x20000107       [1]    __gsmgnss2_driver_f_watchdog_active
0x20000108       [4]    __gsmgnss2_driver_c_timer
0x2000010C     [258]    __gsmgnss2_driver_rxBuff
0x2000020E       [1]    __gsmgnss2_driver_f_hfc_active
0x20000210     [516]    __gsmgnss2_driver_hdlBuff
0x20000414       [4]    __gsmgnss2_driver_fp_uartWrite
0x20000418       [4]    __gsmgnss2_driver_fp_uartReady
0x2000041C       [4]    __gsmgnss2_driver_hal_gpio_anGet
0x20000420       [4]    __gsmgnss2_driver_hal_gpio_pwmGet
0x20000424       [4]    __gsmgnss2_driver_hal_gpio_intGet
0x20000428       [4]    __gsmgnss2_driver_hal_gpio_csSet
0x2000042C       [4]    __gsmgnss2_driver_hal_gpio_rstSet
0x20000430       [4]    __gsmgnss2_driver_c_watchdog_timer
0x20000434      [12]    __gsmgnss2_driver_currentEv
0x20000440     [256]    __gsmgnss2_driver_txBuff
0x20000540       [4]    ___System_CLOCK_IN_KHZ
0x20000544       [4]    _UART_Wr_Ptr
0x20000548       [4]    _UART_Rd_Ptr
0x2000054C       [4]    _UART_Rdy_Ptr
0x20000550       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1F74       [4]    __Lib_System_105_107_ADCPrescTable
0x2228      [21]    ?ICS?lstr1_Click_GSM_GNSS_2_STM
0x223D       [3]    ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_AT
0x2240       [4]    ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_ATI
0x2244       [5]    ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_ATE
0x2249      [12]    ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_IFC
0x2255      [10]    ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_CMGF
0x225F      [23]    ?ICS?lstr2_Click_GSM_GNSS_2_STM
0x2276      [13]    ?ICS?lstr3_Click_GSM_GNSS_2_STM
0x2283      [24]    ?ICS?lstr4_Click_GSM_GNSS_2_STM
0x229B      [29]    ?ICS?lstr5_Click_GSM_GNSS_2_STM
0x22B8       [8]    ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_CLCC
0x22C0      [22]    ?ICS?lstr6_Click_GSM_GNSS_2_STM
0x22D6       [4]    ?ICSClick_GSM_GNSS_2_STM_GSM_CMD_ATH
0x22DA       [1]    ?ICS?lstr1___gsmgnss2_driver
0x22DC     [108]    __GPIO_MODULE_USART2_PD56
0x2348     [108]    __GPIO_MODULE_USART1_PA9_10
0x23B4     [108]    __GPIO_MODULE_USART3_PD89
0x2420      [96]    __MIKROBUS1_GPIO
0x2480       [4]    ?ICS_timerCounter
0x2484      [17]    ?ICS?lstr7_Click_GSM_GNSS_2_STM
0x2495      [11]    ?ICS?lstr8_Click_GSM_GNSS_2_STM
0x24A0      [21]    ?ICS__gsmgnss2_driver_LUT_START_MARK
0x24B5      [18]    ?ICS__gsmgnss2_driver_LUT_END_MARK
0x24C7      [17]    ?ICS__gsmgnss2_driver_createEvent_tmp_L0
0x24D8      [16]    __GSMGNSS2_UART_CFG
0x24E8      [16]    __Lib_System_105_107_APBAHBPrescTable
0x24F8      [12]    __MIKROBUS1_UART
